[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "github-trending-scraper-backend"
version = "1.0.0"
description = "GitHub 趋势爬虫后端模块"
authors = [
    {name = "GitHub Trending Scraper Team"}
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2",
    "lxml>=4.9.0",
    "python-dotenv>=1.0.0",
    "psycopg2-binary>=2.9.9",
    "aiohttp>=3.9.1",
    "asyncio-throttle>=1.0.2",
    "pandas>=1.5.3",
    "numpy>=1.24.3",
    "pyyaml>=6.0.1",
    "click>=8.1.7",
    "schedule>=1.2.0",
    "urllib3>=1.26.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "matplotlib>=3.7.2",
    "seaborn>=0.12.2",
    "wordcloud>=1.9.2",
    "ipython>=8.17.2",
    "jupyter>=1.0.0",
    "bandit>=1.7.5"
]

[project.scripts]
github-scraper = "backend.scraper.main:main"
github-scheduler = "backend.scraper.scheduler:main"
github-analyzer = "backend.scraper.analyzers.data_analysis:main"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]
known_third_party = ["requests", "beautifulsoup4", "pandas", "numpy", "aiohttp"]

[tool.pytest.ini_options]
testpaths = ["tests/backend"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=backend",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=60"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests that require API access"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "__pycache__"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_args

[tool.coverage.run]
source = ["backend"]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "except KeyboardInterrupt:"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "requests.*",
    "beautifulsoup4.*",
    "pandas.*",
    "numpy.*",
    "schedule.*"
]
ignore_missing_imports = true
