{
  "keyword": "Messaging API",
  "repository_count": 95,
  "analysis_date": "2025-08-26T23:09:10.010170",
  "charts": {
    "language_distribution": {
      "data": {
        "total_languages": 4,
        "language_distribution": {
          "Python": 50,
          "Java": 30,
          "JavaScript": 10,
          "Rust": 5
        },
        "language_stars": {
          "Java": 0,
          "Python": 0,
          "JavaScript": 0,
          "Rust": 0
        },
        "language_avg_stars": {
          "Java": 0.0,
          "Python": 0.0,
          "JavaScript": 0.0,
          "Rust": 0.0
        },
        "top_languages": [
          [
            "Python",
            50
          ],
          [
            "Java",
            30
          ],
          [
            "JavaScript",
            10
          ],
          [
            "Rust",
            5
          ]
        ],
        "analyzed_at": "2025-08-26T23:09:09.896695"
      }
    },
    "stars_distribution": {
      "data": {
        "mean": 301.06315789473683,
        "min": 34,
        "max": 2806,
        "total": 0
      }
    },
    "common_packages": {
      "data": {}
    },
    "imported_libraries": {
      "data": {
        "os": 41,
        "sys": 26,
        "time": 19,
        "setuptools": 19,
        "json": 15,
        "re": 15,
        "requests": 14,
        "datetime": 10,
        "random": 9,
        "telethon": 9,
        "argparse": 8,
        "urllib": 8,
        "pickle": 8,
        "logging": 8,
        "subprocess": 7,
        "base64": 6,
        "csv": 6,
        "importlib": 5,
        "io": 5,
        "pathlib": 5
      }
    },
    "common_functions": {
      "data": {
        "run": 24,
        "main": 18,
        "prepare": 6,
        "get": 5,
        "decorator": 5,
        "render": 5,
        "get_header": 4,
        "banner": 4,
        "close": 4,
        "wrapper": 4,
        "compareFiles": 4,
        "msgworker": 3,
        "callback": 3,
        "start": 3,
        "help": 3,
        "clr": 3,
        "append": 3,
        "keys": 3,
        "apply": 3,
        "load_config": 3
      }
    },
    "tag_analysis": {
      "data": {
        "total_topics": 319,
        "topic_distribution": {
          "python": 18,
          "messaging": 15,
          "api": 12,
          "java": 7,
          "whatsapp": 7,
          "bot": 6,
          "chatbot": 6,
          "line": 5,
          "kafka": 4,
          "linebot": 4,
          "sdk": 4,
          "telegram": 4,
          "whatsapp-api": 4,
          "rest": 3,
          "sms": 3,
          "voice": 3,
          "whatsapp-bot": 3,
          "chat": 3,
          "iot": 3,
          "android": 3,
          "hacktoberfest": 3,
          "integration": 2,
          "services": 2,
          "soap": 2,
          "synapse": 2,
          "wso2": 2,
          "docker": 2,
          "notifications": 2,
          "wechat": 2,
          "telegram-bot": 2,
          "django": 2,
          "machine-learning": 2,
          "messaging-api": 2,
          "pypi": 2,
          "python3": 2,
          "slack": 2,
          "slack-api": 2,
          "phone": 2,
          "server-sdk": 2,
          "two-factor-authentication": 2,
          "verification": 2,
          "vonage": 2,
          "api-client": 2,
          "pubsub": 2,
          "llm": 2,
          "cli": 2,
          "cms": 2,
          "cloud": 2,
          "whatsapp-web": 2,
          "amqp": 2,
          "rust": 2,
          "business-process": 1,
          "esb": 1,
          "middleware": 1,
          "consumer": 1,
          "consumer-group": 1,
          "jmx": 1,
          "kafka-manager": 1,
          "kafka-topic": 1,
          "lag": 1,
          "offset": 1,
          "partition": 1,
          "reassignment": 1,
          "restful-api": 1,
          "topic": 1,
          "zookeeper": 1,
          "avro": 1,
          "elasticsearch": 1,
          "jib": 1,
          "json": 1,
          "kafka-connect": 1,
          "kafka-streams": 1,
          "mysql": 1,
          "schema-registry": 1,
          "spring-boot": 1,
          "spring-cloud-stream": 1,
          "spring-data-jpa": 1,
          "spring-web-mvc": 1,
          "springdoc-openapi": 1,
          "message-sending": 1,
          "wecom": 1,
          "wework": 1,
          "forwarder": 1,
          "heroku": 1,
          "mirroring": 1,
          "telegram-forward-bot": 1,
          "telegram-forwarder": 1,
          "telethon": 1,
          "ai-assistant": 1,
          "bard": 1,
          "bard-api": 1,
          "chat-gpt": 1,
          "chat-interface": 1,
          "chatbot-development": 1,
          "dialog-systems": 1,
          "fastapi": 1,
          "google-bard": 1,
          "natural-language-processing": 1,
          "line-bot": 1,
          "slack-cleaner": 1,
          "slack-free-plan": 1,
          "slackapi": 1,
          "meetings": 1,
          "messenger": 1,
          "nexmo": 1,
          "silent-authentication": 1,
          "text-message": 1,
          "verification-code": 1,
          "video": 1,
          "assistant": 1,
          "claude": 1,
          "claude-api": 1,
          "claude3": 1,
          "documented": 1,
          "easy-to-use": 1,
          "file-attachment": 1,
          "firefox": 1,
          "free": 1,
          "image-processing": 1,
          "image-recognition": 1,
          "large-file-upload": 1,
          "long-text": 1,
          "scraper": 1,
          "selenium": 1,
          "summarizer": 1,
          "unofficial-api": 1,
          "whatsapp-api-python": 1,
          "bots": 1,
          "facebook-messenger-bot": 1,
          "kikbot": 1,
          "asyncio": 1,
          "centrifugo": 1,
          "http": 1,
          "chatglm": 1,
          "chatgpt": 1,
          "gpt": 1,
          "langchain": 1,
          "llms": 1,
          "mattermost": 1,
          "webhooks": 1,
          "groupme": 1,
          "python-library": 1,
          "script": 1,
          "scripts": 1,
          "telegram-api": 1,
          "telegram-bot-api": 1,
          "telegram-bots": 1,
          "telegram-userbot": 1,
          "plivo": 1,
          "blocks": 1,
          "slack-bot": 1,
          "artificial-intelligence": 1,
          "data-workflow": 1,
          "deep-learning": 1,
          "devops": 1,
          "distributed-computing": 1,
          "enterprise-integrations": 1,
          "frameworks": 1,
          "parallel-computing": 1,
          "pipeline": 1,
          "task-queue": 1,
          "web-crawling": 1,
          "webapp": 1,
          "linkedin": 1,
          "linkedin-api": 1,
          "groups": 1,
          "whatsapp-automation": 1,
          "whatsappbot": 1,
          "automation": 1,
          "tuya": 1,
          "algo-trading": 1,
          "fyers-api": 1,
          "cloud-run": 1,
          "gcp-cloud-functions": 1,
          "google-cloud": 1,
          "google-cloud-platform": 1,
          "kotlin": 1,
          "spring": 1,
          "cloud-native": 1,
          "kubernetes": 1,
          "microservices": 1,
          "api-whatsapp": 1,
          "sdk-whatsapp": 1,
          "whatsapp-api-java": 1,
          "whatsapp-business": 1,
          "whatsapp-business-api": 1,
          "whatsapp-business-bot": 1,
          "whatsapp-business-sdk": 1,
          "whatsapp-chat": 1,
          "whatsapp-client": 1,
          "whatsapp-cloud": 1,
          "whatsapp-cloud-api-client": 1,
          "whatsapp-cloud-api-java": 1,
          "whatsapp-java": 1,
          "whatsapp-java-sdk": 1,
          "whatsapp-sdk": 1,
          "format-converter": 1,
          "mail": 1,
          "outlook": 1,
          "kafka-consumer": 1,
          "performance": 1,
          "queueing": 1,
          "android-application": 1,
          "android-library": 1,
          "hijack": 1,
          "hijacking-methods": 1,
          "cache": 1,
          "chaos-engineering": 1,
          "eventing": 1,
          "authentication": 1,
          "dtmf": 1,
          "phone-numbers": 1,
          "sms-api": 1,
          "telecom": 1,
          "two-factor": 1,
          "verify": 1,
          "video-api": 1,
          "i18n": 1,
          "minecraft": 1,
          "minecraft-plugin": 1,
          "spigot": 1,
          "spigot-plugin": 1,
          "hypixel": 1,
          "fcm": 1,
          "fcm-notifications": 1,
          "firebase": 1,
          "firebase-cloud-messaging": 1,
          "notification": 1,
          "push": 1,
          "api-gateway": 1,
          "apikey-manager": 1,
          "aws": 1,
          "aws-eks": 1,
          "docker-compose": 1,
          "eureka-server": 1,
          "feign-client": 1,
          "git-actions": 1,
          "grafana-prometheus": 1,
          "k8s": 1,
          "oauth2-and-keycloak": 1,
          "postgresql-database": 1,
          "rabbitmq": 1,
          "resilience4j-circuitbreaker": 1,
          "service-discovery": 1,
          "zipkin-sleuth": 1,
          "beacon": 1,
          "connection": 1,
          "demo": 1,
          "exchange-card": 1,
          "friends": 1,
          "game": 1,
          "gamesnake": 1,
          "hms": 1,
          "hms-nearby": 1,
          "huawei": 1,
          "message": 1,
          "nearby": 1,
          "nearby-service": 1,
          "online-game": 1,
          "jakartaee": 1,
          "javaee": 1,
          "jms": 1,
          "pulsar": 1,
          "bungeecord": 1,
          "channel": 1,
          "reactive-kafka": 1,
          "server-sent-events": 1,
          "spring-webflux": 1,
          "webflux-server": 1,
          "assert": 1,
          "power-assert": 1,
          "browser": 1,
          "jazz-plugin": 1,
          "midi": 1,
          "midi-messages": 1,
          "node": 1,
          "sysex": 1,
          "web-midi": 1,
          "web-midi-api": 1,
          "webmidi": 1,
          "mcp": 1,
          "mcp-server": 1,
          "realtime": 1,
          "scalability": 1,
          "synchronization": 1,
          "content-management": 1,
          "cosmicjs": 1,
          "headless-cms": 1,
          "javascript": 1,
          "nodejs": 1,
          "bulk-messages": 1,
          "bulk-messages-api": 1,
          "message-sender": 1,
          "phone-number": 1,
          "send-message": 1,
          "send-message-api": 1,
          "send-messages-api": 1,
          "wbm": 1,
          "whatsapp-bulk-message": 1,
          "whatsapp-bulk-messages": 1,
          "whatsapp-bulk-sender": 1,
          "whatsapp-library": 1,
          "whatsapp-message-sender": 1,
          "whatsapp-messages": 1,
          "whatsapp-sender": 1,
          "amqp-client": 1,
          "amqp0-9-1": 1,
          "async": 1,
          "commit": 1,
          "git": 1,
          "openai": 1,
          "edge-computing": 1,
          "micro-controllers": 1,
          "networking": 1,
          "robotics": 1,
          "ros2": 1,
          "chatterino": 1,
          "irc": 1,
          "twitch": 1
        },
        "top_topics": [
          [
            "python",
            18
          ],
          [
            "messaging",
            15
          ],
          [
            "api",
            12
          ],
          [
            "java",
            7
          ],
          [
            "whatsapp",
            7
          ],
          [
            "bot",
            6
          ],
          [
            "chatbot",
            6
          ],
          [
            "line",
            5
          ],
          [
            "kafka",
            4
          ],
          [
            "linebot",
            4
          ],
          [
            "sdk",
            4
          ],
          [
            "telegram",
            4
          ],
          [
            "whatsapp-api",
            4
          ],
          [
            "rest",
            3
          ],
          [
            "sms",
            3
          ],
          [
            "voice",
            3
          ],
          [
            "whatsapp-bot",
            3
          ],
          [
            "chat",
            3
          ],
          [
            "iot",
            3
          ],
          [
            "android",
            3
          ]
        ],
        "analyzed_at": "2025-08-26T23:09:09.898122"
      }
    }
  },
  "trends": {
    "libraries": {
      "os": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 41,
        "popularity": "高"
      },
      "sys": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 26,
        "popularity": "高"
      },
      "time": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 19,
        "popularity": "高"
      },
      "setuptools": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 19,
        "popularity": "高"
      },
      "json": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 15,
        "popularity": "高"
      },
      "re": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 15,
        "popularity": "高"
      },
      "requests": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 14,
        "popularity": "高"
      },
      "datetime": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 10,
        "popularity": "高"
      },
      "random": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 9,
        "popularity": "高"
      },
      "telethon": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 9,
        "popularity": "高"
      },
      "argparse": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 8,
        "popularity": "高"
      },
      "urllib": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 8,
        "popularity": "高"
      },
      "pickle": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 8,
        "popularity": "高"
      },
      "logging": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 8,
        "popularity": "高"
      },
      "subprocess": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 7,
        "popularity": "高"
      },
      "base64": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 6,
        "popularity": "高"
      },
      "csv": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 6,
        "popularity": "高"
      },
      "importlib": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 5,
        "popularity": "高"
      },
      "io": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 5,
        "popularity": "高"
      },
      "pathlib": {
        "trend": "上升",
        "growth": "+15%",
        "usage_count": 5,
        "popularity": "高"
      }
    },
    "packages": {},
    "functions": {}
  },
  "repositories": [
    {
      "id": 170,
      "name": "product-ei",
      "owner": "wso2",
      "full_name": "wso2/product-ei",
      "description": "An open source, a high-performance hybrid integration platform that allows developers quick integration with any application, data, or system.",
      "language": "Java",
      "stars": 382,
      "forks": 282,
      "url": "https://github.com/wso2/product-ei",
      "tags": [
        "api",
        "business-process",
        "esb",
        "integration",
        "messaging",
        "middleware",
        "rest",
        "services",
        "soap",
        "synapse",
        "wso2"
      ]
    },
    {
      "id": 271,
      "name": "FTC-Skystone-Dark-Angels-Romania-2020",
      "owner": "chrisneagu",
      "full_name": "chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020",
      "description": "NOTICE This repository contains the public FTC SDK for the SKYSTONE (2019-2020) competition season. If you are looking for the current season's FTC SDK software, please visit the new and permanent home of the public FTC SDK:  FtcRobotController repository  Welcome! This GitHub repository contains the source code that is used to build an Android app to control a FIRST Tech Challenge competition robot. To use this SDK, download/clone the entire project to your local computer.  Getting Started If you are new to robotics or new to the FIRST Tech Challenge, then you should consider reviewing the FTC Blocks Tutorial to get familiar with how to use the control system:        FTC Blocks Online Tutorial  Even if you are an advanced Java programmer, it is helpful to start with the FTC Blocks tutorial, and then migrate to the OnBot Java Tool or to Android Studio afterwards.  Downloading the Project If you are an Android Studio programmer, there are several ways to download this repo. Note that if you use the Blocks or OnBot Java Tool to program your robot, then you do not need to download this repository.  If you are a git user, you can clone the most current version of the repository:             git clone https://github.com/FIRST-Tech-Challenge/SKYSTONE.git  Or, if you prefer, you can use the \"Download Zip\" button available through the main repository page. Downloading the project as a .ZIP file will keep the size of the download manageable.  You can also download the project folder (as a .zip or .tar.gz archive file) from the Downloads subsection of the Releases page for this repository.  Once you have downloaded and uncompressed (if needed) your folder, you can use Android Studio to import the folder (\"Import project (Eclipse ADT, Gradle, etc.)\").  Getting Help User Documentation and Tutorials FIRST maintains online documentation with information and tutorials on how to use the FIRST Tech Challenge software and robot control system. You can access this documentation using the following link:        SKYSTONE Online Documentation  Note that the online documentation is an \"evergreen\" document that is constantly being updated and edited. It contains the most current information about the FIRST Tech Challenge software and control system.  Javadoc Reference Material The Javadoc reference documentation for the FTC SDK is now available online. Click on the following link to view the FTC SDK Javadoc documentation as a live website:        FTC Javadoc Documentation  Documentation for the FTC SDK is also included with this repository. There is a subfolder called \"doc\" which contains several subfolders:  The folder \"apk\" contains the .apk files for the FTC Driver Station and FTC Robot Controller apps. The folder \"javadoc\" contains the JavaDoc user documentation for the FTC SDK. Online User Forum For technical questions regarding the Control System or the FTC SDK, please visit the FTC Technology forum:        FTC Technology Forum  Release Information Version 5.5 (20200824-090813) Version 5.5 requires Android Studio 4.0 or later.  New features Adds support for calling custom Java classes from Blocks OpModes (fixes SkyStone issue #161). Classes must be in the org.firstinspires.ftc.teamcode package. Methods must be public static and have no more than 21 parameters. Parameters declared as OpMode, LinearOpMode, Telemetry, and HardwareMap are supported and the argument is provided automatically, regardless of the order of the parameters. On the block, the sockets for those parameters are automatically filled in. Parameters declared as char or java.lang.Character will accept any block that returns text and will only use the first character in the text. Parameters declared as boolean or java.lang.Boolean will accept any block that returns boolean. Parameters declared as byte, java.lang.Byte, short, java.lang.Short, int, java.lang.Integer, long, or java.lang.Long, will accept any block that returns a number and will round that value to the nearest whole number. Parameters declared as float, java.lang.Float, double, java.lang.Double will accept any block that returns a number. Adds telemetry API method for setting display format Classic Monospace HTML (certain tags only) Adds blocks support for switching cameras. Adds Blocks support for TensorFlow Object Detection with a custom model. Adds support for uploading a custom TensorFlow Object Detection model in the Manage page, which is especially useful for Blocks and OnBotJava users. Shows new Control Hub blink codes when the WiFi band is switched using the Control Hub's button (only possible on Control Hub OS 1.1.2) Adds new warnings which can be disabled in the Advanced RC Settings Mismatched app versions warning Unnecessary 2.4 GHz WiFi usage warning REV Hub is running outdated firmware (older than version 1.8.2) Adds support for Sony PS4 gamepad, and reworks how gamepads work on the Driver Station Removes preference which sets gamepad type based on driver position. Replaced with menu which allows specifying type for gamepads with unknown VID and PID Attempts to auto-detect gamepad type based on USB VID and PID If gamepad VID and PID is not known, use type specified by user for that VID and PID If gamepad VID and PID is not known AND the user has not specified a type for that VID and PID, an educated guess is made about how to map the gamepad Driver Station will now attempt to automatically recover from a gamepad disconnecting, and re-assign it to the position it was assigned to when it dropped If only one gamepad is assigned and it drops: it can be recovered If two gamepads are assigned, and have different VID/PID signatures, and only one drops: it will be recovered If two gamepads are assigned, and have different VID/PID signatures, and BOTH drop: both will be recovered If two gamepads are assigned, and have the same VID/PID signatures, and only one drops: it will be recovered If two gamepads are assigned, and have the same VID/PID signatures, and BOTH drop: neither will be recovered, because of the ambiguity of the gamepads when they re-appear on the USB bus. There is currently one known edge case: if there are two gamepads with the same VID/PID signature plugged in, but only one is assigned, and they BOTH drop, it's a 50-50 chance of which one will be chosen for automatic recovery to the assigned position: it is determined by whichever one is re-enumerated first by the USB bus controller. Adds landscape user interface to Driver Station New feature: practice timer with audio cues New feature (Control Hub only): wireless network connection strength indicator (0-5 bars) New feature (Control Hub only): tapping on the ping/channel display will switch to an alternate display showing radio RX dBm and link speed (tap again to switch back) The layout will NOT autorotate. You can switch the layout from the Driver Station's settings menu. Breaking changes Removes support for Android versions 4.4 through 5.1 (KitKat and Lollipop). The minSdkVersion is now 23. Removes the deprecated LinearOpMode methods waitOneFullHardwareCycle() and waitForNextHardwareCycle() Enhancements Handles RS485 address of Control Hub automatically The Control Hub is automatically given a reserved address Existing configuration files will continue to work All addresses in the range of 1-10 are still available for Expansion Hubs The Control Hub light will now normally be solid green, without blinking to indicate the address The Control Hub will not be shown on the Expansion Hub Address Change settings page Improves REV Hub firmware updater The user can now choose between all available firmware update files Version 1.8.2 of the REV Hub firmware is bundled into the Robot Controller app. Text was added to clarify that Expansion Hubs can only be updated via USB. Firmware update speed was reduced to improve reliability Allows REV Hub firmware to be updated directly from the Manage webpage Improves log viewer on Robot Controller Horizontal scrolling support (no longer word wrapped) Supports pinch-to-zoom Uses a monospaced font Error messages are highlighted New color scheme Attempts to force-stop a runaway/stuck OpMode without restarting the entire app Not all types of runaway conditions are stoppable, but if the user code attempts to talk to hardware during the runaway, the system should be able to capture it. Makes various tweaks to the Self Inspect screen Renames \"OS version\" entry to \"Android version\" Renames \"WiFi Direct Name\" to \"WiFi Name\" Adds Control Hub OS version, when viewing the report of a Control Hub Hides the airplane mode entry, when viewing the report of a Control Hub Removes check for ZTE Speed Channel Changer Shows firmware version for all Expansion and Control Hubs Reworks network settings portion of Manage page All network settings are now applied with a single click The WiFi Direct channel of phone-based Robot Controllers can now be changed from the Manage page WiFi channels are filtered by band (2.4 vs 5 GHz) and whether they overlap with other channels The current WiFi channel is pre-selected on phone-based Robot Controllers, and Control Hubs running OS 1.1.2 or later. On Control Hubs running OS 1.1.2 or later, you can choose to have the system automatically select a channel on the 5 GHz band Improves OnBotJava New light and dark themes replace the old themes (chaos, github, chrome,...) the new default theme is light and will be used when you first update to this version OnBotJava now has a tabbed editor Read-only offline mode Improves function of \"exit\" menu item on Robot Controller and Driver Station Now guaranteed to be fully stopped and unloaded from memory Shows a warning message if a LinearOpMode exists prematurely due to failure to monitor for the start condition Improves error message shown when the Driver Station and Robot Controller are incompatible with each other Driver Station OpMode Control Panel now disabled while a Restart Robot is in progress Disables advanced settings related to WiFi direct when the Robot Controller is a Control Hub. Tint phone battery icons on Driver Station when low/critical. Uses names \"Control Hub Portal\" and \"Control Hub\" (when appropriate) in new configuration files Improve I2C read performance Very large improvement on Control Hub; up to ~2x faster with small (e.g. 6 byte) reads Not as apparent on Expansion Hubs connected to a phone Update/refresh build infrastructure Update to 'androidx' support library from 'com.android.support:appcompat', which is end-of-life Update targetSdkVersion and compileSdkVersion to 28 Update Android Studio's Android plugin to latest Fix reported build timestamp in 'About' screen Add sample illustrating manual webcam use: ConceptWebcam Bug fixes Fixes SkyStone issue #248 Fixes SkyStone issue #232 and modifies bulk caching semantics to allow for cache-preserving MANUAL/AUTO transitions. Improves performance when REV 2M distance sensor is unplugged Improves readability of Toast messages on certain devices Allows a Driver Station to connect to a Robot Controller after another has disconnected Improves generation of fake serial numbers for UVC cameras which do not provide a real serial number Previously some devices would assign such cameras a serial of 0:0 and fail to open and start streaming Fixes ftc_app issue #638. Fixes a slew of bugs with the Vuforia camera monitor including: Fixes bug where preview could be displayed with a wonky aspect ratio Fixes bug where preview could be cut off in landscape Fixes bug where preview got totally messed up when rotating phone Fixes bug where crosshair could drift off target when using webcams Fixes issue in UVC driver on some devices (ftc_app 681) if streaming was started/stopped multiple times in a row Issue manifested as kernel panic on devices which do not have this kernel patch. On affected devices which do have the patch, the issue was manifest as simply a failure to start streaming. The Tech Team believes that the root cause of the issue is a bug in the Linux kernel XHCI driver. A workaround was implemented in the SDK UVC driver. Fixes bug in UVC driver where often half the frames from the camera would be dropped (e.g. only 15FPS delivered during a streaming session configured for 30FPS). Fixes issue where TensorFlow Object Detection would show results whose confidence was lower than the minimum confidence parameter. Fixes a potential exploitation issue of CVE-2019-11358 in OnBotJava Fixes changing the address of an Expansion Hub with additional Expansion Hubs connected to it Preserves the Control Hub's network connection when \"Restart Robot\" is selected Fixes issue where device scans would fail while the Robot was restarting Fix RenderScript usage Use androidx.renderscript variant: increased compatibility Use RenderScript in Java mode, not native: simplifies build Fixes webcam-frame-to-bitmap conversion problem: alpha channel wasn't being initialized, only R, G, & B Fixes possible arithmetic overflow in Deadline Fixes deadlock in Vuforia webcam support which could cause 5-second delays when stopping OpMode Version 5.4 (20200108-101156) Fixes SkyStone issue #88 Adds an inspection item that notes when a robot controller (Control Hub) is using the factory default password. Fixes SkyStone issue #61 Fixes SkyStone issue #142 Fixes ftc_app issue #417 by adding more current and voltage monitoring capabilities for REV Hubs. Fixes a crash sometimes caused by OnBotJava activity Improves OnBotJava autosave functionality ftc_app #738 Fixes system responsiveness issue when an Expansion Hub is disconnected Fixes issue where IMU initialization could prevent Op Modes from stopping Fixes issue where AndroidTextToSpeech.speak() would fail if it was called too early Adds telemetry.speak() methods and blocks, which cause the Driver Station (if also updated) to speak text Adds and improves Expansion Hub-related warnings Improves Expansion Hub low battery warning Displays the warning immediately after the hub reports it Specifies whether the condition is current or occurred temporarily during an OpMode run Displays which hubs reported low battery Displays warning when hub loses and regains power during an OpMode run Fixes the hub's LED pattern after this condition Displays warning when Expansion Hub is not responding to commands Specifies whether the condition is current or occurred temporarily during an OpMode run Clarifies warning when Expansion Hub is not present at startup Specifies that this condition requires a Robot Restart before the hub can be used. The hub light will now accurately reflect this state Improves logging and reduces log spam during these conditions Syncs the Control Hub time and timezone to a connected web browser programming the robot, if a Driver Station is not available. Adds bulk read functionality for REV Hubs A bulk caching mode must be set at the Hub level with LynxModule#setBulkCachingMode(). This applies to all relevant SDK hardware classes that reference that Hub. The following following Hub bulk caching modes are available: BulkCachingMode.OFF (default): All hardware calls operate as usual. Bulk data can read through LynxModule#getBulkData() and processed manually. BulkCachingMode.AUTO: Applicable hardware calls are served from a bulk read cache that is cleared/refreshed automatically to ensure identical commands don't hit the same cache. The cache can also be cleared manually with LynxModule#clearBulkCache(), although this is not recommended. (advanced users) BulkCachingMode.MANUAL: Same as BulkCachingMode.AUTO except the cache is never cleared automatically. To avoid getting stale data, the cache must be manually cleared at the beginning of each loop body or as the user deems appropriate. Removes PIDF Annotation values added in Rev 5.3 (to AndyMark, goBILDA and TETRIX motor configurations). The new motor types will still be available but their Default control behavior will revert back to Rev 5.2 Adds new ConceptMotorBulkRead sample Opmode to demonstrate and compare Motor Bulk-Read modes for reducing I/O latencies. Version 5.3 (20191004-112306) Fixes external USB/UVC webcam support Makes various bugfixes and improvements to Blocks page, including but not limited to: Many visual tweaks Browser zoom and window resize behave better Resizing the Java preview pane works better and more consistently across browsers The Java preview pane consistently gets scrollbars when needed The Java preview pane is hidden by default on phones Internet Explorer 11 should work Large dropdown lists display properly on lower res screens Disabled buttons are now visually identifiable as disabled A warning is shown if a user selects a TFOD sample, but their device is not compatible Warning messages in a Blocks op mode are now visible by default. Adds goBILDA 5201 and 5202 motors to Robot Configurator Adds PIDF Annotation values to AndyMark, goBILDA and TETRIX motor configurations. This has the effect of causing the RUN_USING_ENCODERS and RUN_TO_POSITION modes to use PIDF vs PID closed loop control on these motors. This should provide more responsive, yet stable, speed control. PIDF adds Feedforward control to the basic PID control loop. Feedforward is useful when controlling a motor's speed because it \"anticipates\" how much the control voltage must change to achieve a new speed set-point, rather than requiring the integrated error to change sufficiently. The PIDF values were chosen to provide responsive, yet stable, speed control on a lightly loaded motor. The more heavily a motor is loaded (drag or friction), the more noticable the PIDF improvement will be. Fixes startup crash on Android 10 Fixes ftc_app issue #712 (thanks to FROGbots-4634) Fixes ftc_app issue #542 Allows \"A\" and lowercase letters when naming device through RC and DS apps. Version 5.2 (20190905-083277) Fixes extra-wide margins on settings activities, and placement of the new configuration button Adds Skystone Vuforia image target data. Includes sample Skystone Vuforia Navigation op modes (Java). Includes sample Skystone Vuforia Navigation op modes (Blocks). Adds TensorFlow inference model (.tflite) for Skystone game elements. Includes sample Skystone TensorFlow op modes (Java). Includes sample Skystone TensorFlow op modes (Blocks). Removes older (season-specific) sample op modes. Includes 64-bit support (to comply with Google Play requirements). Protects against Stuck OpModes when a Restart Robot is requested. (Thanks to FROGbots-4634) (ftc_app issue #709) Blocks related changes: Fixes bug with blocks generated code when hardware device name is a java or javascript reserved word. Shows generated java code for blocks, even when hardware items are missing from the active configuration. Displays warning icon when outdated Vuforia and TensorFlow blocks are used (SkyStone issue #27) Version 5.1 (20190820-222104) Defines default PIDF parameters for the following motors: REV Core Hex Motor REV 20:1 HD Hex Motor REV 40:1 HD Hex Motor Adds back button when running on a device without a system back button (such as a Control Hub) Allows a REV Control Hub to update the firmware on a REV Expansion Hub via USB Fixes SkyStone issue #9 Fixes ftc_app issue #715 Prevents extra DS User clicks by filtering based on current state. Prevents incorrect DS UI state changes when receiving new OpMode list from RC Adds support for REV Color Sensor V3 Adds a manual-refresh DS Camera Stream for remotely viewing RC camera frames. To show the stream on the DS, initialize but do not run a stream-enabled opmode, select the Camera Stream option in the DS menu, and tap the image to refresh. This feature is automatically enabled when using Vuforia or TFOD—no additional RC configuration is required for typical use cases. To hide the stream, select the same menu item again. Note that gamepads are disabled and the selected opmode cannot be started while the stream is open as a safety precaution. To use custom streams, consult the API docs for CameraStreamServer#setSource and CameraStreamSource. Adds many Star Wars sounds to RobotController resources. Added SKYSTONE Sounds Chooser Sample Program. Switches out startup, connect chimes, and error/warning sounds for Star Wars sounds Updates OnBot Java to use a WebSocket for communication with the robot The OnBot Java page no longer has to do a full refresh when a user switches from editing one file to another Known issues:  Camera Stream The Vuforia camera stream inherits the issues present in the phone preview (namely ftc_app issue #574). This problem does not affect the TFOD camera stream even though it receives frames from Vuforia. The orientation of the stream frames may not always match the phone preview. For now, these frames may be rotated manually via a custom CameraStreamSource if desired. OnBotJava Browser back button may not always work correctly It's possible for a build to be queued, but not started. The OnBot Java build console will display a warning if this occurs. A user might not realize they are editing a different file if the user inadvertently switches from one file to another since this switch is now seamless. The name of the currently open file is displayed in the browser tab. Version 5.0 (built on 19.06.14) Support for the REV Robotics Control Hub. Adds a Java preview pane to the Blocks editor. Adds a new offline export feature to the Blocks editor. Display wifi channel in Network circle on Driver Station. Adds calibration for Logitech C270 Updates build tooling and target SDK. Compliance with Google's permissions infrastructure (Required after build tooling update). Keep Alives to mitigate the Motorola wifi scanning problem. Telemetry substitute no longer necessary. Improves Vuforia error reporting. Fixes ftctechnh/ftc_app issues 621, 713. Miscellaneous bug fixes and improvements. Version 4.3 (built on 18.10.31) Includes missing TensorFlow-related libraries and files. Version 4.2 (built on 18.10.30) Includes fix to avoid deadlock situation with WatchdogMonitor which could result in USB communication errors. Comm error appeared to require that user disconnect USB cable and restart the Robot Controller app to recover. robotControllerLog.txt would have error messages that included the words \"E RobotCore: lynx xmit lock: #### abandoning lock:\" Includes fix to correctly list the parent module address for a REV Robotics Expansion Hub in a configuration (.xml) file. Bug in versions 4.0 and 4.1 would incorrect list the address module for a parent REV Robotics device as \"1\". If the parent module had a higher address value than the daisy-chained module, then this bug would prevent the Robot Controller from communicating with the downstream Expansion Hub. Added requirement for ACCESS_COARSE_LOCATION to allow a Driver Station running Android Oreo to scan for Wi-Fi Direct devices. Added google() repo to build.gradle because aapt2 must be downloaded from the google() repository beginning with version 3.2 of the Android Gradle Plugin. Important Note: Android Studio users will need to be connected to the Internet the first time build the ftc_app project. Internet connectivity is required for the first build so the appropriate files can be downloaded from the Google repository. Users should not need to be connected to the Internet for subsequent builds. This should also fix buid issue where Android Studio would complain that it \"Could not find com.android.tools.lint:lint-gradle:26.1.4\" (or similar). Added support for REV Spark Mini motor controller as part of the configuration menu for a servo/PWM port on the REV Expansion Hub. Provide examples for playing audio files in an Op Mode. Block Development Tool Changes Includes a fix for a problem with the Velocity blocks that were reported in the FTC Technology forum (Blocks Programming subforum). Change the \"Save completed successfully.\" message to a white color so it will contrast with a green background. Fixed the \"Download image\" feature so it will work if there are text blocks in the op mode. Introduce support for Google's TensorFlow Lite technology for object detetion for 2018-2019 game. TensorFlow lite can recognize Gold Mineral and Silver Mineral from 2018-2019 game. Example Java and Block op modes are included to show how to determine the relative position of the gold block (left, center, right). Version 4.1 (released on 18.09.24) Changes include:  Fix to prevent crash when deprecated configuration annotations are used. Change to allow FTC Robot Controller APK to be auto-updated using FIRST Global Control Hub update scripts. Removed samples for non supported / non legal hardware. Improvements to Telemetry.addData block with \"text\" socket. Updated Blocks sample op mode list to include Rover Ruckus Vuforia example. Update SDK library version number. Version 4.0 (released on 18.09.12) Changes include:  Initial support for UVC compatible cameras  If UVC camera has a unique serial number, RC will detect and enumerate by serial number. If UVC camera lacks a unique serial number, RC will only support one camera of that type connected. Calibration settings for a few cameras are included (see TeamCode/src/main/res/xml/teamwebcamcalibrations.xml for details). User can upload calibration files from Program and Manage web interface. UVC cameras seem to draw a fair amount of electrical current from the USB bus. This does not appear to present any problems for the REV Robotics Control Hub. This does seem to create stability problems when using some cameras with an Android phone-based Robot Controller. FTC Tech Team is investigating options to mitigate this issue with the phone-based Robot Controllers. Updated sample Vuforia Navigation and VuMark Op Modes to demonstrate how to use an internal phone-based camera and an external UVC webcam. Support for improved motor control.  REV Robotics Expansion Hub firmware 1.8 and greater will support a feed forward mechanism for closed loop motor control. FTC SDK has been modified to support PIDF coefficients (proportional, integral, derivative, and feed forward). FTC Blocks development tool modified to include PIDF programming blocks. Deprecated older PID-related methods and variables. REV's 1.8.x PIDF-related changes provide a more linear and accurate way to control a motor. Wireless  Added 5GHz support for wireless channel changing for those devices that support it. Tested with Moto G5 and E4 phones. Also tested with other (currently non-approved) phones such as Samsung Galaxy S8. Improved Expansion Hub firmware update support in Robot Controller app  Changes to make the system more robust during the firmware update process (when performed through Robot Controller app). User no longer has to disconnect a downstream daisy-chained Expansion Hub when updating an Expansion Hub's firmware. If user is updating an Expansion Hub's firmware through a USB connection, he/she does not have to disconnect RS485 connection to other Expansion Hubs. The user still must use a USB connection to update an Expansion Hub's firmware. The user cannot update the Expansion Hub firmware for a downstream device that is daisy chained through an RS485 connection. If an Expansion Hub accidentally gets \"bricked\" the Robot Controller app is now more likely to recognize the Hub when it scans the USB bus. Robot Controller app should be able to detect an Expansion Hub, even if it accidentally was bricked in a previous update attempt. Robot Controller app should be able to install the firmware onto the Hub, even if if accidentally was bricked in a previous update attempt. Resiliency  FTC software can detect and enable an FTDI reset feature that is available with REV Robotics v1.8 Expansion Hub firmware and greater. When enabled, the Expansion Hub can detect if it hasn't communicated with the Robot Controller over the FTDI (USB) connection. If the Hub hasn't heard from the Robot Controller in a while, it will reset the FTDI connection. This action helps system recover from some ESD-induced disruptions. Various fixes to improve reliability of FTC software. Blocks  Fixed errors with string and list indices in blocks export to java. Support for USB connected UVC webcams. Refactored optimized Blocks Vuforia code to support Rover Ruckus image targets. Added programming blocks to support PIDF (proportional, integral, derivative and feed forward) motor control. Added formatting options (under Telemetry and Miscellaneous categories) so user can set how many decimal places to display a numerical value. Support to play audio files (which are uploaded through Blocks web interface) on Driver Station in addition to the Robot Controller. Fixed bug with Download Image of Blocks feature. Support for REV Robotics Blinkin LED Controller. Support for REV Robotics 2m Distance Sensor. Added support for a REV Touch Sensor (no longer have to configure as a generic digital device). Added blocks for DcMotorEx methods. These are enhanced methods that you can use when supported by the motor controller hardware. The REV Robotics Expansion Hub supports these enhanced methods. Enhanced methods include methods to get/set motor velocity (in encoder pulses per second), get/set PIDF coefficients, etc.. Modest Improvements in Logging  Decrease frequency of battery checker voltage statements. Removed non-FTC related log statements (wherever possible). Introduced a \"Match Logging\" feature. Under \"Settings\" a user can enable/disable this feature (it's disabled by default). If enabled, user provides a \"Match Number\" through the Driver Station user interface (top of the screen). The Match Number is used to create a log file specifically with log statements from that particular Op Mode run. Match log files are stored in /sdcard/FIRST/matlogs on the Robot Controller. Once an op mode run is complete, the Match Number is cleared. This is a convenient way to create a separate match log with statements only related to a specific op mode run. New Devices  Support for REV Robotics Blinkin LED Controller. Support for REV Robotics 2m Distance Sensor. Added configuration option for REV 20:1 HD Hex Motor. Added support for a REV Touch Sensor (no longer have to configure as a generic digital device). Miscellaneous  Fixed some errors in the definitions for acceleration and velocity in our javadoc documentation. Added ability to play audio files on Driver Station When user is configuring an Expansion Hub, the LED on the Expansion Hub will change blink pattern (purple-cyan) to indicate which Hub is currently being configured. Renamed I2cSensorType to I2cDeviceType. Added an external sample Op Mode that demonstrates localization using 2018-2019 (Rover Ruckus presented by QualComm) Vuforia targets. Added an external sample Op Mode that demonstrates how to use the REV Robotics 2m Laser Distance Sensor. Added an external sample Op Mode that demonstrates how to use the REV Robotics Blinkin LED Controller. Re-categorized external Java sample Op Modes to \"TeleOp\" instead of \"Autonomous\". Known issues:  Initial support for UVC compatible cameras  UVC cameras seem to draw significant amount of current from the USB bus. This does not appear to present any problems for the REV Robotics Control Hub. This does seem to create stability problems when using some cameras with an Android phone-based Robot Controller. FTC Tech Team is investigating options to mitigate this issue with the phone-based Robot Controllers. There might be a possible deadlock which causes the RC to become unresponsive when using a UVC webcam with a Nougat Android Robot Controller. Wireless  When user selects a wireless channel, this channel does not necessarily persist if the phone is power cycled. Tech Team is hoping to eventually address this issue in a future release. Issue has been present since apps were introduced (i.e., it is not new with the v4.0 release). Wireless channel is not currently displayed for WiFi Direct connections. Miscellaneous  The blink indication feature that shows which Expansion Hub is currently being configured does not work for a newly created configuration file. User has to first save a newly created configuration file and then close and re-edit the file in order for blink indicator to work. Version 3.6 (built on 17.12.18) Changes include:  Blocks Changes Uses updated Google Blockly software to allow users to edit their op modes on Apple iOS devices (including iPad and iPhone). Improvement in Blocks tool to handle corrupt op mode files. Autonomous op modes should no longer get switched back to tele-op after re-opening them to be edited. The system can now detect type mismatches during runtime and alert the user with a message on the Driver Station. Updated javadoc documentation for setPower() method to reflect correct range of values (-1 to +1). Modified VuforiaLocalizerImpl to allow for user rendering of frames Added a user-overrideable onRenderFrame() method which gets called by the class's renderFrame() method. Version 3.5 (built on 17.10.30) Changes with version 3.5 include:  Introduced a fix to prevent random op mode stops, which can occur after the Robot Controller app has been paused and then resumed (for example, when a user temporarily turns off the display of the Robot Controller phone, and then turns the screen back on). Introduced a fix to prevent random op mode stops, which were previously caused by random peer disconnect events on the Driver Station. Fixes issue where log files would be closed on pause of the RC or DS, but not re-opened upon resume. Fixes issue with battery handler (voltage) start/stop race. Fixes issue where Android Studio generated op modes would disappear from available list in certain situations. Fixes problem where OnBot Java would not build on REV Robotics Control Hub. Fixes problem where OnBot Java would not build if the date and time on the Robot Controller device was \"rewound\" (set to an earlier date/time). Improved error message on OnBot Java that occurs when renaming a file fails. Removed unneeded resources from android.jar binaries used by OnBot Java to reduce final size of Robot Controller app. Added MR_ANALOG_TOUCH_SENSOR block to Blocks Programming Tool. Version 3.4 (built on 17.09.06) Changes with version 3.4 include:  Added telemetry.update() statement for BlankLinearOpMode template. Renamed sample Block op modes to be more consistent with Java samples. Added some additional sample Block op modes. Reworded OnBot Java readme slightly. Version 3.3 (built on 17.09.04) This version of the software includes improves for the FTC Blocks Programming Tool and the OnBot Java Programming Tool.  Changes with verion 3.3 include:  Android Studio ftc_app project has been updated to use Gradle Plugin 2.3.3. Android Studio ftc_app project is already using gradle 3.5 distribution. Robot Controller log has been renamed to /sdcard/RobotControllerLog.txt (note that this change was actually introduced w/ v3.2). Improvements in I2C reliability. Optimized I2C read for REV Expansion Hub, with v1.7 firmware or greater. Updated all external/samples (available through OnBot and in Android project folder). Vuforia Added support for VuMarks that will be used for the 2017-2018 season game. Blocks Update to latest Google Blockly release. Sample op modes can be selected as a template when creating new op mode. Fixed bug where the blocks would disappear temporarily when mouse button is held down. Added blocks for Range.clip and Range.scale. User can now disable/enable Block op modes. Fix to prevent occasional Blocks deadlock. OnBot Java Significant improvements with autocomplete function for OnBot Java editor. Sample op modes can be selected as a template when creating new op mode. Fixes and changes to complete hardware setup feature. Updated (and more useful) onBot welcome message. Known issues:  Android Studio After updating to the new v3.3 Android Studio project folder, if you get error messages indicating \"InvalidVirtualFileAccessException\" then you might need to do a File->Invalidate Caches / Restart to clear the error. OnBot Java Sometimes when you push the build button to build all op modes, the RC returns an error message that the build failed. If you press the build button a second time, the build typically suceeds. Version 3.2 (built on 17.08.02) This version of the software introduces the \"OnBot Java\" Development Tool. Similar to the FTC Blocks Development Tool, the FTC OnBot Java Development Tool allows a user to create, edit and build op modes dynamically using only a Javascript-enabled web browser.  The OnBot Java Development Tool is an integrated development environment (IDE) that is served up by the Robot Controller. Op modes are created and edited using a Javascript-enabled browser (Google Chromse is recommended). Op modes are saved on the Robot Controller Android device directly.  The OnBot Java Development Tool provides a Java programming environment that does NOT need Android Studio.  Changes with version 3.2 include:  Enhanced web-based development tools  Introduction of OnBot Java Development Tool. Web-based programming and management features are \"always on\" (user no longer needs to put Robot Controller into programming mode). Web-based management interface (where user can change Robot Controller name and also easily download Robot Controller log file). OnBot Java, Blocks and Management features available from web based interface. Blocks Programming Development Tool:  Changed \"LynxI2cColorRangeSensor\" block to \"REV Color/range sensor\" block. Fixed tooltip for ColorSensor.isLightOn block. Added blocks for ColorSensor.getNormalizedColors and LynxI2cColorRangeSensor.getNormalizedColors. Added example op modes for digital touch sensor and REV Robotics Color Distance sensor.  User selectable color themes.  Includes many minor enhancements and fixes (too numerous to list).  Known issues:  Auto complete function is incomplete and does not support the following (for now): Access via this keyword Access via super keyword Members of the super cloass, not overridden by the class Any methods provided in the current class Inner classes Can't handle casted objects Any objects coming from an parenthetically enclosed expression Version 3.10 (built on 17.05.09) This version of the software provides support for the REV Robotics Expansion Hub. This version also includes improvements in the USB communication layer in an effort to enhance system resiliency. If you were using a 2.x version of the software previously, updating to version 3.1 requires that you also update your Driver Station software in addition to updating the Robot Controller software.  Also note that in version 3.10 software, the setMaxSpeed and getMaxSpeed methods are no longer available (not deprecated, they have been removed from the SDK). Also note that the the new 3.x software incorporates motor profiles that a user can select as he/she configures the robot.  Changes include:  Blocks changes Added VuforiaTrackableDefaultListener.getPose and Vuforia.trackPose blocks. Added optimized blocks support for Vuforia extended tracking. Added atan2 block to the math category. Added useCompetitionFieldTargetLocations parameter to Vuforia.initialize block. If set to false, the target locations are placed at (0,0,0) with target orientation as specified in https://github.com/gearsincorg/FTCVuforiaDemo/blob/master/Robot_Navigation.java tutorial op mode. Incorporates additional improvements to USB comm layer to improve system resiliency (to recover from a greater number of communication disruptions). Additional Notes Regarding Version 3.00 (built on 17.04.13)  In addition to the release changes listed below (see section labeled \"Version 3.00 (built on 17.04.013)\"), version 3.00 has the following important changes:  Version 3.00 software uses a new version of the FTC Robocol (robot protocol). If you upgrade to v3.0 on the Robot Controller and/or Android Studio side, you must also upgrade the Driver Station software to match the new Robocol. Version 3.00 software removes the setMaxSpeed and getMaxSpeed methods from the DcMotor class. If you have an op mode that formerly used these methods, you will need to remove the references/calls to these methods. Instead, v3.0 provides the max speed information through the use of motor profiles that are selected by the user during robot configuration. Version 3.00 software currently does not have a mechanism to disable extra i2c sensors. We hope to re-introduce this function with a release in the near future. Version 3.00 (built on 17.04.13) *** Use this version of the software at YOUR OWN RISK!!! ***  This software is being released as an \"alpha\" version. Use this version at your own risk!  This pre-release software contains SIGNIFICANT changes, including changes to the Wi-Fi Direct pairing mechanism, rewrites of the I2C sensor classes, changes to the USB/FTDI layer, and the introduction of support for the REV Robotics Expansion Hub and the REV Robotics color-range-light sensor. These changes were implemented to improve the reliability and resiliency of the FTC control system.  Please note, however, that version 3.00 is considered \"alpha\" code. This code is being released so that the FIRST community will have an opportunity to test the new REV Expansion Hub electronics module when it becomes available in May. The developers do not recommend using this code for critical applications (i.e., competition use).  *** Use this version of the software at YOUR OWN RISK!!! ***  Changes include:  Major rework of sensor-related infrastructure. Includes rewriting sensor classes to implement synchronous I2C communication. Fix to reset Autonomous timer back to 30 seconds. Implementation of specific motor profiles for approved 12V motors (includes Tetrix, AndyMark, Matrix and REV models). Modest improvements to enhance Wi-Fi P2P pairing. Fixes telemetry log addition race. Publishes all the sources (not just a select few). Includes Block programming improvements Addition of optimized Vuforia blocks. Auto scrollbar to projects and sounds pages. Fixed blocks paste bug. Blocks execute after while-opModeIsActive loop (to allow for cleanup before exiting op mode). Added gyro integratedZValue block. Fixes bug with projects page for Firefox browser. Added IsSpeaking block to AndroidTextToSpeech. Implements support for the REV Robotics Expansion Hub Implements support for integral REV IMU (physically installed on I2C bus 0, uses same Bosch BNO055 9 axis absolute orientation sensor as Adafruit 9DOF abs orientation sensor). - Implements support for REV color/range/light sensor. Provides support to update Expansion Hub firmware through FTC SDK. Detects REV firmware version and records in log file. Includes support for REV Control Hub (note that the REV Control Hub is not yet approved for FTC use). Implements FTC Blocks programming support for REV Expansion Hub and sensor hardware. Detects and alerts when I2C device disconnect. Version 2.62 (built on 17.01.07) Added null pointer check before calling modeToByte() in finishModeSwitchIfNecessary method for ModernRoboticsUsbDcMotorController class. Changes to enhance Modern Robotics USB protocol robustness. Version 2.61 (released on 16.12.19) Blocks Programming mode changes: Fix to correct issue when an exception was thrown because an OpticalDistanceSensor object appears twice in the hardware map (the second time as a LightSensor). Version 2.6 (released on 16.12.16) Fixes for Gyro class: Improve (decrease) sensor refresh latency. fix isCalibrating issues. Blocks Programming mode changes: Blocks now ignores a device in the configuration xml if the name is empty. Other devices work in configuration work fine. Version 2.5 (internal release on released on 16.12.13) Blocks Programming mode changes: Added blocks support for AdafruitBNO055IMU. Added Download Op Mode button to FtcBocks.html. Added support for copying blocks in one OpMode and pasting them in an other OpMode. The clipboard content is stored on the phone, so the programming mode server must be running. Modified Utilities section of the toolbox. In Programming Mode, display information about the active connections. Fixed paste location when workspace has been scrolled. Added blocks support for the android Accelerometer. Fixed issue where Blocks Upload Op Mode truncated name at first dot. Added blocks support for Android SoundPool. Added type safety to blocks for Acceleration. Added type safety to blocks for AdafruitBNO055IMU.Parameters. Added type safety to blocks for AnalogInput. Added type safety to blocks for AngularVelocity. Added type safety to blocks for Color. Added type safety to blocks for ColorSensor. Added type safety to blocks for CompassSensor. Added type safety to blocks for CRServo. Added type safety to blocks for DigitalChannel. Added type safety to blocks for ElapsedTime. Added type safety to blocks for Gamepad. Added type safety to blocks for GyroSensor. Added type safety to blocks for IrSeekerSensor. Added type safety to blocks for LED. Added type safety to blocks for LightSensor. Added type safety to blocks for LinearOpMode. Added type safety to blocks for MagneticFlux. Added type safety to blocks for MatrixF. Added type safety to blocks for MrI2cCompassSensor. Added type safety to blocks for MrI2cRangeSensor. Added type safety to blocks for OpticalDistanceSensor. Added type safety to blocks for Orientation. Added type safety to blocks for Position. Added type safety to blocks for Quaternion. Added type safety to blocks for Servo. Added type safety to blocks for ServoController. Added type safety to blocks for Telemetry. Added type safety to blocks for Temperature. Added type safety to blocks for TouchSensor. Added type safety to blocks for UltrasonicSensor. Added type safety to blocks for VectorF. Added type safety to blocks for Velocity. Added type safety to blocks for VoltageSensor. Added type safety to blocks for VuforiaLocalizer.Parameters. Added type safety to blocks for VuforiaTrackable. Added type safety to blocks for VuforiaTrackables. Added type safety to blocks for enums in AdafruitBNO055IMU.Parameters. Added type safety to blocks for AndroidAccelerometer, AndroidGyroscope, AndroidOrientation, and AndroidTextToSpeech. Version 2.4 (released on 16.11.13) Fix to avoid crashing for nonexistent resources. Blocks Programming mode changes: Added blocks to support OpenGLMatrix, MatrixF, and VectorF. Added blocks to support AngleUnit, AxesOrder, AxesReference, CameraDirection, CameraMonitorFeedback, DistanceUnit, and TempUnit. Added blocks to support Acceleration. Added blocks to support LinearOpMode.getRuntime. Added blocks to support MagneticFlux and Position. Fixed typos. Made blocks for ElapsedTime more consistent with other objects. Added blocks to support Quaternion, Velocity, Orientation, AngularVelocity. Added blocks to support VuforiaTrackables, VuforiaTrackable, VuforiaLocalizer, VuforiaTrackableDefaultListener. Fixed a few blocks. Added type checking to new blocks. Updated to latest blockly. Added default variable blocks to navigation and matrix blocks. Fixed toolbox entry for openGLMatrix_rotation_withAxesArgs. When user downloads Blocks-generated op mode, only the .blk file is downloaded. When user uploads Blocks-generated op mode (.blk file), Javascript code is auto generated. Added DbgLog support. Added logging when a blocks file is read/written. Fixed bug to properly render blocks even if missing devices from configuration file. Added support for additional characters (not just alphanumeric) for the block file names (for download and upload). Added support for OpMode flavor (“Autonomous” or “TeleOp”) and group. Changes to Samples to prevent tutorial issues. Incorporated suggested changes from public pull 216 (“Replace .. paths”). Remove Servo Glitches when robot stopped. if user hits “Cancels” when editing a configuration file, clears the unsaved changes and reverts to original unmodified configuration. Added log info to help diagnose why the Robot Controller app was terminated (for example, by watch dog function). Added ability to transfer log from the controller. Fixed inconsistency for AngularVelocity Limit unbounded growth of data for telemetry. If user does not call telemetry.update() for LinearOpMode in a timely manner, data added for telemetry might get lost if size limit is exceeded. Version 2.35 (released on 16.10.06) Blockly programming mode - Removed unnecesary idle() call from blocks for new project. Version 2.30 (released on 16.10.05) Blockly programming mode: Mechanism added to save Blockly op modes from Programming Mode Server onto local device To avoid clutter, blocks are displayed in categorized folders Added support for DigitalChannel Added support for ModernRoboticsI2cCompassSensor Added support for ModernRoboticsI2cRangeSensor Added support for VoltageSensor Added support for AnalogInput Added support for AnalogOutput Fix for CompassSensor setMode block Vuforia Fix deadlock / make camera data available while Vuforia is running. Update to Vuforia 6.0.117 (recommended by Vuforia and Google to close security loophole). Fix for autonomous 30 second timer bug (where timer was in effect, even though it appeared to have timed out). opModeIsActive changes to allow cleanup after op mode is stopped (with enforced 2 second safety timeout). Fix to avoid reading i2c twice. Updated sample Op Modes. Improved logging and fixed intermittent freezing. Added digital I/O sample. Cleaned up device names in sample op modes to be consistent with Pushbot guide. Fix to allow use of IrSeekerSensorV3. Version 2.20 (released on 16.09.08) Support for Modern Robotics Compass Sensor. Support for Modern Robotics Range Sensor. Revise device names for Pushbot templates to match the names used in Pushbot guide. Fixed bug so that IrSeekerSensorV3 device is accessible as IrSeekerSensor in hardwareMap. Modified computer vision code to require an individual Vuforia license (per legal requirement from PTC). Minor fixes. Blockly enhancements: Support for Voltage Sensor. Support for Analog Input. Support for Analog Output. Support for Light Sensor. Support for Servo Controller. Version 2.10 (released on 16.09.03) Support for Adafruit IMU. Improvements to ModernRoboticsI2cGyro class Block on reset of z axis. isCalibrating() returns true while gyro is calibration. Updated sample gyro program. Blockly enhancements support for android.graphics.Color. added support for ElapsedTime. improved look and legibility of blocks. support for compass sensor. support for ultrasonic sensor. support for IrSeeker. support for LED. support for color sensor. support for CRServo prompt user to configure robot before using programming mode. Provides ability to disable audio cues. various bug fixes and improvements. Version 2.00 (released on 16.08.19) This is the new release for the upcoming 2016-2017 FIRST Tech Challenge Season. Channel change is enabled in the FTC Robot Controller app for Moto G 2nd and 3rd Gen phones. Users can now use annotations to register/disable their Op Modes. Changes in the Android SDK, JDK and build tool requirements (minsdk=19, java 1.7, build tools 23.0.3). Standardized units in analog input. Cleaned up code for existing analog sensor classes. setChannelMode and getChannelMode were REMOVED from the DcMotorController class. This is important - we no longer set the motor modes through the motor controller. setMode and getMode were added to the DcMotor class. ContinuousRotationServo class has been added to the FTC SDK. Range.clip() method has been overloaded so it can support this operation for int, short and byte integers. Some changes have been made (new methods added) on how a user can access items from the hardware map. Users can now set the zero power behavior for a DC motor so that the motor will brake or float when power is zero. Prototype Blockly Programming Mode has been added to FTC Robot Controller. Users can place the Robot Controller into this mode, and then use a device (such as a laptop) that has a Javascript enabled browser to write Blockly-based Op Modes directly onto the Robot Controller. Users can now configure the robot remotely through the FTC Driver Station app. Android Studio project supports Android Studio 2.1.x and compile SDK Version 23 (Marshmallow). Vuforia Computer Vision SDK integrated into FTC SDK. Users can use sample vision targets to get localization information on a standard FTC field. Project structure has been reorganized so that there is now a TeamCode package that users can use to place their local/custom Op Modes into this package. Inspection function has been integrated into the FTC Robot Controller and Driver Station Apps (Thanks Team HazMat… 9277 & 10650!). Audio cues have been incorporated into FTC SDK. Swap mechanism added to FTC Robot Controller configuration activity. For example, if you have two motor controllers on a robot, and you misidentified them in your configuration file, you can use the Swap button to swap the devices within the configuration file (so you do not have to manually re-enter in the configuration info for the two devices). Fix mechanism added to all user to replace an electronic module easily. For example, suppose a servo controller dies on your robot. You replace the broken module with a new module, which has a different serial number from the original servo controller. You can use the Fix button to automatically reconfigure your configuration file to use the serial number of the new module. Improvements made to fix resiliency and responsiveness of the system. For LinearOpMode the user now must for a telemetry.update() to update the telemetry data on the driver station. This update() mechanism ensures that the driver station gets the updated data properly and at the same time. The Auto Configure function of the Robot Controller is now template based. If there is a commonly used robot configuration, a template can be created so that the Auto Configure mechanism can be used to quickly configure a robot of this type. The logic to detect a runaway op mode (both in the LinearOpMode and OpMode types) and to abort the run, then auto recover has been improved/implemented. Fix has been incorporated so that Logitech F310 gamepad mappings will be correct for Marshmallow users. Release 16.07.08 For the ftc_app project, the gradle files have been modified to support Android Studio 2.1.x. Release 16.03.30 For the MIT App Inventor, the design blocks have new icons that better represent the function of each design component. Some changes were made to the shutdown logic to ensure the robust shutdown of some of our USB services. A change was made to LinearOpMode so as to allow a given instance to be executed more than once, which is required for the App Inventor. Javadoc improved/updated. Release 16.03.09 Changes made to make the FTC SDK synchronous (significant change!) waitOneFullHardwareCycle() and waitForNextHardwareCycle() are no longer needed and have been deprecated. runOpMode() (for a LinearOpMode) is now decoupled from the system's hardware read/write thread. loop() (for an OpMode) is now decoupled from the system's hardware read/write thread. Methods are synchronous. For example, if you call setMode(DcMotorController.RunMode.RESET_ENCODERS) for a motor, the encoder is guaranteed to be reset when the method call is complete. For legacy module (NXT compatible), user no longer has to toggle between read and write modes when reading from or writing to a legacy device. Changes made to enhance reliability/robustness during ESD event. Changes made to make code thread safe. Debug keystore added so that user-generated robot controller APKs will all use the same signed key (to avoid conflicts if a team has multiple developer laptops for example). Firmware version information for Modern Robotics modules are now logged. Changes made to improve USB comm reliability and robustness. Added support for voltage indicator for legacy (NXT-compatible) motor controllers. Changes made to provide auto stop capabilities for op modes. A LinearOpMode class will stop when the statements in runOpMode() are complete. User does not have to push the stop button on the driver station. If an op mode is stopped by the driver station, but there is a run away/uninterruptible thread persisting, the app will log an error message then force itself to crash to stop the runaway thread. Driver Station UI modified to display lowest measured voltage below current voltage (12V battery). Driver Station UI modified to have color background for current voltage (green=good, yellow=caution, red=danger, extremely low voltage). javadoc improved (edits and additional classes). Added app build time to About activity for driver station and robot controller apps. Display local IP addresses on Driver Station About activity. Added I2cDeviceSynchImpl. Added I2cDeviceSync interface. Added seconds() and milliseconds() to ElapsedTime for clarity. Added getCallbackCount() to I2cDevice. Added missing clearI2cPortActionFlag. Added code to create log messages while waiting for LinearOpMode shutdown. Fix so Wifi Direct Config activity will no longer launch multiple times. Added the ability to specify an alternate i2c address in software for the Modern Robotics gyro. Release 16.02.09 Improved battery checker feature so that voltage values get refreshed regularly (every 250 msec) on Driver Station (DS) user interface. Improved software so that Robot Controller (RC) is much more resilient and “self-healing” to USB disconnects: If user attempts to start/restart RC with one or more module missing, it will display a warning but still start up. When running an op mode, if one or more modules gets disconnected, the RC & DS will display warnings,and robot will keep on working in spite of the missing module(s). If a disconnected module gets physically reconnected the RC will auto detect the module and the user will regain control of the recently connected module. Warning messages are more helpful (identifies the type of module that’s missing plus its USB serial number). Code changes to fix the null gamepad reference when users try to reference the gamepads in the init() portion of their op mode. NXT light sensor output is now properly scaled. Note that teams might have to readjust their light threshold values in their op modes. On DS user interface, gamepad icon for a driver will disappear if the matching gamepad is disconnected or if that gamepad gets designated as a different driver. Robot Protocol (ROBOCOL) version number info is displayed in About screen on RC and DS apps. Incorporated a display filter on pairing screen to filter out devices that don’t use the “-“ format. This filter can be turned off to show all WiFi Direct devices. Updated text in License file. Fixed formatting error in OpticalDistanceSensor.toString(). Fixed issue on with a blank (“”) device name that would disrupt WiFi Direct Pairing. Made a change so that the WiFi info and battery info can be displayed more quickly on the DS upon connecting to RC. Improved javadoc generation. Modified code to make it easier to support language localization in the future. Release 16.01.04 Updated compileSdkVersion for apps Prevent Wifi from entering power saving mode removed unused import from driver station Corrrected \"Dead zone\" joystick code. LED.getDeviceName and .getConnectionInfo() return null apps check for ROBOCOL_VERSION mismatch Fix for Telemetry also has off-by-one errors in its data string sizing / short size limitations error User telemetry output is sorted. added formatting variants to DbgLog and RobotLog APIs code modified to allow for a long list of op mode names. changes to improve thread safety of RobocolDatagramSocket Fix for \"missing hardware leaves robot controller disconnected from driver station\" error fix for \"fast tapping of Init/Start causes problems\" (toast is now only instantiated on UI thread). added some log statements for thread life cycle. moved gamepad reset logic inside of initActiveOpMode() for robustness changes made to mitigate risk of race conditions on public methods. changes to try and flag when WiFi Direct name contains non-printable characters. fix to correct race condition between .run() and .close() in ReadWriteRunnableStandard. updated FTDI driver made ReadWriteRunnableStanard interface public. fixed off-by-one errors in Command constructor moved specific hardware implmentations into their own package. moved specific gamepad implemnatations to the hardware library. changed LICENSE file to new BSD version. fixed race condition when shutting down Modern Robotics USB devices. methods in the ColorSensor classes have been synchronized. corrected isBusy() status to reflect end of motion. corrected \"back\" button keycode. the notSupported() method of the GyroSensor class was changed to protected (it should not be public). Release 15.11.04.001 Added Support for Modern Robotics Gyro. The GyroSensor class now supports the MR Gyro Sensor. Users can access heading data (about Z axis) Users can also access raw gyro data (X, Y, & Z axes). Example MRGyroTest.java op mode included. Improved error messages More descriptive error messages for exceptions in user code. Updated DcMotor API Enable read mode on new address in setI2cAddress Fix so that driver station app resets the gamepads when switching op modes. USB-related code changes to make USB comm more responsive and to display more explicit error messages. Fix so that USB will recover properly if the USB bus returns garbage data. Fix USB initializtion race condition. Better error reporting during FTDI open. More explicit messages during USB failures. Fixed bug so that USB device is closed if event loop teardown method was not called. Fixed timer UI issue Fixed duplicate name UI bug (Legacy Module configuration). Fixed race condition in EventLoopManager. Fix to keep references stable when updating gamepad. For legacy Matrix motor/servo controllers removed necessity of appending \"Motor\" and \"Servo\" to controller names. Updated HT color sensor driver to use constants from ModernRoboticsUsbLegacyModule class. Updated MR color sensor driver to use constants from ModernRoboticsUsbDeviceInterfaceModule class. Correctly handle I2C Address change in all color sensors Updated/cleaned up op modes. Updated comments in LinearI2cAddressChange.java example op mode. Replaced the calls to \"setChannelMode\" with \"setMode\" (to match the new of the DcMotor method). Removed K9AutoTime.java op mode. Added MRGyroTest.java op mode (demonstrates how to use MR Gyro Sensor). Added MRRGBExample.java op mode (demonstrates how to use MR Color Sensor). Added HTRGBExample.java op mode (demonstrates how to use HT legacy color sensor). Added MatrixControllerDemo.java (demonstrates how to use legacy Matrix controller). Updated javadoc documentation. Updated release .apk files for Robot Controller and Driver Station apps. Release 15.10.06.002 Added support for Legacy Matrix 9.6V motor/servo controller. Cleaned up build.gradle file. Minor UI and bug fixes for driver station and robot controller apps. Throws error if Ultrasonic sensor (NXT) is not configured for legacy module port 4 or 5. Release 15.08.03.001 New user interfaces for FTC Driver Station and FTC Robot Controller apps. An init() method is added to the OpMode class. For this release, init() is triggered right before the start() method. Eventually, the init() method will be triggered when the user presses an \"INIT\" button on driver station. The init() and loop() methods are now required (i.e., need to be overridden in the user's op mode). The start() and stop() methods are optional. A new LinearOpMode class is introduced. Teams can use the LinearOpMode mode to create a linear (not event driven) program model. Teams can use blocking statements like Thread.sleep() within a linear op mode. The API for the Legacy Module and Core Device Interface Module have been updated. Support for encoders with the Legacy Module is now working. The hardware loop has been updated for better performance.",
      "language": "Java",
      "stars": 197,
      "forks": 66,
      "url": "https://github.com/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020",
      "tags": []
    },
    {
      "id": 273,
      "name": "Kafka-zk-restapi",
      "owner": "gnuhpc",
      "full_name": "gnuhpc/Kafka-zk-restapi",
      "description": "Kafka Zookeeper RESTful API to perform topic/consumer group administration/metric(offset\\lag\\message) collection and monitor",
      "language": "Java",
      "stars": 124,
      "forks": 33,
      "url": "https://github.com/gnuhpc/Kafka-zk-restapi",
      "tags": [
        "consumer",
        "consumer-group",
        "jmx",
        "kafka",
        "kafka-manager",
        "kafka-topic",
        "lag",
        "offset",
        "partition",
        "reassignment",
        "rest",
        "restful-api",
        "topic",
        "zookeeper"
      ]
    },
    {
      "id": 274,
      "name": "springboot-kafka-connect-jdbc-streams",
      "owner": "ivangfr",
      "full_name": "ivangfr/springboot-kafka-connect-jdbc-streams",
      "description": "Project goal: Explore Kafka, Kafka Connect, and Kafka Streams. Components: store-api: Inserts/updates MySQL records. Source Connectors: Monitor MySQL changes, push messages to Kafka. Sink Connectors: Listen to Kafka, insert/update Elasticsearch docs. store-streams: Listens to Kafka, processes with Kafka Streams, pushes new messages to Kafka.",
      "language": "Java",
      "stars": 113,
      "forks": 72,
      "url": "https://github.com/ivangfr/springboot-kafka-connect-jdbc-streams",
      "tags": [
        "avro",
        "docker",
        "elasticsearch",
        "java",
        "jib",
        "json",
        "kafka",
        "kafka-connect",
        "kafka-streams",
        "mysql",
        "schema-registry",
        "spring-boot",
        "spring-cloud-stream",
        "spring-data-jpa",
        "spring-web-mvc",
        "springdoc-openapi"
      ]
    },
    {
      "id": 419,
      "name": "got-your-back",
      "owner": "GAM-team",
      "full_name": "GAM-team/got-your-back",
      "description": "Got Your Back (GYB) is a command line tool for backing up your Gmail messages to your computer using Gmail's API over HTTPS.",
      "language": "Python",
      "stars": 2794,
      "forks": 219,
      "url": "https://github.com/GAM-team/got-your-back",
      "tags": []
    },
    {
      "id": 420,
      "name": "WebWhatsapp-Wrapper",
      "owner": "mukulhase",
      "full_name": "mukulhase/WebWhatsapp-Wrapper",
      "description": "An API for sending and receiving messages over web.whatsapp [Working as of 18th May 2018]",
      "language": "Python",
      "stars": 2055,
      "forks": 802,
      "url": "https://github.com/mukulhase/WebWhatsapp-Wrapper",
      "tags": []
    },
    {
      "id": 421,
      "name": "line-bot-sdk-python",
      "owner": "line",
      "full_name": "line/line-bot-sdk-python",
      "description": "LINE Messaging API SDK for Python",
      "language": "Python",
      "stars": 1998,
      "forks": 1039,
      "url": "https://github.com/line/line-bot-sdk-python",
      "tags": [
        "bot",
        "line",
        "linebot",
        "python",
        "sdk"
      ]
    },
    {
      "id": 422,
      "name": "gpt-discord-bot",
      "owner": "openai",
      "full_name": "openai/gpt-discord-bot",
      "description": "Example Discord bot written in Python that uses the completions API to have conversations with the `text-davinci-003` model, and the moderations API to filter the messages.",
      "language": "Python",
      "stars": 1812,
      "forks": 673,
      "url": "https://github.com/openai/gpt-discord-bot",
      "tags": []
    },
    {
      "id": 423,
      "name": "python-sms-sender",
      "owner": "aarnhub",
      "full_name": "aarnhub/python-sms-sender",
      "description": "Python SMS sender with SMS Gateway API. Send SMS messages from Command Line / Terminal",
      "language": "Python",
      "stars": 319,
      "forks": 168,
      "url": "https://github.com/aarnhub/python-sms-sender",
      "tags": []
    },
    {
      "id": 424,
      "name": "corpwechatbot",
      "owner": "GentleCP",
      "full_name": "GentleCP/corpwechatbot",
      "description": "企业微信的python封装接口，简易上手，开箱即用，一行代码实现消息推送。A more convenient python wrapper interface of corpwechat(wework, wecom) official API, use only one line of code to send your messages to your corpwechat(wework, wecom) . ",
      "language": "Python",
      "stars": 315,
      "forks": 60,
      "url": "https://github.com/GentleCP/corpwechatbot",
      "tags": [
        "api",
        "bot",
        "message-sending",
        "notifications",
        "python",
        "wechat",
        "wecom",
        "wework"
      ]
    },
    {
      "id": 425,
      "name": "telemirror",
      "owner": "khoben",
      "full_name": "khoben/telemirror",
      "description": "Telegram message forwarder (client API)",
      "language": "Python",
      "stars": 260,
      "forks": 110,
      "url": "https://github.com/khoben/telemirror",
      "tags": [
        "forwarder",
        "heroku",
        "mirroring",
        "python",
        "telegram",
        "telegram-bot",
        "telegram-forward-bot",
        "telegram-forwarder",
        "telethon"
      ]
    },
    {
      "id": 426,
      "name": "django-sendsms",
      "owner": "stefanfoulis",
      "full_name": "stefanfoulis/django-sendsms",
      "description": "A simple API to send SMS messages. It is modeled after the django email api.",
      "language": "Python",
      "stars": 260,
      "forks": 100,
      "url": "https://github.com/stefanfoulis/django-sendsms",
      "tags": [
        "django",
        "python",
        "sms"
      ]
    },
    {
      "id": 427,
      "name": "google-bard-api",
      "owner": "ra83205",
      "full_name": "ra83205/google-bard-api",
      "description": "This project provides a FastAPI wrapper for interacting with Google Bard, a conversational AI by Google. It allows users to send messages to Google Bard and receive responses through a simple API.",
      "language": "Python",
      "stars": 254,
      "forks": 59,
      "url": "https://github.com/ra83205/google-bard-api",
      "tags": [
        "ai-assistant",
        "bard",
        "bard-api",
        "chat-gpt",
        "chat-interface",
        "chatbot-development",
        "dialog-systems",
        "fastapi",
        "google-bard",
        "machine-learning",
        "natural-language-processing",
        "python"
      ]
    },
    {
      "id": 428,
      "name": "line-py",
      "owner": "fadhiilrachman",
      "full_name": "fadhiilrachman/line-py",
      "description": "LINE Messaging's private API",
      "language": "Python",
      "stars": 252,
      "forks": 144,
      "url": "https://github.com/fadhiilrachman/line-py",
      "tags": [
        "line",
        "line-bot",
        "messaging-api",
        "python"
      ]
    },
    {
      "id": 429,
      "name": "all-classification-templetes-for-ML",
      "owner": "sayantann11",
      "full_name": "sayantann11/all-classification-templetes-for-ML",
      "description": "Classification - Machine Learning This is ‘Classification’ tutorial which is a part of the Machine Learning course offered by Simplilearn. We will learn Classification algorithms, types of classification algorithms, support vector machines(SVM), Naive Bayes, Decision Tree and Random Forest Classifier in this tutorial.  Objectives Let us look at some of the objectives covered under this section of Machine Learning tutorial.  Define Classification and list its algorithms Describe Logistic Regression and Sigmoid Probability Explain K-Nearest Neighbors and KNN classification Understand Support Vector Machines, Polynomial Kernel, and Kernel Trick Analyze Kernel Support Vector Machines with an example Implement the Naïve Bayes Classifier Demonstrate Decision Tree Classifier Describe Random Forest Classifier Classification: Meaning Classification is a type of supervised learning. It specifies the class to which data elements belong to and is best used when the output has finite and discrete values. It predicts a class for an input variable as well.  There are 2 types of Classification:   Binomial Multi-Class Classification: Use Cases Some of the key areas where classification cases are being used:  To find whether an email received is a spam or ham To identify customer segments To find if a bank loan is granted To identify if a kid will pass or fail in an examination Classification: Example Social media sentiment analysis has two potential outcomes, positive or negative, as displayed by the chart given below.  https://www.simplilearn.com/ice9/free_resources_article_thumb/classification-example-machine-learning.JPG  This chart shows the classification of the Iris flower dataset into its three sub-species indicated by codes 0, 1, and 2. https://www.simplilearn.com/ice9/free_resources_article_thumb/iris-flower-dataset-graph.JPG  The test set dots represent the assignment of new test data points to one class or the other based on the trained classifier model. Types of Classification Algorithms Let’s have a quick look into the types of Classification Algorithm below.  Linear Models Logistic Regression Support Vector Machines Nonlinear models K-nearest Neighbors (KNN) Kernel Support Vector Machines (SVM) Naïve Bayes Decision Tree Classification Random Forest Classification Logistic Regression: Meaning Let us understand the Logistic Regression model below.  This refers to a regression model that is used for classification. This method is widely used for binary classification problems. It can also be extended to multi-class classification problems. Here, the dependent variable is categorical: y ϵ {0, 1} A binary dependent variable can have only two values, like 0 or 1, win or lose, pass or fail, healthy or sick, etc In this case, you model the probability distribution of output y as 1 or 0. This is called the sigmoid probability (σ). If σ(θ Tx) > 0.5, set y = 1, else set y = 0 Unlike Linear Regression (and its Normal Equation solution), there is no closed form solution for finding optimal weights of Logistic Regression. Instead, you must solve this with maximum likelihood estimation (a probability model to detect the maximum likelihood of something happening). It can be used to calculate the probability of a given outcome in a binary model, like the probability of being classified as sick or passing an exam. https://www.simplilearn.com/ice9/free_resources_article_thumb/logistic-regression-example-graph.JPG  Sigmoid Probability The probability in the logistic regression is often represented by the Sigmoid function (also called the logistic function or the S-curve):  https://www.simplilearn.com/ice9/free_resources_article_thumb/sigmoid-function-machine-learning.JPG  In this equation, t represents data values * the number of hours studied and S(t) represents the probability of passing the exam. Assume sigmoid function: https://www.simplilearn.com/ice9/free_resources_article_thumb/sigmoid-probability-machine-learning.JPG  g(z) tends toward 1 as z -> infinity , and g(z) tends toward 0 as z -> infinity  K-nearest Neighbors (KNN) K-nearest Neighbors algorithm is used to assign a data point to clusters based on similarity measurement. It uses a supervised method for classification.  The steps to writing a k-means algorithm are as given below:  https://www.simplilearn.com/ice9/free_resources_article_thumb/knn-distribution-graph-machine-learning.JPG  Choose the number of k and a distance metric. (k = 5 is common) Find k-nearest neighbors of the sample that you want to classify Assign the class label by majority vote. KNN Classification A new input point is classified in the category such that it has the most number of neighbors from that category. For example:  https://www.simplilearn.com/ice9/free_resources_article_thumb/knn-classification-machine-learning.JPG  Classify a patient as high risk or low risk. Mark email as spam or ham. Keen on learning about Classification Algorithms in Machine Learning? Click here!  Support Vector Machine (SVM) Let us understand Support Vector Machine (SVM) in detail below.  SVMs are classification algorithms used to assign data to various classes. They involve detecting hyperplanes which segregate data into classes. SVMs are very versatile and are also capable of performing linear or nonlinear classification, regression, and outlier detection. Once ideal hyperplanes are discovered, new data points can be easily classified. https://www.simplilearn.com/ice9/free_resources_article_thumb/support-vector-machines-graph-machine-learning.JPG  The optimization objective is to find “maximum margin hyperplane” that is farthest from the closest points in the two classes (these points are called support vectors). In the given figure, the middle line represents the hyperplane. SVM Example Let’s look at this image below and have an idea about SVM in general.  Hyperplanes with larger margins have lower generalization error. The positive and negative hyperplanes are represented by: https://www.simplilearn.com/ice9/free_resources_article_thumb/positive-negative-hyperplanes-machine-learning.JPG  Classification of any new input sample xtest :  If w0 + wTxtest > 1, the sample xtest is said to be in the class toward the right of the positive hyperplane. If w0 + wTxtest < -1, the sample xtest is said to be in the class toward the left of the negative hyperplane. When you subtract the two equations, you get:  https://www.simplilearn.com/ice9/free_resources_article_thumb/equation-subtraction-machine-learning.JPG  Length of vector w is (L2 norm length):  https://www.simplilearn.com/ice9/free_resources_article_thumb/length-of-vector-machine-learning.JPG  You normalize with the length of w to arrive at:  https://www.simplilearn.com/ice9/free_resources_article_thumb/normalize-equation-machine-learning.JPG  SVM: Hard Margin Classification Given below are some points to understand Hard Margin Classification.  The left side of equation SVM-1 given above can be interpreted as the distance between the positive (+ve) and negative (-ve) hyperplanes; in other words, it is the margin that can be maximized. Hence the objective of the function is to maximize with the constraint that the samples are classified correctly, which is represented as : https://www.simplilearn.com/ice9/free_resources_article_thumb/hard-margin-classification-machine-learning.JPG  This means that you are minimizing ‖w‖. This also means that all positive samples are on one side of the positive hyperplane and all negative samples are on the other side of the negative hyperplane. This can be written concisely as : https://www.simplilearn.com/ice9/free_resources_article_thumb/hard-margin-classification-formula.JPG  Minimizing ‖w‖ is the same as minimizing. This figure is better as it is differentiable even at w = 0. The approach listed above is called “hard margin linear SVM classifier.” SVM: Soft Margin Classification   Given below are some points to understand Soft Margin Classification.  To allow for linear constraints to be relaxed for nonlinearly separable data, a slack variable is introduced. (i) measures how much ith instance is allowed to violate the margin. The slack variable is simply added to the linear constraints. https://www.simplilearn.com/ice9/free_resources_article_thumb/soft-margin-calculation-machine-learning.JPG  Subject to the above constraints, the new objective to be minimized becomes: https://www.simplilearn.com/ice9/free_resources_article_thumb/soft-margin-calculation-formula.JPG  You have two conflicting objectives now—minimizing slack variable to reduce margin violations and minimizing to increase the margin. The hyperparameter C allows us to define this trade-off. Large values of C correspond to larger error penalties (so smaller margins), whereas smaller values of C allow for higher misclassification errors and larger margins. https://www.simplilearn.com/ice9/free_resources_article_thumb/machine-learning-certification-video-preview.jpg  SVM: Regularization The concept of C is the reverse of regularization. Higher C means lower regularization, which increases bias and lowers the variance (causing overfitting).  https://www.simplilearn.com/ice9/free_resources_article_thumb/concept-of-c-graph-machine-learning.JPG  IRIS Data Set The Iris dataset contains measurements of 150 IRIS flowers from three different species:  Setosa Versicolor Viriginica Each row represents one sample. Flower measurements in centimeters are stored as columns. These are called features.  IRIS Data Set: SVM Let’s train an SVM model using sci-kit-learn for the Iris dataset:  https://www.simplilearn.com/ice9/free_resources_article_thumb/svm-model-graph-machine-learning.JPG  Nonlinear SVM Classification There are two ways to solve nonlinear SVMs:  by adding polynomial features by adding similarity features Polynomial features can be added to datasets; in some cases, this can create a linearly separable dataset.  https://www.simplilearn.com/ice9/free_resources_article_thumb/nonlinear-classification-svm-machine-learning.JPG  In the figure on the left, there is only 1 feature x1. This dataset is not linearly separable. If you add x2 = (x1)2 (figure on the right), the data becomes linearly separable. Polynomial Kernel In sci-kit-learn, one can use a Pipeline class for creating polynomial features. Classification results for the Moons dataset are shown in the figure.  https://www.simplilearn.com/ice9/free_resources_article_thumb/polynomial-kernel-machine-learning.JPG  Polynomial Kernel with Kernel Trick Let us look at the image below and understand Kernel Trick in detail.  https://www.simplilearn.com/ice9/free_resources_article_thumb/polynomial-kernel-with-kernel-trick.JPG  For large dimensional datasets, adding too many polynomial features can slow down the model. You can apply a kernel trick with the effect of polynomial features without actually adding them. The code is shown (SVC class) below trains an SVM classifier using a 3rd-degree polynomial kernel but with a kernel trick. https://www.simplilearn.com/ice9/free_resources_article_thumb/polynomial-kernel-equation-machine-learning.JPG  The hyperparameter coefθ controls the influence of high-degree polynomials.  Kernel SVM Let us understand in detail about Kernel SVM.  Kernel SVMs are used for classification of nonlinear data. In the chart, nonlinear data is projected into a higher dimensional space via a mapping function where it becomes linearly separable. https://www.simplilearn.com/ice9/free_resources_article_thumb/kernel-svm-machine-learning.JPG  In the higher dimension, a linear separating hyperplane can be derived and used for classification.  A reverse projection of the higher dimension back to original feature space takes it back to nonlinear shape.  As mentioned previously, SVMs can be kernelized to solve nonlinear classification problems. You can create a sample dataset for XOR gate (nonlinear problem) from NumPy. 100 samples will be assigned the class sample 1, and 100 samples will be assigned the class label -1. https://www.simplilearn.com/ice9/free_resources_article_thumb/kernel-svm-graph-machine-learning.JPG  As you can see, this data is not linearly separable.  https://www.simplilearn.com/ice9/free_resources_article_thumb/kernel-svm-non-separable.JPG  You now use the kernel trick to classify XOR dataset created earlier.  https://www.simplilearn.com/ice9/free_resources_article_thumb/kernel-svm-xor-machine-learning.JPG  Naïve Bayes Classifier What is Naive Bayes Classifier?  Have you ever wondered how your mail provider implements spam filtering or how online news channels perform news text classification or even how companies perform sentiment analysis of their audience on social media? All of this and more are done through a machine learning algorithm called Naive Bayes Classifier.  Naive Bayes Named after Thomas Bayes from the 1700s who first coined this in the Western literature. Naive Bayes classifier works on the principle of conditional probability as given by the Bayes theorem.  Advantages of Naive Bayes Classifier Listed below are six benefits of Naive Bayes Classifier.  Very simple and easy to implement Needs less training data Handles both continuous and discrete data Highly scalable with the number of predictors and data points As it is fast, it can be used in real-time predictions Not sensitive to irrelevant features Bayes Theorem We will understand Bayes Theorem in detail from the points mentioned below.  According to the Bayes model, the conditional probability P(Y|X) can be calculated as:  P(Y|X) = P(X|Y)P(Y) / P(X)  This means you have to estimate a very large number of P(X|Y) probabilities for a relatively small vector space X. For example, for a Boolean Y and 30 possible Boolean attributes in the X vector, you will have to estimate 3 billion probabilities P(X|Y). To make it practical, a Naïve Bayes classifier is used, which assumes conditional independence of P(X) to each other, with a given value of Y. This reduces the number of probability estimates to 2*30=60 in the above example. Naïve Bayes Classifier for SMS Spam Detection Consider a labeled SMS database having 5574 messages. It has messages as given below:  https://www.simplilearn.com/ice9/free_resources_article_thumb/naive-bayes-spam-machine-learning.JPG  Each message is marked as spam or ham in the data set. Let’s train a model with Naïve Bayes algorithm to detect spam from ham. The message lengths and their frequency (in the training dataset) are as shown below:  https://www.simplilearn.com/ice9/free_resources_article_thumb/naive-bayes-spam-spam-detection.JPG  Analyze the logic you use to train an algorithm to detect spam:  Split each message into individual words/tokens (bag of words). Lemmatize the data (each word takes its base form, like “walking” or “walked” is replaced with “walk”). Convert data to vectors using scikit-learn module CountVectorizer. Run TFIDF to remove common words like “is,” “are,” “and.” Now apply scikit-learn module for Naïve Bayes MultinomialNB to get the Spam Detector. This spam detector can then be used to classify a random new message as spam or ham. Next, the accuracy of the spam detector is checked using the Confusion Matrix. For the SMS spam example above, the confusion matrix is shown on the right. Accuracy Rate = Correct / Total = (4827 + 592)/5574 = 97.21% Error Rate = Wrong / Total = (155 + 0)/5574 = 2.78% https://www.simplilearn.com/ice9/free_resources_article_thumb/confusion-matrix-machine-learning.JPG  Although confusion Matrix is useful, some more precise metrics are provided by Precision and Recall.  https://www.simplilearn.com/ice9/free_resources_article_thumb/precision-recall-matrix-machine-learning.JPG  Precision refers to the accuracy of positive predictions.  https://www.simplilearn.com/ice9/free_resources_article_thumb/precision-formula-machine-learning.JPG  Recall refers to the ratio of positive instances that are correctly detected by the classifier (also known as True positive rate or TPR).  https://www.simplilearn.com/ice9/free_resources_article_thumb/recall-formula-machine-learning.JPG  Precision/Recall Trade-off To detect age-appropriate videos for kids, you need high precision (low recall) to ensure that only safe videos make the cut (even though a few safe videos may be left out).  The high recall is needed (low precision is acceptable) in-store surveillance to catch shoplifters; a few false alarms are acceptable, but all shoplifters must be caught.  Learn about Naive Bayes in detail. Click here!  Decision Tree Classifier Some aspects of the Decision Tree Classifier mentioned below are.  Decision Trees (DT) can be used both for classification and regression. The advantage of decision trees is that they require very little data preparation. They do not require feature scaling or centering at all. They are also the fundamental components of Random Forests, one of the most powerful ML algorithms. Unlike Random Forests and Neural Networks (which do black-box modeling), Decision Trees are white box models, which means that inner workings of these models are clearly understood. In the case of classification, the data is segregated based on a series of questions. Any new data point is assigned to the selected leaf node. https://www.simplilearn.com/ice9/free_resources_article_thumb/decision-tree-classifier-machine-learning.JPG  Start at the tree root and split the data on the feature using the decision algorithm, resulting in the largest information gain (IG). This splitting procedure is then repeated in an iterative process at each child node until the leaves are pure. This means that the samples at each node belonging to the same class. In practice, you can set a limit on the depth of the tree to prevent overfitting. The purity is compromised here as the final leaves may still have some impurity. The figure shows the classification of the Iris dataset. https://www.simplilearn.com/ice9/free_resources_article_thumb/decision-tree-classifier-graph.JPG  IRIS Decision Tree Let’s build a Decision Tree using scikit-learn for the Iris flower dataset and also visualize it using export_graphviz API.  https://www.simplilearn.com/ice9/free_resources_article_thumb/iris-decision-tree-machine-learning.JPG  The output of export_graphviz can be converted into png format:  https://www.simplilearn.com/ice9/free_resources_article_thumb/iris-decision-tree-output.JPG  Sample attribute stands for the number of training instances the node applies to. Value attribute stands for the number of training instances of each class the node applies to. Gini impurity measures the node’s impurity. A node is “pure” (gini=0) if all training instances it applies to belong to the same class. https://www.simplilearn.com/ice9/free_resources_article_thumb/impurity-formula-machine-learning.JPG  For example, for Versicolor (green color node), the Gini is 1-(0/54)2 -(49/54)2 -(5/54) 2 ≈ 0.168  https://www.simplilearn.com/ice9/free_resources_article_thumb/iris-decision-tree-sample.JPG  Decision Boundaries Let us learn to create decision boundaries below.  For the first node (depth 0), the solid line splits the data (Iris-Setosa on left). Gini is 0 for Setosa node, so no further split is possible. The second node (depth 1) splits the data into Versicolor and Virginica. If max_depth were set as 3, a third split would happen (vertical dotted line). https://www.simplilearn.com/ice9/free_resources_article_thumb/decision-tree-boundaries.JPG  For a sample with petal length 5 cm and petal width 1.5 cm, the tree traverses to depth 2 left node, so the probability predictions for this sample are 0% for Iris-Setosa (0/54), 90.7% for Iris-Versicolor (49/54), and 9.3% for Iris-Virginica (5/54) CART Training Algorithm Scikit-learn uses Classification and Regression Trees (CART) algorithm to train Decision Trees. CART algorithm:  Split the data into two subsets using a single feature k and threshold tk (example, petal length < “2.45 cm”). This is done recursively for each node. k and tk are chosen such that they produce the purest subsets (weighted by their size). The objective is to minimize the cost function as given below: https://www.simplilearn.com/ice9/free_resources_article_thumb/cart-training-algorithm-machine-learning.JPG  The algorithm stops executing if one of the following situations occurs: max_depth is reached No further splits are found for each node Other hyperparameters may be used to stop the tree: min_samples_split min_samples_leaf min_weight_fraction_leaf max_leaf_nodes Gini Impurity or Entropy Entropy is one more measure of impurity and can be used in place of Gini.  https://www.simplilearn.com/ice9/free_resources_article_thumb/gini-impurity-entrophy.JPG  It is a degree of uncertainty, and Information Gain is the reduction that occurs in entropy as one traverses down the tree. Entropy is zero for a DT node when the node contains instances of only one class. Entropy for depth 2 left node in the example given above is:  https://www.simplilearn.com/ice9/free_resources_article_thumb/entrophy-for-depth-2.JPG  Gini and Entropy both lead to similar trees.  DT: Regularization The following figure shows two decision trees on the moons dataset.  https://www.simplilearn.com/ice9/free_resources_article_thumb/dt-regularization-machine-learning.JPG  The decision tree on the right is restricted by min_samples_leaf = 4. The model on the left is overfitting, while the model on the right generalizes better. Random Forest Classifier Let us have an understanding of Random Forest Classifier below.  A random forest can be considered an ensemble of decision trees (Ensemble learning). Random Forest algorithm: Draw a random bootstrap sample of size n (randomly choose n samples from the training set). Grow a decision tree from the bootstrap sample. At each node, randomly select d features. Split the node using the feature that provides the best split according to the objective function, for instance by maximizing the information gain. Repeat the steps 1 to 2 k times. (k is the number of trees you want to create, using a subset of samples) Aggregate the prediction by each tree for a new data point to assign the class label by majority vote (pick the group selected by the most number of trees and assign new data point to that group). Random Forests are opaque, which means it is difficult to visualize their inner workings. https://www.simplilearn.com/ice9/free_resources_article_thumb/random-forest-classifier-graph.JPG  However, the advantages outweigh their limitations since you do not have to worry about hyperparameters except k, which stands for the number of decision trees to be created from a subset of samples. RF is quite robust to noise from the individual decision trees. Hence, you need not prune individual decision trees. The larger the number of decision trees, the more accurate the Random Forest prediction is. (This, however, comes with higher computation cost). Key Takeaways Let us quickly run through what we have learned so far in this Classification tutorial.  Classification algorithms are supervised learning methods to split data into classes. They can work on Linear Data as well as Nonlinear Data. Logistic Regression can classify data based on weighted parameters and sigmoid conversion to calculate the probability of classes. K-nearest Neighbors (KNN) algorithm uses similar features to classify data. Support Vector Machines (SVMs) classify data by detecting the maximum margin hyperplane between data classes. Naïve Bayes, a simplified Bayes Model, can help classify data using conditional probability models. Decision Trees are powerful classifiers and use tree splitting logic until pure or somewhat pure leaf node classes are attained. Random Forests apply Ensemble Learning to Decision Trees for more accurate classification predictions. Conclusion This completes ‘Classification’ tutorial. In the next tutorial, we will learn 'Unsupervised Learning with Clustering.'",
      "language": "Python",
      "stars": 244,
      "forks": 51,
      "url": "https://github.com/sayantann11/all-classification-templetes-for-ML",
      "tags": []
    },
    {
      "id": 430,
      "name": "slack_cleaner2",
      "owner": "sgratzl",
      "full_name": "sgratzl/slack_cleaner2",
      "description": ":memo: Python3 module for deleting Slack messages and files using the Slack REST API",
      "language": "Python",
      "stars": 238,
      "forks": 21,
      "url": "https://github.com/sgratzl/slack_cleaner2",
      "tags": [
        "pypi",
        "python",
        "python3",
        "slack",
        "slack-api",
        "slack-cleaner",
        "slack-free-plan",
        "slackapi"
      ]
    },
    {
      "id": 431,
      "name": "whatsapp_automation",
      "owner": "mnkgrover08-zz",
      "full_name": "mnkgrover08-zz/whatsapp_automation",
      "description": "Whatsapp Automation is a collection of APIs that interact with WhatsApp messenger running in an Android emulator, allowing developers to build projects that automate sending and receiving messages, adding new contacts and broadcasting messages multiple contacts.",
      "language": "Python",
      "stars": 209,
      "forks": 59,
      "url": "https://github.com/mnkgrover08-zz/whatsapp_automation",
      "tags": []
    },
    {
      "id": 432,
      "name": "vonage-python-sdk",
      "owner": "Vonage",
      "full_name": "Vonage/vonage-python-sdk",
      "description": "Vonage Server SDK for Python. API support for Voice, SMS, WhatsApp, Verify (2FA), Video Meetings and more.",
      "language": "Python",
      "stars": 200,
      "forks": 117,
      "url": "https://github.com/Vonage/vonage-python-sdk",
      "tags": [
        "meetings",
        "messaging",
        "messenger",
        "nexmo",
        "phone",
        "python",
        "sdk",
        "server-sdk",
        "silent-authentication",
        "sms",
        "text-message",
        "two-factor-authentication",
        "verification",
        "verification-code",
        "video",
        "voice",
        "vonage",
        "whatsapp"
      ]
    },
    {
      "id": 473,
      "name": "hbworkspace2-100",
      "owner": "harshalbenake",
      "full_name": "harshalbenake/hbworkspace2-100",
      "description": "(1) Name :- ActionBarSearchView Description :- Action bar search view.  (2) Name :- Adsfree Description :- Admob integration.  (3) Name :- AndroidDayDreamDemo Description :- Day dream demo.  (4) Name :- android query demo live Description :- Google play live app details parsing.  (5) Name :- Arc GIS map Description :- Arc gis map integration without hash key.  (6) Name :- aviarySdk Description :- Aviary integration for image operations.  (7) Name :- BetterGestureDetector Description :- Gesture accrate detection.  (8) Name :- BlinkText Description :- Blinking text.  (9) Name :- BuzzBoxSDKHelloWorld Description :- Buzz box integration cron scheduler.  (10) Name :- CircularProgressBar Description :- Circular progress bar.  (11) Name :- ContactNumbersDemo Description :- Get contact details from device.  (12) Name :- ControlViewheight Description :- Manage height of specific view.  (13) Name :- ControlViewHeightSeekbar Description :- Two listview manage appropriate hieght.  (14) Name :- DownloadManagerAndroid Description :- Download specific file online.  (15) Name :- Facebook Integration Description :- Facebook integration.  (16) Name :- Graphview Description :- Graphview demo.  (17) Name :- HB 1337 Description :- Virus and antivirus.  (18) Name :- HomeButtonEvent Description :- Block home button press.  (19) Name :- HomeLauncher Description :- Home launcher demo.  (20) Name :- InAppPurchaseTut Description :- InAppPurchase demo.  (21) Name :- KeyboardCustom Description :- Creating Custom keyboard demo.  (22) Name :- MapDemoGeofencing Description :- Location map for geo fencing.  (23) Name :- MapDemoV2Final Description :- Map demo for google version 2.  (24) Name :- OpenGLESSquare Description :- Opengl moving square.  (25) Name :- pagination numbering 2 Description :- Pagination type 2.  (26) Name :- Pagination numbering Description :- Pagination type 1.  (27) Name :- PhoneGapCordova Description :- Phone gap simple cordova demo.  (28) Name :- PhoneGapCordovaCamera Description :- Phone gap for camera.  (29) Name :- PhoneGapCordovaParsing Description :- Phone gap for parsing.  (30) Name :- PhoneGapCordovaSMS Description :- Phone gap for sending sms.  (31) Name :- RotatingWheel Description :- Rotating wheel by user interaction.  (32) Name :- RotatingWheelSocialsites Description :- Rotating wheel by user interaction for socialsites.  (33) Name :- RunningBackgroundServices Description :- Get Running services in background for package name/class name.  (34) Name :- SearchList Description :- Searching from a specific list.  (35) Name :- SearchViewContacts Description :- Search from contacts details.  (36) Name :- SlidingDrawer Description :- Sliding drawer from bottom over another activity.  (37) Name :- SpeechToTextDemo Description :- Convert speech to text.  (38) Name :- TextToSpeak Description :- Convert text to speech.  (39) Name :- TouchCordinates Description :- Get coordinate of user touch intergration.  (40) Name :- TreeViewListDemo Description :- Tree view integration demo.  (41) Name :- UninstallDeleteapp Description :- Uninstall another app from my app after removing admin permission.  (42) Name :- ViewPagerCustomWidthFragment Description :- Fragment in viewpager.  (43) Name :- WearableNotification Description :- Wearable notification.  (44) Name :- WearablePages Description :- Wearable pages.  (45) Name :- WidgetDemo Description :- Widget demo.  (46) Name :- CameraIntentAll Description :- Camera demo for picture as well as video demo.  (47) Name :- CameraOverlay Description :- Camera overlay image as aim shooting game.  (48) Name :- DrmIntegration Description :- Drm Integration library for authorize users apk file.  (49) Name :- SwipeRefreshLayout Description :- SwipeRefreshLayout Pulltorefresh like google.  (50) Name :- TwitterIntegration Description :- Twitter Integration.  (51) Name :- CameraADev Description :- Custom Camera for picture as well as video capture from android developer.  (52) Name :- DataBaseSQLiteCRUD Description :- Simple SQLite CRUD funtions for contact database.  (53) Name :- DataBaseSQLiteDBUtility Description :- Simple SQLite DBUtility all files and basic operations.  (54) Name :- CustomDropdownMenu Description :- Custom Dropdown/Poup Menu.  (55) Name :- CalenderSimpleView Description :- Simple calender view as well as timestamp using calender class.  (56) Name :- CalendarProviderADevIntent Description :- Calender provider Intent from android developer.  (57) Name :- AnimationTextViewAnimateLayoutChanges Description :- Animation of adding view inside another view using animatelayoutchanges.  (58) Name :- DragnDropLowVersion Description :- Drag n drop funtionality for low version.  (59) Name :- GoogleWalletAdev Description :- Google Wallet Integration from android developer.  (60) Name :- AndroidShootingGame Description :- Android Shooting Game without opengl.  (61) Name :- ViewPagerAnimation Description :- ViewPager page transformation for pages like alpha,scaling,rotation.  (62) Name :- GoogleCloudWirelessPrintingIntent Description :- Google cloud wireless printing integration from google developer.  (63) Name :- Barcode_or_QRCode_Scanner_openurl Description :- Barcord/QR code scanner from google play and open result url in browser.  (64) Name :- MSServerListSyncSample Description :- List Sync Sample using MS Server.  (65) Name :- SlidingMenuAPI Description :- Sliding Menu jeremyfeinstein library like facebook,gmail,etc.  (66) Name :- GCMIntegration Description :- Google cloud messageing integration for notification.  (67) Name :- NoiseAlert Description :- Detect noise or blow sound.  (68) Name :- GregorianCalendar Description :- Basic Gregorian Calendar information.  (69) Name :- getVariableName Description :- Get name of the variable not its value.  (70) Name :- GoogleAnalyticsV4Adev Description :- Google analytics integration V4.  (71) Name :- FlipboardAnimationAdev Description :- Animation like Flipboard.  (72) Name :- Html5Camera Description :- Camera in Html5 without phonegap.  (73) Name :- CopyPasteClipboard Description :- Copy & Paste Clipboard textual data.  (74) Name :- AndroidPhpMysql Description :- Php and Mysql data parsing in android.  (75) Name :- SpellChecker Description :- Check spelling and give appropriate suggestion for enter text.  (76) Name :- PdfReader Description :- Read pdf file.Barcode/QR code scanner.  (77) Name :- BarcodeQRcodeIntegration Description :- Barcode/QR code scanner using ZbarScanner lib and also Zxing lib without intent.  (78) Name :- InstagramIntegrationApi Description :- Instagram Integration using sample demo.  (79) Name :- Logger Description :- Read logger/logcat using api.  (80) Name :- SmsControl Description :- Control device via sms codes.  (81) Name :- EncryptDecryptString Description :- Encrypt string and Decrypt the same string.  (82) Name :- FloatingActionButton Description :- Floating Action Button.  (83) Name :- DownloadAndUnzipFile Description :- Download And Unzip File.  (84) Name :- MoPubAd Description :- MoPub Ad Banner integration .  (85) Name :- ListViewParsingDB_AndroidStudio Description :- ListView Parsing in android studio.  (86) Name :- CustomCamera_AS Description :- Custom Camera using surfaceview.  (87) Name :- ResizeableBox_AS Description :- Resizeable Box like crop.  (88) Name :- AudioRecorder_AS Description :- Audio Recorder.  (89) Name :- DateAndTimePicker_AS Description :- Date And Time Picker.  (90) Name :- CustomActionBar_AS Description :- Simple Custom ActionBar.  (91) Name :- CustomSpinner_AS Description :- Custom Spinner with default text item.  (92) Name :- SendEmail_AS Description :- Send email in background after authentication.  (93) Name :- GoogleAnalytics_AS Description :- GoogleAnalytics integration demo for crash and screen.  (94) Name :- BroadcastReciever_AS Description :- Broadcast Reciever for sms ,call and boot receiver.  (95) Name :- Azure Description :- Azure storage gsi credentials zip dowload.  (96) Name :- InAppPurchase_AS Description :- In App Purchase simple demo.  (97) Name :- iOS_Listview Description :- Simple Listview in ios.  (98) Name :- iOS_Database Description :- Sqlite Database in ios.  (99) Name :- MessangerList_AS Description :- Messanger Listview UI send and recieve.  (100) Name :- FindingFriend_AS Geofencing for enter and exit another pin.",
      "language": "Java",
      "stars": 244,
      "forks": 172,
      "url": "https://github.com/harshalbenake/hbworkspace2-100",
      "tags": []
    },
    {
      "id": 433,
      "name": "Telegram-Chatbot-Gpt4Free",
      "owner": "HexyeDEV",
      "full_name": "HexyeDEV/Telegram-Chatbot-Gpt4Free",
      "description": "This is a Python-based Telegram bot using the telethon library. The bot responds to messages using the evagpt4 reverse engeneered api from GPT4FREE repo",
      "language": "Python",
      "stars": 168,
      "forks": 43,
      "url": "https://github.com/HexyeDEV/Telegram-Chatbot-Gpt4Free",
      "tags": []
    },
    {
      "id": 434,
      "name": "unofficial-claude-api",
      "owner": "st1vms",
      "full_name": "st1vms/unofficial-claude-api",
      "description": "Unofficial Claude API supporting direct HTTP chat creation/deletion/retrieval, messages with multiple file attachments and auto session gathering using Firefox with geckodriver.",
      "language": "Python",
      "stars": 166,
      "forks": 16,
      "url": "https://github.com/st1vms/unofficial-claude-api",
      "tags": [
        "api",
        "assistant",
        "chatbot",
        "claude",
        "claude-api",
        "claude3",
        "documented",
        "easy-to-use",
        "file-attachment",
        "firefox",
        "free",
        "image-processing",
        "image-recognition",
        "large-file-upload",
        "long-text",
        "python",
        "scraper",
        "selenium",
        "summarizer",
        "unofficial-api"
      ]
    },
    {
      "id": 435,
      "name": "lambda-refarch-image-moderation-chatbot",
      "owner": "aws-samples",
      "full_name": "aws-samples/lambda-refarch-image-moderation-chatbot",
      "description": "The Image Moderator Chatbot serverless reference architecture demonstrates how to leverage Amazon Rekognition's image moderation deep learning feature to automatically remove messages containing explicit or suggestive images from channels of popular chat apps using Amazon API Gateway, AWS Lambda, and Amazon Rekognition.",
      "language": "Python",
      "stars": 162,
      "forks": 66,
      "url": "https://github.com/aws-samples/lambda-refarch-image-moderation-chatbot",
      "tags": []
    },
    {
      "id": 436,
      "name": "Gmail-Api-through-Python",
      "owner": "abhishekchhibber",
      "full_name": "abhishekchhibber/Gmail-Api-through-Python",
      "description": "Using Gmail API and Python to read mail messages ",
      "language": "Python",
      "stars": 145,
      "forks": 91,
      "url": "https://github.com/abhishekchhibber/Gmail-Api-through-Python",
      "tags": []
    },
    {
      "id": 437,
      "name": "python-whatsApp-bot",
      "owner": "ultramsg",
      "full_name": "ultramsg/python-whatsApp-bot",
      "description": "Make WhatsApp ChatBot and use WhatsApp API to send the WhatsApp messages in python . ",
      "language": "Python",
      "stars": 121,
      "forks": 86,
      "url": "https://github.com/ultramsg/python-whatsApp-bot",
      "tags": [
        "bot",
        "chatbot",
        "python",
        "whatsapp-api",
        "whatsapp-api-python",
        "whatsapp-bot"
      ]
    },
    {
      "id": 438,
      "name": "termux-send-sms-script",
      "owner": "mauricecyril",
      "full_name": "mauricecyril/termux-send-sms-script",
      "description": "A quick script to send an SMS message to a list of recipients using Termux-API and Python3  on an Android device.",
      "language": "Python",
      "stars": 97,
      "forks": 13,
      "url": "https://github.com/mauricecyril/termux-send-sms-script",
      "tags": []
    },
    {
      "id": 439,
      "name": "linepy-modified",
      "owner": "crash-override404",
      "full_name": "crash-override404/linepy-modified",
      "description": "Python lib for line unofficial messaging API.",
      "language": "Python",
      "stars": 89,
      "forks": 57,
      "url": "https://github.com/crash-override404/linepy-modified",
      "tags": []
    },
    {
      "id": 440,
      "name": "power-message",
      "owner": "drbh",
      "full_name": "drbh/power-message",
      "description": "📱Free the blue message. Finally a simple REST API for iMessage",
      "language": "Python",
      "stars": 89,
      "forks": 14,
      "url": "https://github.com/drbh/power-message",
      "tags": []
    },
    {
      "id": 441,
      "name": "permabots",
      "owner": "jlmadurga",
      "full_name": "jlmadurga/permabots",
      "description": "Connect instant messaging bots to your APIs. ",
      "language": "Python",
      "stars": 85,
      "forks": 24,
      "url": "https://github.com/jlmadurga/permabots",
      "tags": [
        "bots",
        "chatbot",
        "django",
        "facebook-messenger-bot",
        "kikbot",
        "python",
        "telegram"
      ]
    },
    {
      "id": 442,
      "name": "python-library",
      "owner": "urbanairship",
      "full_name": "urbanairship/python-library",
      "description": "A Python library for using the Airship APIs for push notifications, reporting and other message types",
      "language": "Python",
      "stars": 82,
      "forks": 65,
      "url": "https://github.com/urbanairship/python-library",
      "tags": []
    },
    {
      "id": 443,
      "name": "pycent",
      "owner": "centrifugal",
      "full_name": "centrifugal/pycent",
      "description": "Python library to communicate with Centrifugo HTTP API. Synchronous and asynchronous clients included",
      "language": "Python",
      "stars": 76,
      "forks": 15,
      "url": "https://github.com/centrifugal/pycent",
      "tags": [
        "api-client",
        "asyncio",
        "centrifugo",
        "http",
        "messaging",
        "pubsub"
      ]
    },
    {
      "id": 444,
      "name": "laozy",
      "owner": "shellc",
      "full_name": "shellc/laozy",
      "description": "Laozy is a self-hosted web application that helps you build and deploy LLM-based dialogue robots.  The robot you built can connect to instant messaging platforms like WeChat, Telegram, etc. You can also integrate it into your app with REST APIs.",
      "language": "Python",
      "stars": 75,
      "forks": 4,
      "url": "https://github.com/shellc/laozy",
      "tags": [
        "chatbot",
        "chatglm",
        "chatgpt",
        "gpt",
        "langchain",
        "llm",
        "llms",
        "wechat"
      ]
    },
    {
      "id": 445,
      "name": "mattersend",
      "owner": "mtorromeo",
      "full_name": "mtorromeo/mattersend",
      "description": "Library and CLI utility to send messages to mattermost's incoming webhooks",
      "language": "Python",
      "stars": 73,
      "forks": 7,
      "url": "https://github.com/mtorromeo/mattersend",
      "tags": [
        "api",
        "cli",
        "mattermost",
        "webhooks"
      ]
    },
    {
      "id": 446,
      "name": "mtroid-bot",
      "owner": "NishNishendanidu",
      "full_name": "NishNishendanidu/mtroid-bot",
      "description": "  GENARATED BY NISHEN   Mtroid whatsApp bot    🪀 Command:`setup `✨️ Description:` edit bot settings `⚠️️ Warn   `🪀 Command:` install <br> `✨️ Description:` Install external plugins. <br> `⚠️️ Warn:` Get plugins only from https://t.me/AlphaXplugin.   `🪀 Command:` plugin<br> `✨️ Description:` Shows the plugins you have installed.   `🪀 Command:` remove<br> `✨️ Description:` Removes the plugin.   `🪀 Command:` admin<br> `✨️ Description:` Admin menu.   `🪀 Command:` ban <br> `✨️ Description:` Ban someone in the group. Reply to message or tag a person to use command.   `🪀 Command:` gname <br> `✨️ Description:` Change group name.   `🪀 Command:` gdesc<br> `✨️ Description:` Change group discription.   `🪀 Command:` dis <br> `✨️ Description:`  Disappearing message on/off. <br> `💡 Example:` .dis on/off   `🪀 Command:` reset<br> `✨️ Description:` Reset group invitation link.   `🪀 Command:` gpp<br> `✨️ Description:` Set group profile picture   `🪀 Command:` add<br> `✨️ Description:` Adds someone to the group.   `🪀 Command:` promote <br> `✨️ Description:` Makes any person an admin.   `🪀 Command:` demote <br> `✨️ Description:` Takes the authority of any admin.   `🪀 Command:` mute <br> `✨️ Description:` Mute the group chat. Only the admins can send a message. ⌨️ Example: .mute & .mute 5m etc   `🪀 Command:` unmute <br> `✨️ Description:` Unmute the group chat. Anyone can send a message.   `🪀 Command:` invite <br> `✨️ Description:` Provides the group's invitation link.   `🪀 Command:` afk <br> `✨️ Description:` It makes you AFK - Away From Keyboard.   `🪀 Command:` art pack<br> `✨️ Description:` Beautifull artpack with more than 100 messages.   `🪀 Command:` aspm <br> `✨️ Description:` This command for any emergency situation about any kind of WhatsApp SPAM in Group   `🪀 Command:` alag <br> `✨️ Description:` This command for any emergency situation about any kind of WhatsApp SPAM in Chat   `🪀 Command:` linkblock <br> `✨️ Description:` Activates the block link tool. <br> `💡 Example:` .linkblock on / off   `🪀 Command:` CrAsH<br> `✨️ Description:` send BUG VIRUS to group.   `🪀 Command:` CrAsH high<br> `✨️ Description:` send BUG VIRUS to group untill you stop.   `🪀 Command:` -carbon   `🪀 Command:` clear<br> `✨️ Description:` Clears all the messages from the chat.   `🪀 Command:` qr <br> `✨️ Description:` To create an qr code from the word you give.   `🪀 Command:` bcode <br> `✨️ Description:` To create an barcode from the word you give.   `🪀 Command:` compliment<br> `✨️ Description:` It sends complimentry sentenses.   `🪀 Command:` toaudio<br> `✨️ Description:` Converts video to sound.   `🪀 Command:` toimage<br> `✨️ Description:` Converts the sticker to a photo.   `🪀 Command:` tovideo<br> `✨️ Description:` Converts animated stickers to video.   `🪀 Command:` deepai<br> `✨️ Description:` Runs the most powerful artificial intelligence tools using artificial neural networks.   `🪀 Command:` details<br> `✨️ Description:` Displays metadata data of group or person.   `🪀 Command:` dict <br> `✨️ Description:` Use it as a dictionary. Eg: .dict enUS;lead For supporting languages send •.lngcode•   `🪀 Command:` dst<br> `✨️ Description:` Download status you repled.   `🪀 Command:` emedia<br> `✨️ Description:` It is a plugin with more than 25 media tools.   `🪀 Command:` emoji <br> `✨️ Description:` You can get Emoji as image.   `🪀 Command:` print <br> `✨️ Description:` Prints the inside of the file on the server.   `🪀 Command:` bashmedia <br> `✨️ Description:` Sends audio, video and photos inside the server. <br> `💡 Example:` video.mp4 && media/gif/pic.mp4   `🪀 Command:` addserver<br> `✨️ Description:` Uploads image, audio or video to the server.   `🪀 Command:` term <br> `✨️ Description:` Allows to run the command on the server's shell.   `🪀 Command:` mediainfo<br> `✨️ Description:` Shows the technical information of the replied video.   `🪀 Command:` pmsend <br> `✨️ Description:` Sends a private message to the replied person.   `🪀 Command:` pmttssend <br> `✨️ Description:` Sends a private voice message to the respondent.   `🪀 Command:` ffmpeg <br> `✨️ Description:` Applies the desired ffmpeg filter to the video. ⌨️ Example: .ffmpeg fade=in:0:30   `🪀 Command:` filter <br> `✨️ Description:` It adds a filter. If someone writes your filter, it send the answer. If you just write .filter, it show's your filter list.   `🪀 Command:` stop <br> `✨️ Description:` Stops the filter you added previously.   `🪀 Command:` bgmlist<br> `✨️ Description:` Bgm List.   `🪀 Command:` github <br> `✨️ Description:` It Send Github User Data. <br> `💡 Example:` .github WhatsApp   `🪀 Command:` welcome<br> `✨️ Description:` It sets the welcome message. If you leave it blank it shows the welcome message.   `🪀 Command:` goodbye<br> `✨️ Description:` Sets the goodbye message. If you leave blank, it show's the goodbye message.   `🪀 Command:` help<br> `✨️ Description:` Gives information about using the bot from the Help menu.   `🪀 Command:` varset <br> `✨️ Description:` Changes the text of modules like alive, afk etc..   `🪀 Command:` restart<br> `✨️ Description:` Restart bot.   `🪀 Command:` poweroff<br> `✨️ Description:` Shutdown bot.   `🪀 Command:` dyno<br> `✨️ Description:` Check heroku dyno usage   `🪀 Command:` setvar <br> `✨️ Description:` Set heroku config var   `🪀 Command:` delvar <br> `✨️ Description:` Delete heroku config var   `🪀 Command:` getvar <br> `✨️ Description:` Get heroku config var   `🪀 Command:` hpmod <br> `✨️ Description:` To get mod apps info.   `🪀 Command:` insult<br> `✨️ Description:` It gives random insults.   `🪀 Command:` locate<br> `✨️ Description:` It send your location. <br> `⚠️️ Warn:` Please open your location before using command!   `🪀 Command:` logmsg<br> `✨️ Description:` Saves the message you reply to your private number. <br> `⚠️️ Warn:` Does not support animated stickers!   `🪀 Command:` logomaker<br> `✨️ Description:` Shows logomaker tools with unlimited access.   `🪀 Command:` meme <br> `✨️ Description:` Photo memes you replied to.   `🪀 Command:` movie <br> `✨️ Description:` Shows movie info.   `🪀 Command:` neko<br> `✨️ Description:` Replied messages will be added to nekobin.com.   `🪀 Command:` song <br> `✨️ Description:` Uploads the song you wrote.   `🪀 Command:` video <br> `✨️ Description:` Downloads video from YouTube.   `🪀 Command:` fb <br> `✨️ Description:` Download video from facebook.   `🪀 Command:` tiktok <br> `✨️ Description:` Download tiktok video.   `🪀 Command:` notes<br> `✨️ Description:` Shows all your existing notes.   `🪀 Command:` save <br> `✨️ Description:` Reply a message and type .save or just use .save <Your note> without replying   `🪀 Command:` deleteNotes<br> `✨️ Description:` Deletes *all* your saved notes.   `🪀 Command:` ocr <br> `✨️ Description:` Reads the text on the photo you have replied.   `🪀 Command:` pinimg <br> `✨️ Description:` Downloas images from Pinterest.   `🪀 Command:` playst <br> `✨️ Description:` Get app details from play store.   `🪀 Command:` profile<br> `✨️ Description:` Profile menu.   `🪀 Command:` getpp<br> `✨️ Description:` Get pofile picture.   `🪀 Command:` setbio <br> `✨️ Description:` Set your about.   `🪀 Command:` getbio<br> `✨️ Description:` Get user about.   `🪀 Command:` archive<br> `✨️ Description:` Archive chat.   `🪀 Command:` unarchive<br> `✨️ Description:` Unarchive chat.   `🪀 Command:` pin<br> `✨️ Description:` Archive chat.   `🪀 Command:` unpin<br> `✨️ Description:` Unarchive chat.   `🪀 Command:` pp<br> `✨️ Description:` Makes the profile photo what photo you reply.   `🪀 Command:` kickme<br> `✨️ Description:` It kicks you from the group you are using it in.   `🪀 Command:` block <br> `✨️ Description:` Block user.   `🪀 Command:` unblock <br> `✨️ Description:` Unblock user.   `🪀 Command:` jid <br> `✨️ Description:` Giving user's JID.   `🪀 Command:` rdmore <br> `✨️ Description:` Add readmore to your message >> Use # to get readmore.   `🪀 Command:` removebg <br> `✨️ Description:` Removes the background of the photos.   `🪀 Command:` report <br> `✨️ Description:` Sends reports to group admins.   `🪀 Command:` roll<br> `✨️ Description:` Roll dice randomly.   `🪀 Command:` scam <br> `✨️ Description:` Creates 5 minutes of fake actions.   `🪀 Command:` scan <br> `✨️ Description:` Checks whether the entered number is registered on WhatApp.   `🪀 Command:` trt<br> `✨️ Description:` It translates with Google Translate. You must reply any message. <br> `💡 Example:` .trt en si (From English to Sinhala)   `🪀 Command:` antilink <br> `✨️ Description:` Activates the Antilink tool. <br> `💡 Example:` .antilink on / off   `🪀 Command:` autobio <br> `✨️ Description:` Add live clock to your bio! <br> `💡 Example:` .autobio on / off   `🪀 Command:` detectlang<br> `✨️ Description:` Guess the language of the replied message.   `🪀 Command:` currency   `🪀 Command:` tts <br> `✨️ Description:` It converts text to sound.   `🪀 Command:` music <br> `✨️ Description:` Uploads the song you wrote.   `🪀 Command:` smp3 <br> `✨️ Description:` Get song as a mp3 documet file   `🪀 Command:` mp4 <br> `✨️ Description:` Downloads video from YouTube.   `🪀 Command:` yt <br> `✨️ Description:` It searchs on YouTube.   `🪀 Command:` wiki <br> `✨️ Description:` Searches query on Wikipedia.   `🪀 Command:` img <br> `✨️ Description:` Searches for related pics on Google.   `🪀 Command:` lyric <br> `✨️ Description:` Finds the lyrics of the song.   `🪀 Command:` covid <br> `✨️ Description:` Shows the daily and overall covid table of more than 15 countries.   `🪀 Command:` ss <br> `✨️ Description:` Takes a screenshot from the page in the given link.   `🪀 Command:` simi <br> `✨️ Description:` Are you bored? ... Fool around with SimSimi. ... World first popular Chatbot for daily conversation.   `🪀 Command:` spdf <br> `✨️ Description:` Site to pdf file.   `🪀 Command:` insta <br> `✨️ Description:` Downloads videos or photos from Instagram.   `🪀 Command:` animesay <br> `✨️ Description:` It writes the text inside the banner the anime girl is holding   `🪀 Command:` changesay <br> `✨️ Description:` Turns the text into the change my mind poster.   `🪀 Command:` trumpsay <br> `✨️ Description:` Converts the text to Trump's tweet.   `🪀 Command:` audio spam<br> `✨️ Description:` Sends the replied audio as spam.   `🪀 Command:` foto spam<br> `✨️ Description:` Sends the replied photo as spam.   `🪀 Command:` sticker spam<br> `✨️ Description:` Convert the replied photo or video to sticker and send it as spam.   `🪀 Command:` vid spam   `🪀 Command:` killspam<br> `✨️ Description:` Stops spam command.   `🪀 Command:` spam <br> `✨️ Description:` It spam until you stop it. ⌨️ Example: .spam test   `🪀 Command:` spotify <br> `✨️ Description:` Get music details from spotify.   `🪀 Command:` st<br> `✨️ Description:` It converts your replied photo or video to sticker.   `🪀 Command:` sweather<br> `✨️ Description:` Gives you the weekly interpretations of space weather observations provided by the Space Weather Research Center (SWRC) for a p.   `🪀 Command:` alive <br> `✨️ Description:` Does bot work?   `🪀 Command:` sysd<br> `✨️ Description:` Shows the system properties.   `🪀 Command:` tagadmin   `🪀 Command:` tg <br> `✨️ Description:` Tags everyone in the group.   `🪀 Command:` pmall<br> `✨️ Description:` Sends the replied message to all members in the group.   `🪀 Command:` tblend <br> `✨️ Description:` Applies the selected TBlend effect to videos.   `🪀 Command:` link<br> `✨️ Description:` The image you reply to uploads to telegra.ph and provides its link.   `🪀 Command:` unvoice<br> `✨️ Description:` Converts audio to sound recording.   `🪀 Command:` up<br> `✨️ Description:` Checks the update your bot.   `🪀 Command:` up now<br> `✨️ Description:` It makes updates.   `🪀 Command:` voicy<br> `✨️ Description:` It converts audio to text.   `🪀 Command:` wp<br> `✨️ Description:` It sends high resolution wallpapers.   `🪀 Command:` wame <br> `✨️ Description:` Get a link to the user chat.   `🪀 Command:` weather <br> `✨️ Description:` Shows the weather.   `🪀 Command:` speedtest <br> `✨️ Description:` Measures Download and Upload speed. <br> `💡 Example:` speedtest user // speedtest server   `🪀 Command:` ping<br> `✨️ Description:` Measures your ping.   `🪀 Command:` short <br> `✨️ Description:` Shorten the long link.   `🪀 Command:` calc <br> `✨️ Description:` Performs simple math operations.   `🪀 Command:` xapi<br> `✨️ Description:` Xteam API key info.   `🪀 Command:` joke<br> `✨️ Description:` Send random jokes.   `🪀 Command:` quote<br> `✨️ Description:` Send random quotes. ",
      "language": "Python",
      "stars": 73,
      "forks": 42,
      "url": "https://github.com/NishNishendanidu/mtroid-bot",
      "tags": []
    },
    {
      "id": 447,
      "name": "Groupy",
      "owner": "rhgrant10",
      "full_name": "rhgrant10/Groupy",
      "description": "A simple yet powerful API wrapper for the GroupMe messaging service.",
      "language": "Python",
      "stars": 68,
      "forks": 18,
      "url": "https://github.com/rhgrant10/Groupy",
      "tags": [
        "api-client",
        "groupme",
        "pypi",
        "python",
        "python-library",
        "python3"
      ]
    },
    {
      "id": 448,
      "name": "TelegramMassDMBot",
      "owner": "DenizShabani",
      "full_name": "DenizShabani/TelegramMassDMBot",
      "description": "Python script that can connect with multiple accounts via Telegram API, can scrape members from public groups and send messages via username to the scraped members. To be able to connect only via phone numbers or send messages also via ID then please contact me on Telegram. You can find the link at the bottom of the README.md file.",
      "language": "Python",
      "stars": 68,
      "forks": 16,
      "url": "https://github.com/DenizShabani/TelegramMassDMBot",
      "tags": [
        "python",
        "script",
        "scripts",
        "telegram",
        "telegram-api",
        "telegram-bot",
        "telegram-bot-api",
        "telegram-bots",
        "telegram-userbot"
      ]
    },
    {
      "id": 449,
      "name": "plivo-python",
      "owner": "plivo",
      "full_name": "plivo/plivo-python",
      "description": "A Python library for communicating with the Plivo API and generating Plivo XML.",
      "language": "Python",
      "stars": 67,
      "forks": 66,
      "url": "https://github.com/plivo/plivo-python",
      "tags": [
        "messaging",
        "plivo",
        "voice"
      ]
    },
    {
      "id": 450,
      "name": "slackblocks",
      "owner": "nicklambourne",
      "full_name": "nicklambourne/slackblocks",
      "description": ":game_die: Python API for Building Messages Using the Slack Block Kit API",
      "language": "Python",
      "stars": 67,
      "forks": 26,
      "url": "https://github.com/nicklambourne/slackblocks",
      "tags": [
        "blocks",
        "python",
        "slack",
        "slack-api",
        "slack-bot"
      ]
    },
    {
      "id": 451,
      "name": "telegram_openai_whisper_api_transcriber",
      "owner": "gsamat",
      "full_name": "gsamat/telegram_openai_whisper_api_transcriber",
      "description": "Telegram Bot to transcribe voice messages via OpenAI Whisper API",
      "language": "Python",
      "stars": 62,
      "forks": 13,
      "url": "https://github.com/gsamat/telegram_openai_whisper_api_transcriber",
      "tags": []
    },
    {
      "id": 452,
      "name": "slacksocket",
      "owner": "vektorlab",
      "full_name": "vektorlab/slacksocket",
      "description": "SlackSocket is a Python interface to the Slack Real Time Messaging(RTM) API",
      "language": "Python",
      "stars": 62,
      "forks": 10,
      "url": "https://github.com/vektorlab/slacksocket",
      "tags": []
    },
    {
      "id": 453,
      "name": "python-frameworks",
      "owner": "jgujerry",
      "full_name": "jgujerry/python-frameworks",
      "description": "Another curated list of Python frameworks",
      "language": "Python",
      "stars": 62,
      "forks": 4,
      "url": "https://github.com/jgujerry/python-frameworks",
      "tags": [
        "api",
        "artificial-intelligence",
        "cms",
        "data-workflow",
        "deep-learning",
        "devops",
        "distributed-computing",
        "enterprise-integrations",
        "frameworks",
        "machine-learning",
        "messaging",
        "parallel-computing",
        "pipeline",
        "python",
        "task-queue",
        "web-crawling",
        "webapp"
      ]
    },
    {
      "id": 454,
      "name": "linkedin-messaging-api",
      "owner": "beeper",
      "full_name": "beeper/linkedin-messaging-api",
      "description": "DEPRECATED: moved to https://github.com/beeper/linkedin",
      "language": "Python",
      "stars": 61,
      "forks": 12,
      "url": "https://github.com/beeper/linkedin-messaging-api",
      "tags": [
        "linkedin",
        "linkedin-api"
      ]
    },
    {
      "id": 455,
      "name": "ingrex_lib",
      "owner": "blackgear",
      "full_name": "blackgear/ingrex_lib",
      "description": "A python lib for Google Ingress including intel api, message process, portal process, map process.",
      "language": "Python",
      "stars": 61,
      "forks": 43,
      "url": "https://github.com/blackgear/ingrex_lib",
      "tags": []
    },
    {
      "id": 456,
      "name": "butterfield",
      "owner": "jcarbaugh",
      "full_name": "jcarbaugh/butterfield",
      "description": "A Python Slack bot framework using asyncio and Slack's Real Time Messaging API",
      "language": "Python",
      "stars": 61,
      "forks": 8,
      "url": "https://github.com/jcarbaugh/butterfield",
      "tags": []
    },
    {
      "id": 457,
      "name": "python-whatsapp-chatbot",
      "owner": "Whapi-Cloud",
      "full_name": "Whapi-Cloud/python-whatsapp-chatbot",
      "description": "WhatsApp Python Bot. The basic functionality you will need when developing a bot: sending and receiving messages, sending a picture, file, document, video, as well as creating a group and sending a message to the WhatsApp group",
      "language": "Python",
      "stars": 60,
      "forks": 14,
      "url": "https://github.com/Whapi-Cloud/python-whatsapp-chatbot",
      "tags": [
        "api",
        "bot",
        "chatbot",
        "cloud",
        "groups",
        "whatsapp",
        "whatsapp-api",
        "whatsapp-automation",
        "whatsapp-bot",
        "whatsappbot"
      ]
    },
    {
      "id": 458,
      "name": "pykafka",
      "owner": "dsully",
      "full_name": "dsully/pykafka",
      "description": "Python API for the Kafka Message Queue",
      "language": "Python",
      "stars": 56,
      "forks": 28,
      "url": "https://github.com/dsully/pykafka",
      "tags": []
    },
    {
      "id": 459,
      "name": "discord-telegram-bot",
      "owner": "runetech0",
      "full_name": "runetech0/discord-telegram-bot",
      "description": "[Not Working Anymore] Simple discord to telegram messages forward bot. It receives messages from filtered discord servers and channels and forward these messages to specified telegram channel using telegram api.",
      "language": "Python",
      "stars": 52,
      "forks": 18,
      "url": "https://github.com/runetech0/discord-telegram-bot",
      "tags": []
    },
    {
      "id": 460,
      "name": "telegram-ai-digest",
      "owner": "sliday",
      "full_name": "sliday/telegram-ai-digest",
      "description": "Automates Telegram message digests using Claude AI for summaries and Replicate API for image generation, sending results to saved messages.",
      "language": "Python",
      "stars": 52,
      "forks": 6,
      "url": "https://github.com/sliday/telegram-ai-digest",
      "tags": []
    },
    {
      "id": 461,
      "name": "whatsappy",
      "owner": "italoseara",
      "full_name": "italoseara/whatsappy",
      "description": "A whatsapp api made with selenium in Python",
      "language": "Python",
      "stars": 46,
      "forks": 7,
      "url": "https://github.com/italoseara/whatsappy",
      "tags": [
        "automation",
        "bot",
        "chat",
        "iot",
        "messaging",
        "python",
        "whatsapp",
        "whatsapp-web"
      ]
    },
    {
      "id": 462,
      "name": "line-api-use-case-messaging-api",
      "owner": "line",
      "full_name": "line/line-api-use-case-messaging-api",
      "description": "LINE Messaging API demo application provided by LINE API Use Case",
      "language": "Python",
      "stars": 45,
      "forks": 19,
      "url": "https://github.com/line/line-api-use-case-messaging-api",
      "tags": [
        "python"
      ]
    },
    {
      "id": 463,
      "name": "teletrans",
      "owner": "ihategfw",
      "full_name": "ihategfw/teletrans",
      "description": "TeleTrans is a Python-based Telegram bot that translates messages in real-time. It uses the OpenAI API and DeepL API for translation.",
      "language": "Python",
      "stars": 45,
      "forks": 8,
      "url": "https://github.com/ihategfw/teletrans",
      "tags": []
    },
    {
      "id": 464,
      "name": "tuya-connector-python",
      "owner": "tuya",
      "full_name": "tuya/tuya-connector-python",
      "description": "The tuya-connector-python SDK is designed to support open APIs and Pulsar messages provided by Tuya.",
      "language": "Python",
      "stars": 43,
      "forks": 20,
      "url": "https://github.com/tuya/tuya-connector-python",
      "tags": [
        "iot",
        "python",
        "tuya"
      ]
    },
    {
      "id": 465,
      "name": "anyMesh-Python",
      "owner": "AnyMesh",
      "full_name": "AnyMesh/anyMesh-Python",
      "description": "A multi-platform, decentralized, auto-discover and auto-connect mesh networking and messaging API",
      "language": "Python",
      "stars": 41,
      "forks": 10,
      "url": "https://github.com/AnyMesh/anyMesh-Python",
      "tags": []
    },
    {
      "id": 466,
      "name": "algo-trading-using-fyers-broker-api",
      "owner": "srikar-kodakandla",
      "full_name": "srikar-kodakandla/algo-trading-using-fyers-broker-api",
      "description": "This program trades in stock market using fyers api . It buys when supertrend gives buy signal and sells if supertrend gives sell signal , if adx is below 30 it won't trade. it selects supertrend values by bruteforcing all the possible combinations with past data of given stock . It selects stock day before the market opens.It selects the stocks to trade by checking list of stocks in chartink script , then it bruteforces best combination of supertrend combinations and trades with that supertrend combinations on the next day , it also messages you live alerts in telegram.",
      "language": "Python",
      "stars": 41,
      "forks": 18,
      "url": "https://github.com/srikar-kodakandla/algo-trading-using-fyers-broker-api",
      "tags": [
        "algo-trading",
        "fyers-api"
      ]
    },
    {
      "id": 467,
      "name": "selfbot-py",
      "owner": "crash-override404",
      "full_name": "crash-override404/selfbot-py",
      "description": "Selfbot for line unofficial messaging API.",
      "language": "Python",
      "stars": 40,
      "forks": 30,
      "url": "https://github.com/crash-override404/selfbot-py",
      "tags": []
    },
    {
      "id": 468,
      "name": "pubsub2inbox",
      "owner": "GoogleCloudPlatform",
      "full_name": "GoogleCloudPlatform/pubsub2inbox",
      "description": "Pubsub2Inbox is a versatile, multi-purpose tool to handle Pub/Sub messages and turn them into email, API calls, GCS objects, files or almost anything.",
      "language": "Python",
      "stars": 40,
      "forks": 15,
      "url": "https://github.com/GoogleCloudPlatform/pubsub2inbox",
      "tags": [
        "cloud-run",
        "gcp-cloud-functions",
        "google-cloud",
        "google-cloud-platform",
        "pubsub"
      ]
    },
    {
      "id": 469,
      "name": "loklak_server",
      "owner": "loklak",
      "full_name": "loklak/loklak_server",
      "description": "Distributed Open Source twitter and social media message search server that anonymously collects, shares, dumps and indexes data http://api.loklak.org",
      "language": "Java",
      "stars": 1384,
      "forks": 222,
      "url": "https://github.com/loklak/loklak_server",
      "tags": []
    },
    {
      "id": 470,
      "name": "line-bot-sdk-java",
      "owner": "line",
      "full_name": "line/line-bot-sdk-java",
      "description": "LINE Messaging API SDK for Java",
      "language": "Java",
      "stars": 623,
      "forks": 948,
      "url": "https://github.com/line/line-bot-sdk-java",
      "tags": [
        "bot",
        "java",
        "kotlin",
        "line",
        "linebot",
        "sdk",
        "spring"
      ]
    },
    {
      "id": 471,
      "name": "OwlGram",
      "owner": "OwlGramDev",
      "full_name": "OwlGramDev/OwlGram",
      "description": "OwlGram is an unofficial messaging app that uses Telegram's API.",
      "language": "Java",
      "stars": 279,
      "forks": 25,
      "url": "https://github.com/OwlGramDev/OwlGram",
      "tags": [
        "android",
        "chat",
        "telegram"
      ]
    },
    {
      "id": 472,
      "name": "OctoGram",
      "owner": "OctoGramApp",
      "full_name": "OctoGramApp/OctoGram",
      "description": "OctoGram is an unofficial messaging app that uses Telegram's API.",
      "language": "Java",
      "stars": 259,
      "forks": 14,
      "url": "https://github.com/OctoGramApp/OctoGram",
      "tags": []
    },
    {
      "id": 474,
      "name": "product-micro-integrator",
      "owner": "wso2",
      "full_name": "wso2/product-micro-integrator",
      "description": "The cloud-native configuration driven runtime that helps developers implement composite microservices.",
      "language": "Java",
      "stars": 215,
      "forks": 234,
      "url": "https://github.com/wso2/product-micro-integrator",
      "tags": [
        "api",
        "cloud-native",
        "integration",
        "kubernetes",
        "messaging",
        "microservices",
        "rest",
        "services",
        "soap",
        "synapse",
        "wso2"
      ]
    },
    {
      "id": 475,
      "name": "whatsapp-business-java-api",
      "owner": "Bindambc",
      "full_name": "Bindambc/whatsapp-business-java-api",
      "description": "Whatsapp business api SDK, written in java. This SDK implements the Official Whatsapp Cloud API and WhatsApp Business Management API. These allows you to:  manage your WhatsApp Business Account assets, such as message templates and phone numbers; send messages to your contacts, such  as simple text messages, messages with buttons...",
      "language": "Java",
      "stars": 199,
      "forks": 91,
      "url": "https://github.com/Bindambc/whatsapp-business-java-api",
      "tags": [
        "api-whatsapp",
        "java",
        "sdk",
        "sdk-whatsapp",
        "whatsapp",
        "whatsapp-api",
        "whatsapp-api-java",
        "whatsapp-bot",
        "whatsapp-business",
        "whatsapp-business-api",
        "whatsapp-business-bot",
        "whatsapp-business-sdk",
        "whatsapp-chat",
        "whatsapp-client",
        "whatsapp-cloud",
        "whatsapp-cloud-api-client",
        "whatsapp-cloud-api-java",
        "whatsapp-java",
        "whatsapp-java-sdk",
        "whatsapp-sdk"
      ]
    },
    {
      "id": 476,
      "name": "MsgViewer",
      "owner": "lolo101",
      "full_name": "lolo101/MsgViewer",
      "description": "MsgViewer is email-viewer utility for .msg e-mail messages, implemented in pure Java. MsgViewer works on Windows/Linux/Mac Platforms. Also provides a java api to read mail messges (msg files) programmatically.",
      "language": "Java",
      "stars": 180,
      "forks": 23,
      "url": "https://github.com/lolo101/MsgViewer",
      "tags": [
        "format-converter",
        "mail",
        "outlook"
      ]
    },
    {
      "id": 477,
      "name": "parallel-consumer",
      "owner": "confluentinc",
      "full_name": "confluentinc/parallel-consumer",
      "description": "Parallel Apache Kafka client wrapper with per message ACK, client side queueing, a simpler consumer/producer API with key concurrency and extendable non-blocking IO processing.",
      "language": "Java",
      "stars": 174,
      "forks": 144,
      "url": "https://github.com/confluentinc/parallel-consumer",
      "tags": [
        "kafka",
        "kafka-consumer",
        "messaging",
        "performance",
        "queueing"
      ]
    },
    {
      "id": 478,
      "name": "Whatsapp-API",
      "owner": "omegaes",
      "full_name": "omegaes/Whatsapp-API",
      "description": "An Android Library with demo application, to send media and text messages via Whatsapp on rooted device",
      "language": "Java",
      "stars": 154,
      "forks": 76,
      "url": "https://github.com/omegaes/Whatsapp-API",
      "tags": [
        "android",
        "android-application",
        "android-library",
        "hijack",
        "hijacking-methods",
        "whatsapp"
      ]
    },
    {
      "id": 479,
      "name": "openchaos",
      "owner": "openmessaging",
      "full_name": "openmessaging/openchaos",
      "description": "Chaos Framework proposes a unified API for vendors to provide solutions to various aspects of performing the principles of chaos engineering in cloud-native environment.",
      "language": "Java",
      "stars": 152,
      "forks": 47,
      "url": "https://github.com/openmessaging/openchaos",
      "tags": [
        "cache",
        "chaos-engineering",
        "eventing",
        "kafka",
        "messaging"
      ]
    },
    {
      "id": 480,
      "name": "jsmpp",
      "owner": "uudashr",
      "full_name": "uudashr/jsmpp",
      "description": "Java SMPP (Short Message Peer-to-peer Protocol) API",
      "language": "Java",
      "stars": 123,
      "forks": 119,
      "url": "https://github.com/uudashr/jsmpp",
      "tags": []
    },
    {
      "id": 481,
      "name": "vonage-java-sdk",
      "owner": "Vonage",
      "full_name": "Vonage/vonage-java-sdk",
      "description": "Vonage Server SDK for Java. API support for SMS, Messages, Voice, Text-to-Speech, Numbers, Verify (2FA), Video and more.",
      "language": "Java",
      "stars": 97,
      "forks": 121,
      "url": "https://github.com/Vonage/vonage-java-sdk",
      "tags": [
        "authentication",
        "dtmf",
        "java",
        "messaging",
        "messaging-api",
        "phone",
        "phone-numbers",
        "server-sdk",
        "sms",
        "sms-api",
        "telecom",
        "two-factor",
        "two-factor-authentication",
        "verification",
        "verify",
        "video-api",
        "voice",
        "vonage",
        "whatsapp"
      ]
    },
    {
      "id": 482,
      "name": "Triton",
      "owner": "tritonmc",
      "full_name": "tritonmc/Triton",
      "description": "Translate your server! Sends the same message in different languages... Hooks into all plugins!",
      "language": "Java",
      "stars": 91,
      "forks": 34,
      "url": "https://github.com/tritonmc/Triton",
      "tags": [
        "api",
        "hacktoberfest",
        "i18n",
        "java",
        "minecraft",
        "minecraft-plugin",
        "spigot",
        "spigot-plugin"
      ]
    },
    {
      "id": 483,
      "name": "ModAPI",
      "owner": "HypixelDev",
      "full_name": "HypixelDev/ModAPI",
      "description": "Hypixel Mod API for interfacing with the Hypixel Server via the Minecraft Plugin Message system.",
      "language": "Java",
      "stars": 88,
      "forks": 10,
      "url": "https://github.com/HypixelDev/ModAPI",
      "tags": [
        "hypixel"
      ]
    },
    {
      "id": 484,
      "name": "Pushraven",
      "owner": "Raudius",
      "full_name": "Raudius/Pushraven",
      "description": "A simple Java library to interface with Firebase Cloud Messaging (FCM) API. Pushraven allows you to push notifications to clients in very few lines of code.",
      "language": "Java",
      "stars": 78,
      "forks": 34,
      "url": "https://github.com/Raudius/Pushraven",
      "tags": [
        "cloud",
        "fcm",
        "fcm-notifications",
        "firebase",
        "firebase-cloud-messaging",
        "java",
        "messaging",
        "notification",
        "push"
      ]
    },
    {
      "id": 485,
      "name": "demo-microservices",
      "owner": "miliariadnane",
      "full_name": "miliariadnane/demo-microservices",
      "description": "E-commerce platform showcasing microservice architecture with Spring Cloud, Event-Driven Design, and Cloud-Native patterns. Features service discovery, API gateway, distributed tracing, message queuing, and OAuth2 security. Includes complete deployment guides for Docker, Kubernetes, and AWS.",
      "language": "Java",
      "stars": 76,
      "forks": 34,
      "url": "https://github.com/miliariadnane/demo-microservices",
      "tags": [
        "amqp",
        "api-gateway",
        "apikey-manager",
        "aws",
        "aws-eks",
        "docker",
        "docker-compose",
        "eureka-server",
        "feign-client",
        "git-actions",
        "grafana-prometheus",
        "k8s",
        "oauth2-and-keycloak",
        "postgresql-database",
        "rabbitmq",
        "resilience4j-circuitbreaker",
        "service-discovery",
        "zipkin-sleuth"
      ]
    },
    {
      "id": 486,
      "name": "spring-boot-base",
      "owner": "shengchina1125",
      "full_name": "shengchina1125/spring-boot-base",
      "description": "Licence GitHub Release  简介  Spring Boot API Project Seed 是一个基于Spring Boot & MyBatis的种子项目，用于快速构建中小型API、RESTful API项目，该种子项目已经有过多个真实项目的实践，稳定、简单、快速，使我们摆脱那些重复劳动，专注于业务代码的编写，减少加班。下面是一个简单的使用演示，看如何基于本项目在短短几十秒钟内实现一套简单的API，并运行提供服务。    特征&提供  最佳实践的项目结构、配置文件、精简的POM（查看项目结构图） 统一响应结果封装及生成工具 统一异常处理 简单的接口签名认证 常用基础方法抽象封装 使用Druid Spring Boot Starter 集成Druid数据库连接池与监控 使用FastJsonHttpMessageConverter，提高JSON序列化速度 集成MyBatis、通用Mapper插件、PageHelper分页插件，实现单表业务零SQL 提供代码生成器根据表名生成对应的Model、Mapper、MapperXML、Service、ServiceImpl、Controller等基础代码，其中Controller模板默认提供POST和RESTful两套，根据需求在CodeGenerator.genController(tableName)方法中自己选择，默认使用POST模板。代码模板可根据实际项目的需求来扩展，由于每个公司业务都不太一样，所以只提供了一些比较基础、通用的模板，主要是提供一个思路来减少重复代码的编写，我在实际项目的使用中，其实根据公司业务的抽象编写了大量的模板。另外，使用模板也有助于保持团队代码风格的统一 另有彩蛋，待你探索   快速开始  克隆项目 对test包内的代码生成器CodeGenerator进行配置，主要是JDBC，因为要根据表名来生成代码 如果只是想根据上面的演示来亲自试试的话可以使用test resources目录下的demo-user.sql，否则忽略该步 输入表名，运行CodeGenerator.main()方法，生成基础代码（可能需要刷新项目目录才会出来） 根据业务在基础代码上进行扩展 对开发环境配置文件application-dev.properties进行配置，启动项目，Have Fun！   开发建议  表名，建议使用小写，多个单词使用下划线拼接 Model内成员变量建议与表字段数量对应，如需扩展成员变量（比如连表查询）建议创建DTO，否则需在扩展的成员变量上加@Transient注解，详情见通用Mapper插件文档说明 建议业务失败直接使用ServiceException(\"message\")抛出，由统一异常处理器来封装业务失败的响应结果，比如throw new ServiceException(\"该手机号已被注册\")，会直接被封装为{\"code\":400,\"message\":\"该手机号已被注册\"}返回，无需自己处理，尽情抛出 需要工具类的话建议先从apache-commons-*和guava中找，实在没有再造轮子或引入类库，尽量精简项目 开发规范建议遵循阿里巴巴Java开发手册（最新版下载) 建议在公司内部使用ShowDoc、SpringFox-Swagger2 、RAP等开源项目来编写、管理API文档   技术选型&文档  Spring Boot（查看Spring Boot学习&使用指南） MyBatis（查看官方中文文档） MyBatisb通用Mapper插件（查看官方中文文档） MyBatis PageHelper分页插件（查看官方中文文档） Druid Spring Boot Starter（查看官方中文文档） Fastjson（查看官方中文文档） 其他略 License  无，纯粹开源分享，感谢大家 Star & Fork 的支持。",
      "language": "Java",
      "stars": 66,
      "forks": 29,
      "url": "https://github.com/shengchina1125/spring-boot-base",
      "tags": []
    },
    {
      "id": 487,
      "name": "hms-nearby-demo",
      "owner": "HMS-Core",
      "full_name": "HMS-Core/hms-nearby-demo",
      "description": "Several samples show how to use the APIs of the Nearby Service.Discovery and communication with devices in the vicinity. Give your users physical proximity services with in-app data sharing and messaging.",
      "language": "Java",
      "stars": 57,
      "forks": 30,
      "url": "https://github.com/HMS-Core/hms-nearby-demo",
      "tags": [
        "android",
        "beacon",
        "connection",
        "demo",
        "exchange-card",
        "friends",
        "game",
        "gamesnake",
        "hms",
        "hms-nearby",
        "huawei",
        "java",
        "message",
        "nearby",
        "nearby-service",
        "online-game"
      ]
    },
    {
      "id": 488,
      "name": "aws-smtp-relay",
      "owner": "loopingz",
      "full_name": "loopingz/aws-smtp-relay",
      "description": "Local SMTP server that convert SMTP message to AWS SES API Call to allow you to use role instance",
      "language": "Java",
      "stars": 53,
      "forks": 21,
      "url": "https://github.com/loopingz/aws-smtp-relay",
      "tags": []
    },
    {
      "id": 489,
      "name": "pulsar-jms",
      "owner": "datastax",
      "full_name": "datastax/pulsar-jms",
      "description": "DataStax Starlight for JMS, a JMS API for Apache Pulsar ®",
      "language": "Java",
      "stars": 49,
      "forks": 23,
      "url": "https://github.com/datastax/pulsar-jms",
      "tags": [
        "jakartaee",
        "javaee",
        "jms",
        "messaging",
        "pulsar"
      ]
    },
    {
      "id": 490,
      "name": "BungeeChannelApi",
      "owner": "leonardosnt",
      "full_name": "leonardosnt/BungeeChannelApi",
      "description": "An easy way to work with the \"BungeeCord Plugin Messaging Channel\" (https://www.spigotmc.org/wiki/bukkit-bungee-plugin-messaging-channel/)",
      "language": "Java",
      "stars": 45,
      "forks": 6,
      "url": "https://github.com/leonardosnt/BungeeChannelApi",
      "tags": [
        "api",
        "bungeecord",
        "channel"
      ]
    },
    {
      "id": 491,
      "name": "aroundyou",
      "owner": "sidiqpermana",
      "full_name": "sidiqpermana/aroundyou",
      "description": "a sample project to show you how to implement the Nearby Message Api in android by adding instant messaging feature",
      "language": "Java",
      "stars": 43,
      "forks": 26,
      "url": "https://github.com/sidiqpermana/aroundyou",
      "tags": []
    },
    {
      "id": 492,
      "name": "fluent-mail-api",
      "owner": "guilhermechapiewski",
      "full_name": "guilhermechapiewski/fluent-mail-api",
      "description": "Fluent Mail API is a simple Java API that uses Sun's JavaMail API and a fluent interface/internal DSL to send e-mail messages.",
      "language": "Java",
      "stars": 38,
      "forks": 17,
      "url": "https://github.com/guilhermechapiewski/fluent-mail-api",
      "tags": []
    },
    {
      "id": 493,
      "name": "server-sent-events",
      "owner": "svgagan",
      "full_name": "svgagan/server-sent-events",
      "description": "WebFlux Server using the Spring WebFlux framework and reactive Kafka which exposes a REST API for the clients to make secure HTTP requests. Once a secure connection is established between the client and the web flux server, it consumes messages from Kafka topics and pushes the data asynchronously without closing connection with the client unless required.",
      "language": "Java",
      "stars": 34,
      "forks": 20,
      "url": "https://github.com/svgagan/server-sent-events",
      "tags": [
        "reactive-kafka",
        "server-sent-events",
        "spring-webflux",
        "webflux-server"
      ]
    },
    {
      "id": 494,
      "name": "android-push-notification",
      "owner": "rana01645",
      "full_name": "rana01645/android-push-notification",
      "description": "Firstly read the full documentation of how to add push notification in any android app How to add push notification in android application from android studio – Android developer (part – 1 Connect with firebase ) ~ http://androidrace.com/2016/12/08/how-to-add-push-notification-in-android-application-from-android-studio-android-developer-part-1-connect-with-firebase/  How to add push notification in android application from android studio – Android developer (part – 2 Working with server) ~http://androidrace.com/2017/01/05/how-to-add-push-notification-in-android-application-from-android-studio-android-developer-part-2-working-with-server/  If you face any problem dont forget to share :)  Tags:  android push notification tutorial  android push notifications not working  android push notification icon  android push notification character limit  android push notification permission  android push notification api  android push notification payload  android push notification sound  android push notification icon size  android push notification from server  android push notification  android push notification settings  android push notification service  android push notification app  android push notification api key  android push notification action button  android push notification architecture  android push notification alternative  what is an android push notification  android push notification banner  android push notification broadcast receiver  android push notification broadcast receiver example  android push notification certificate  android push notification custom sound  android push notification cost  android push notification click event  android push notification code  android push notification custom data  android push notification design  android push notification delay  android push notification display  android push notification dialog  android push notification demo  android push notification documentation  android push notification data  android push notification example  android push notification enabled  android push notification example android studio  android push notification example ph  android push notification example github  android push notification firebase  android push notification fcm  android push notification from server example  android push notification fcm tutorial  android push notification from php  android push notification firebase tutorial  android push notification gcm  android push notification guidelines  android push notification github  android push notification gcm example  android push notification guide  android push notification guaranteed delivery  android push notification gcm architecture  android push notification how it works  android push notification handle  android push notification http  android push notification howto  androidhive push notification  android push notification hello world  android push notification header  android push notification image  android push notification icon guidelines  android push notification in php  android push notification json  android push notification java  android push notification json example  android kitkat push notification  kik push notification android  android push notifications  android push notification material design  android push notification manifest  android push notification multiple devices  android push notification not working  android push notification not received  android push notification no sound  android push notification not showing  android push notification not working on wifi  android push notification open activity  android push notification open app  android push notification online  android push notification offline  android push notification own server  turn on android push notifications  android push notification problem  android push notification php  android push notification popup  android push notification programmatically  android push notification pendingintent  android push notification php code  android push notification receiver  android push notification requirements  android push notification response  android push notification registration  android push notification response codes  android push notification server  android push notification server java  android push notification sample code  android push notification service tutorial  android push notification test  android push notification tutorial gcm  android push notification title  android push notification tutorial using firebase  android push notification tutorial php  android push notification using fcm  android push notification using gcm  android push notification using gcm php  android push notification using php  android push notification using gcm example  android push notification using gcm tutorial  android push notification using fcm php  android push notification using firebase cloud messaging  android push notification with image  android push notification while app is not running  android push notification when app is closed  android push notification without app  android push notification with firebase  android push notification with gcm  android push notification with php  android push notification time zone  android push notification 2.2  android push notification 2.3  android push notification tutorial 2014  push notification android 2.3.3  android push notification 3rd party  android push notification 3g  android 4 push notification  android 4.1 push notification  push notification android 4.0.4  android 4.3 push notification  push notification android 4.4.2  android 4.4 push notification  android 4.3 disable push notification  basic 4 android push notification  basic 4 android push notifications  android 5 push notification  android 5.0 push notification  android 5 push notifications",
      "language": "Java",
      "stars": 34,
      "forks": 15,
      "url": "https://github.com/rana01645/android-push-notification",
      "tags": []
    },
    {
      "id": 495,
      "name": "power-assert",
      "owner": "power-assert-js",
      "full_name": "power-assert-js/power-assert",
      "description": "Power Assert in JavaScript. Provides descriptive assertion messages through standard assert interface. No API is the best API.",
      "language": "JavaScript",
      "stars": 2806,
      "forks": 68,
      "url": "https://github.com/power-assert-js/power-assert",
      "tags": [
        "assert",
        "power-assert"
      ]
    },
    {
      "id": 496,
      "name": "webmidi",
      "owner": "djipco",
      "full_name": "djipco/webmidi",
      "description": "Tame the Web MIDI API. Send and receive MIDI messages with ease. Control instruments with user-friendly functions (playNote, sendPitchBend, etc.). React to MIDI input with simple event listeners (noteon, pitchbend, controlchange, etc.).",
      "language": "JavaScript",
      "stars": 1618,
      "forks": 120,
      "url": "https://github.com/djipco/webmidi",
      "tags": [
        "browser",
        "jazz-plugin",
        "midi",
        "midi-messages",
        "node",
        "sysex",
        "web-midi",
        "web-midi-api",
        "webmidi"
      ]
    },
    {
      "id": 497,
      "name": "intercom.js",
      "owner": "diy",
      "full_name": "diy/intercom.js",
      "description": "UNMAINTAINED: A client-side cross-window message broadcast library built on top of the HTML5 localStorage API.",
      "language": "JavaScript",
      "stars": 567,
      "forks": 91,
      "url": "https://github.com/diy/intercom.js",
      "tags": []
    },
    {
      "id": 498,
      "name": "line-bot-mcp-server",
      "owner": "line",
      "full_name": "line/line-bot-mcp-server",
      "description": "MCP server that integrates the LINE Messaging API to connect an AI Agent to the LINE Official Account.",
      "language": "JavaScript",
      "stars": 379,
      "forks": 53,
      "url": "https://github.com/line/line-bot-mcp-server",
      "tags": [
        "line",
        "linebot",
        "mcp",
        "mcp-server"
      ]
    },
    {
      "id": 499,
      "name": "telepat-api",
      "owner": "telepat-io",
      "full_name": "telepat-io/telepat-api",
      "description": "This is the Telepat API where HTTP calls are made. CRUD operations are not processed here directly. Messages are sent to the Telepat workers where CRUD operations are being taken care of along with client communication (notifications).",
      "language": "JavaScript",
      "stars": 331,
      "forks": 21,
      "url": "https://github.com/telepat-io/telepat-api",
      "tags": [
        "notifications",
        "realtime",
        "scalability",
        "synchronization"
      ]
    },
    {
      "id": 500,
      "name": "js-eth-personal-sign-examples",
      "owner": "danfinlay",
      "full_name": "danfinlay/js-eth-personal-sign-examples",
      "description": "A simple web UI for demonstrating the provider API for signing & recovering messages.",
      "language": "JavaScript",
      "stars": 314,
      "forks": 199,
      "url": "https://github.com/danfinlay/js-eth-personal-sign-examples",
      "tags": []
    },
    {
      "id": 501,
      "name": "cosmicjs-node",
      "owner": "cosmicjs",
      "full_name": "cosmicjs/cosmicjs-node",
      "description": "*API v2 JavaScript client for Cosmic.  See important message in README",
      "language": "JavaScript",
      "stars": 276,
      "forks": 39,
      "url": "https://github.com/cosmicjs/cosmicjs-node",
      "tags": [
        "api",
        "cms",
        "content-management",
        "cosmicjs",
        "headless-cms",
        "javascript",
        "nodejs"
      ]
    },
    {
      "id": 502,
      "name": "linebot",
      "owner": "boybundit",
      "full_name": "boybundit/linebot",
      "description": "🤖 SDK for the LINE Messaging API for Node.js",
      "language": "JavaScript",
      "stars": 221,
      "forks": 93,
      "url": "https://github.com/boybundit/linebot",
      "tags": [
        "api",
        "chatbot",
        "hacktoberfest",
        "line",
        "linebot",
        "messaging"
      ]
    },
    {
      "id": 503,
      "name": "radar",
      "owner": "zendesk",
      "full_name": "zendesk/radar",
      "description": "High level API and backend for writing web apps that use push messaging",
      "language": "JavaScript",
      "stars": 220,
      "forks": 42,
      "url": "https://github.com/zendesk/radar",
      "tags": []
    },
    {
      "id": 504,
      "name": "wbm",
      "owner": "Briuor",
      "full_name": "Briuor/wbm",
      "description": "wbm is an unofficial API to send bulk messages in whatsapp.",
      "language": "JavaScript",
      "stars": 209,
      "forks": 65,
      "url": "https://github.com/Briuor/wbm",
      "tags": [
        "bulk-messages",
        "bulk-messages-api",
        "message-sender",
        "phone-number",
        "send-message",
        "send-message-api",
        "send-messages-api",
        "wbm",
        "whatsapp",
        "whatsapp-api",
        "whatsapp-bulk-message",
        "whatsapp-bulk-messages",
        "whatsapp-bulk-sender",
        "whatsapp-library",
        "whatsapp-message-sender",
        "whatsapp-messages",
        "whatsapp-sender",
        "whatsapp-web"
      ]
    },
    {
      "id": 505,
      "name": "lapin",
      "owner": "amqp-rs",
      "full_name": "amqp-rs/lapin",
      "description": "AMQP client library in Rust, with a clean, futures based API",
      "language": "Rust",
      "stars": 1108,
      "forks": 95,
      "url": "https://github.com/amqp-rs/lapin",
      "tags": [
        "amqp",
        "amqp-client",
        "amqp0-9-1",
        "async",
        "hacktoberfest",
        "messaging",
        "rust"
      ]
    },
    {
      "id": 506,
      "name": "lumen",
      "owner": "jnsahaj",
      "full_name": "jnsahaj/lumen",
      "description": "Instant AI Git Commit message, Git changes summary from the CLI (no API key required)",
      "language": "Rust",
      "stars": 766,
      "forks": 26,
      "url": "https://github.com/jnsahaj/lumen",
      "tags": [
        "cli",
        "commit",
        "git",
        "llm",
        "openai",
        "rust"
      ]
    },
    {
      "id": 507,
      "name": "zenoh-c",
      "owner": "eclipse-zenoh",
      "full_name": "eclipse-zenoh/zenoh-c",
      "description": "C API for Zenoh",
      "language": "Rust",
      "stars": 93,
      "forks": 63,
      "url": "https://github.com/eclipse-zenoh/zenoh-c",
      "tags": [
        "edge-computing",
        "iot",
        "messaging",
        "micro-controllers",
        "networking",
        "robotics",
        "ros2"
      ]
    },
    {
      "id": 508,
      "name": "recent-messages2",
      "owner": "robotty",
      "full_name": "robotty/recent-messages2",
      "description": "Service to provide historical messages to Twitch chat clients",
      "language": "Rust",
      "stars": 71,
      "forks": 4,
      "url": "https://github.com/robotty/recent-messages2",
      "tags": [
        "api",
        "chat",
        "chatterino",
        "irc",
        "twitch"
      ]
    },
    {
      "id": 509,
      "name": "turboCommit",
      "owner": "dikkadev",
      "full_name": "dikkadev/turboCommit",
      "description": "turbocommit is a Rust-based CLI tool that generates high-quality git commit messages in accordance with the Conventional Commits specification, using OpenAI API compatible service. It is easy to use and a cost-effective way to keep git commit history at a higher quality, helping developers stay on track with their work.",
      "language": "Rust",
      "stars": 60,
      "forks": 4,
      "url": "https://github.com/dikkadev/turboCommit",
      "tags": []
    }
  ]
}