{
  "keyword": "Cryptography API",
  "repository_count": 81,
  "analysis_date": "2025-05-29T17:44:12.601303",
  "charts": {
    "language_distribution": {
      "data": {
        "Python": 51,
        "Java": 29
      }
    },
    "stars_distribution": {
      "data": {
        "mean": 182.35802469135803,
        "min": 1,
        "max": 13541,
        "total": 14771
      }
    },
    "common_packages": {
      "data": {}
    },
    "imported_libraries": {
      "data": {
        "os": 29,
        "sys": 18,
        "setuptools": 16,
        "time": 14,
        "json": 12,
        "hashlib": 11,
        "datetime": 11,
        "logging": 9,
        "subprocess": 6,
        "re": 6,
        "cryptography": 6,
        "requests": 6,
        "flask": 6,
        "org": 6,
        "java": 6,
        "random": 5,
        "shutil": 4,
        "threading": 4,
        "User": 4,
        "ConfigParser": 4
      }
    },
    "common_functions": {
      "data": {}
    },
    "tag_analysis": {
      "data": {
        "cryptography": 40,
        "python": 20,
        "api": 13,
        "encryption": 8,
        "security": 6,
        "java": 6,
        "aes": 3,
        "crypto": 3,
        "python3": 3,
        "encryption-decryption": 3,
        "cybersecurity": 3,
        "sdk": 3,
        "end-to-end-encryption": 3,
        "rest-api": 3,
        "android": 3
      }
    },
    "comment_keywords": {
      "data": {}
    },
    "description_keywords": {
      "data": {
        "cryptographic": 30,
        "using": 26,
        "python": 24,
        "cryptography": 21,
        "data": 17,
        "encryption": 14,
        "library": 13,
        "project": 13,
        "apis": 13,
        "java": 13,
        "bitcoin": 11,
        "price": 11,
        "secure": 10,
        "which": 9,
        "regression": 9,
        "provides": 8,
        "based": 8,
        "model": 8,
        "used": 7,
        "bayesian": 7,
        "variations": 7,
        "have": 7,
        "dataset": 7,
        "simple": 7,
        "security": 7,
        "test": 6,
        "decryption": 6,
        "voice": 6,
        "open": 5,
        "learning": 5,
        "implement": 5,
        "equation": 5,
        "tools": 5,
        "rest": 5,
        "tool": 5,
        "system": 5,
        "easy": 5,
        "encrypted": 5,
        "text": 5,
        "intel": 4,
        "paillier": 4,
        "cryptosystem": 4,
        "source": 4,
        "package": 4,
        "trading": 4,
        "datasets": 4,
        "prices": 4,
        "linear": 4,
        "files": 4,
        "restful": 4
      }
    }
  },
  "repositories": [
    {
      "id": 231,
      "name": "tink",
      "owner": "tink-crypto",
      "full_name": "tink-crypto/tink",
      "description": "Tink is a multi-language, cross-platform, open source library that provides cryptographic APIs that are secure, easy to use correctly, and hard(er) to misuse.",
      "language": "Java",
      "stars": 13541,
      "forks": 1179,
      "url": "https://github.com/tink-crypto/tink",
      "tags": [
        "cpp",
        "crypto",
        "cryptography",
        "go",
        "java",
        "javascript",
        "objc",
        "security"
      ]
    },
    {
      "id": 181,
      "name": "asn1crypto",
      "owner": "wbond",
      "full_name": "wbond/asn1crypto",
      "description": "Python ASN.1 library with a focus on performance and a pythonic API",
      "language": "Python",
      "stars": 344,
      "forks": 143,
      "url": "https://github.com/wbond/asn1crypto",
      "tags": [
        "asn1",
        "cms",
        "crl",
        "cryptography",
        "csr",
        "ocsp",
        "pem",
        "pkcs12",
        "pkcs7",
        "python",
        "tsp",
        "x509"
      ]
    },
    {
      "id": 232,
      "name": "JCAlgTest",
      "owner": "crocs-muni",
      "full_name": "crocs-muni/JCAlgTest",
      "description": "Automated testing tool for algorithms from JavaCard API supported by particular smart card. Performance testing of almost all available methods. The results for more than 100+ cards.",
      "language": "Java",
      "stars": 119,
      "forks": 45,
      "url": "https://github.com/crocs-muni/JCAlgTest",
      "tags": [
        "cryptography",
        "javacard",
        "security",
        "smartcard"
      ]
    },
    {
      "id": 233,
      "name": "kryptonite-for-kafka",
      "owner": "hpgrahsl",
      "full_name": "hpgrahsl/kryptonite-for-kafka",
      "description": "Kryptonite for Kafka is a client-side 🔒 field level 🔓 cryptography library for Apache Kafka® offering a Kafka Connect SMT, ksqlDB UDFs, Flink UDFs, and a standalone HTTP API service. It's an ! UNOFFICIAL ! community project",
      "language": "Java",
      "stars": 86,
      "forks": 7,
      "url": "https://github.com/hpgrahsl/kryptonite-for-kafka",
      "tags": [
        "apache-kafka",
        "cryptography",
        "encryption-decryption",
        "end-to-end-encryption",
        "field-level-encryption",
        "flink",
        "flink-stream-processing",
        "flinksql",
        "kafka",
        "kafka-connect",
        "ksqldb",
        "smt",
        "transformations",
        "udfs",
        "user-defined-functions"
      ]
    },
    {
      "id": 182,
      "name": "cryptg",
      "owner": "cher-nov",
      "full_name": "cher-nov/cryptg",
      "description": "Official Telethon extension to provide much faster cryptography for Telegram API requests.",
      "language": "Python",
      "stars": 83,
      "forks": 26,
      "url": "https://github.com/cher-nov/cryptg",
      "tags": [
        "aes",
        "aes-ige",
        "crypto",
        "cryptography",
        "encryption",
        "ige",
        "module",
        "mtproto",
        "package",
        "python",
        "telegram",
        "telethon"
      ]
    },
    {
      "id": 234,
      "name": "CogniCrypt",
      "owner": "eclipse-cognicrypt",
      "full_name": "eclipse-cognicrypt/CogniCrypt",
      "description": "CogniCrypt is an Eclipse plugin that supports Java developers in using Java Cryptographic APIs.",
      "language": "Java",
      "stars": 61,
      "forks": 22,
      "url": "https://github.com/eclipse-cognicrypt/CogniCrypt",
      "tags": [
        "code-generation",
        "cryptography",
        "java",
        "static-analysis"
      ]
    },
    {
      "id": 183,
      "name": "pailliercryptolib_python",
      "owner": "intel",
      "full_name": "intel/pailliercryptolib_python",
      "description": "Intel Paillier Cryptosystem Library is an open-source library which provides accelerated performance of a partial homomorphic encryption (HE), named Paillier cryptosystem, by utilizing Intel® IPP-Crypto technologies on Intel CPUs supporting the AVX512IFMA instructions. The library is written in modern standard C++ and provides the essential API for the Paillier cryptosystem scheme. Intel Paillier Cryptosystem Library - Python is a Python extension package intended for Python based privacy preserving machine learning solutions which utilizes the partial HE scheme for increased data and model protection.",
      "language": "Python",
      "stars": 56,
      "forks": 12,
      "url": "https://github.com/intel/pailliercryptolib_python",
      "tags": [
        "cryptography",
        "homomorphic-encryption",
        "python3"
      ]
    },
    {
      "id": 235,
      "name": "java-bitpay-client",
      "owner": "bitpay",
      "full_name": "bitpay/java-bitpay-client",
      "description": "Java library for the new cryptographically secure BitPay API",
      "language": "Java",
      "stars": 42,
      "forks": 54,
      "url": "https://github.com/bitpay/java-bitpay-client",
      "tags": []
    },
    {
      "id": 184,
      "name": "cryptolyzer",
      "owner": "c0r0n3r",
      "full_name": "c0r0n3r/cryptolyzer",
      "description": "CryptoLyzer is a fast, flexible and comprehensive server cryptographic protocol (TLS, SSL, SSH, DNSSEC) and related setting (HTTP headers, DNS records) analyzer and fingerprint (JA3, HASSH tag) generator with Python API and CLI. (read-only clone of the original GitLab project)",
      "language": "Python",
      "stars": 39,
      "forks": 2,
      "url": "https://github.com/c0r0n3r/cryptolyzer",
      "tags": [
        "certificate-transparency",
        "content-security-policy",
        "dnssec",
        "http-header-check",
        "http-scan",
        "mixed-content",
        "openvpn",
        "python",
        "scan-tool",
        "scanning-tool",
        "security",
        "security-audit",
        "security-tools",
        "ssh-scanner",
        "ssl-scanner",
        "subresource-integrity",
        "tls-scan",
        "tls-scanning-library",
        "vulnerability-scanners"
      ]
    },
    {
      "id": 185,
      "name": "oblivious",
      "owner": "nthparty",
      "full_name": "nthparty/oblivious",
      "description": "Python library that serves as an API for common cryptographic primitives used to implement OPRF, OT, and PSI protocols.",
      "language": "Python",
      "stars": 27,
      "forks": 5,
      "url": "https://github.com/nthparty/oblivious",
      "tags": [
        "bn254",
        "cryptographic-library",
        "cryptography",
        "elliptic-curve-arithmetic",
        "elliptic-curve-cryptography",
        "mpc",
        "multi-party",
        "multi-party-computation",
        "multiparty-computation",
        "oblivious-transfer",
        "oprf",
        "python-cryptography",
        "ristretto",
        "ristretto255",
        "secure-multi-party-computation",
        "secure-multiparty-computation"
      ]
    },
    {
      "id": 236,
      "name": "virgil-sdk-java-android",
      "owner": "VirgilSecurity",
      "full_name": "VirgilSecurity/virgil-sdk-java-android",
      "description": "Virgil Core SDK allows developers to get up and running with Virgil Cards Service API quickly and add end-to-end security to their new or existing digital solutions to become HIPAA and GDPR compliant and more.",
      "language": "Java",
      "stars": 26,
      "forks": 5,
      "url": "https://github.com/VirgilSecurity/virgil-sdk-java-android",
      "tags": [
        "android",
        "cryptography",
        "encryption",
        "end-to-end-encryption",
        "gdpr",
        "hipaa",
        "java",
        "maven",
        "pki",
        "sdk"
      ]
    },
    {
      "id": 186,
      "name": "Bayesian-Regression-and-Bitcoin",
      "owner": "vkgnandhu177",
      "full_name": "vkgnandhu177/Bayesian-Regression-and-Bitcoin",
      "description": "# Bayesian-Regression-to-Predict-Bitcoin-Price-Variations Predicting the price variations of bitcoin, a virtual cryptographic currency. These predictions could be used as the foundation of a bitcoin trading strategy. To make these predictions, we will have to familiarize ourself with a machine learning technique, Bayesian Regression, and implement this technique in Python.  # Datasets We have the datasets in the data folder. The original raw data can be found here: http://api.bitcoincharts.com/v1/csv/. The datasets from this site have three attributes:   (1) time in epoch,   (2) price in USD per bitcoin, and   (3) bitcoin amount in a transaction (buy/sell).   However, only the first two attributes are relevant to this project.  To make the data to have evenly space records, we took all the records within a 20 second window and replaced it by a single record as the average of all the transaction prices in that window. Not every 20 second window had a record; therefore those missing entries were filled using the prices of the previous 20 observations and assuming a Gaussian distribution. The raw data that has been cleaned is given in the file dataset.csv  Finally, as discussed in the paper, the data was divided into a total of 9 different datasets. The whole dataset is partitioned into three equally sized (50 price variations in each) subsets: train1, train2, and test. The train sets are used for training a linear model, while the test set is for evaluation of the model. There are three csv files associated with each subset of data: *_90.csv, *_180.csv, and *_360.csv. In _90.csv, for example, each line represents a vector of length 90 where the elements are 30 minute worth of bitcoin price variations (since we have 20 second intervals) and a price variation in the 91st column. Similarly, the *_180.csv represents 60 minutes of prices and *_360.csv represents 120 minutes of prices.  # Project Requirements We are expected to implement the Bayesian Regression model to predict the future price variation of bitcoin as described in the reference paper. The main parts to focus on are Equation 6 and the Predicting Price Change section.  # Logic in bitcoin.py 1. Compute the price variations (Δp1, Δp2, and Δp3) for train2 using train1 as input to the Bayesian Regression equation (Equations 6). Make sure to use the similarity metric (Equation 9) in place of the Euclidean distance in Bayesian Regression (Equation 6).  2. Compute the linear regression parameters (w0, w1, w2, w3) by finding the best linear fit (Equation 8). Here you will need to use the ols function of statsmodels.formula.api. Your model should be fit using Δp1, Δp2, and Δp3 as the covariates. Note: the bitcoin order book data was not available, so you do not have to worry about the rw4 term.  3. Use the linear regression model computed in Step 2 and Bayesian Regression estimates, to predict the price variations for the test dataset. Bayesian Regression estimates for test dataset are computed in the same way as they are computed for train2 dataset – using train1 as an input.  4. Once the price variations are predicted, compute the mean squared error (MSE) for the test dataset (the test dataset has 50 vectors => 50 predictions).",
      "language": "Python",
      "stars": 21,
      "forks": 4,
      "url": "https://github.com/vkgnandhu177/Bayesian-Regression-and-Bitcoin",
      "tags": []
    },
    {
      "id": 187,
      "name": "python-bitpay-client",
      "owner": "bitpay",
      "full_name": "bitpay/python-bitpay-client",
      "description": "Python implementation for the BitPay Cryptographically Secure RESTful API",
      "language": "Python",
      "stars": 19,
      "forks": 13,
      "url": "https://github.com/bitpay/python-bitpay-client",
      "tags": []
    },
    {
      "id": 188,
      "name": "py-tpm-utils",
      "owner": "ph4r05",
      "full_name": "ph4r05/py-tpm-utils",
      "description": "Simple TPM utils in Python for generating random numbers & RSA keys",
      "language": "Python",
      "stars": 19,
      "forks": 2,
      "url": "https://github.com/ph4r05/py-tpm-utils",
      "tags": [
        "api",
        "api-wrapper",
        "cryptography",
        "key-generation",
        "pip",
        "python",
        "python-library",
        "rsa",
        "tpm",
        "trusted-platform-module"
      ]
    },
    {
      "id": 237,
      "name": "Crypto-API-Rules",
      "owner": "CROSSINGTUD",
      "full_name": "CROSSINGTUD/Crypto-API-Rules",
      "description": "This repository contains all CrySL rules currently used in the crypto assistant CogniCrypt.",
      "language": "Java",
      "stars": 16,
      "forks": 12,
      "url": "https://github.com/CROSSINGTUD/Crypto-API-Rules",
      "tags": [
        "api",
        "cryptography",
        "dsl",
        "examples",
        "specification"
      ]
    },
    {
      "id": 238,
      "name": "bouncycastle-implementations",
      "owner": "anonrig",
      "full_name": "anonrig/bouncycastle-implementations",
      "description": "Some cryptographic algorithms implemented using Bouncy Castle API.",
      "language": "Java",
      "stars": 14,
      "forks": 7,
      "url": "https://github.com/anonrig/bouncycastle-implementations",
      "tags": []
    },
    {
      "id": 189,
      "name": "webeye",
      "owner": "Zaeem20",
      "full_name": "Zaeem20/webeye",
      "description": "Webeye is a Powerful package for making ethical hacking tools easier",
      "language": "Python",
      "stars": 13,
      "forks": 3,
      "url": "https://github.com/Zaeem20/webeye",
      "tags": [
        "api",
        "cloudflare",
        "cryptography",
        "dns",
        "encryption-decryption",
        "hacking",
        "hash",
        "honeypot",
        "nmap",
        "osint",
        "portscanner",
        "python",
        "sql",
        "webeye",
        "whois",
        "whois-lookup"
      ]
    },
    {
      "id": 190,
      "name": "ElgamalEncryption-using-ECC",
      "owner": "Yash0day",
      "full_name": "Yash0day/ElgamalEncryption-using-ECC",
      "description": "Elgamal Encryption using Elliptic Curve Cryptography in Python 2.7",
      "language": "Python",
      "stars": 12,
      "forks": 4,
      "url": "https://github.com/Yash0day/ElgamalEncryption-using-ECC",
      "tags": [
        "api",
        "cryptography",
        "elgamal-encryption",
        "elliptic-curve-arithmetic",
        "python",
        "security"
      ]
    },
    {
      "id": 191,
      "name": "pysdk-core",
      "owner": "XQ-Message-Inc",
      "full_name": "XQ-Message-Inc/pysdk-core",
      "description": "A Python Implementation of XQ Message SDK (V.2) which provides convenient access to the XQ Message API. ",
      "language": "Python",
      "stars": 12,
      "forks": 0,
      "url": "https://github.com/XQ-Message-Inc/pysdk-core",
      "tags": [
        "aes",
        "cryptography",
        "cybersecurity",
        "encryption",
        "encryption-decryption",
        "python",
        "sdk",
        "security",
        "xor",
        "zero-trust"
      ]
    },
    {
      "id": 239,
      "name": "cryptocard",
      "owner": "jporras66",
      "full_name": "jporras66/cryptocard",
      "description": "Java API for credit cards cryptography computing",
      "language": "Java",
      "stars": 12,
      "forks": 10,
      "url": "https://github.com/jporras66/cryptocard",
      "tags": []
    },
    {
      "id": 192,
      "name": "virgil-sdk-python",
      "owner": "VirgilSecurity",
      "full_name": "VirgilSecurity/virgil-sdk-python",
      "description": "Virgil Core SDK allows developers to get up and running with Virgil Cards Service API quickly and add end-to-end security to their new or existing digital solutions to become HIPAA and GDPR compliant and more.",
      "language": "Python",
      "stars": 10,
      "forks": 2,
      "url": "https://github.com/VirgilSecurity/virgil-sdk-python",
      "tags": [
        "cryptography",
        "encryption",
        "end-to-end-encryption",
        "gdpr",
        "hipaa",
        "pki",
        "sdk"
      ]
    },
    {
      "id": 240,
      "name": "hydride-android",
      "owner": "terl",
      "full_name": "terl/hydride-android",
      "description": "Hydride binds against Libhydrogen to provide a simple cryptography that is compatible with Android API 16 and above.",
      "language": "Java",
      "stars": 10,
      "forks": 2,
      "url": "https://github.com/terl/hydride-android",
      "tags": [
        "android",
        "android-library",
        "cryptography-library",
        "encryption",
        "hashing",
        "secret-key-encryption"
      ]
    },
    {
      "id": 193,
      "name": "FreedomPop-Telegram-Bot",
      "owner": "blopa",
      "full_name": "blopa/FreedomPop-Telegram-Bot",
      "description": "A freedompop telegram bot",
      "language": "Python",
      "stars": 9,
      "forks": 1,
      "url": "https://github.com/blopa/FreedomPop-Telegram-Bot",
      "tags": [
        "api",
        "cryptography",
        "freedompop",
        "telegram",
        "telegram-bot"
      ]
    },
    {
      "id": 194,
      "name": "Encryptor",
      "owner": "rafaeelaudibert",
      "full_name": "rafaeelaudibert/Encryptor",
      "description": "🔒 Several encryptors (cryptographic secure or not) available in a REST API fashion, using Flask",
      "language": "Python",
      "stars": 8,
      "forks": 12,
      "url": "https://github.com/rafaeelaudibert/Encryptor",
      "tags": [
        "encryptors",
        "flask",
        "hacktoberfest",
        "sentry"
      ]
    },
    {
      "id": 195,
      "name": "bitmex_algo_trader",
      "owner": "strader07",
      "full_name": "strader07/bitmex_algo_trader",
      "description": "Algorithmic trading bot using bitmex API with a simple UI in terminal",
      "language": "Python",
      "stars": 8,
      "forks": 2,
      "url": "https://github.com/strader07/bitmex_algo_trader",
      "tags": [
        "algorithmic-trading",
        "bitmex",
        "ccxt",
        "cryptofeed",
        "cryptography",
        "orderbook",
        "pyqt5",
        "python",
        "tkinter"
      ]
    },
    {
      "id": 241,
      "name": "Apigee-CustomPolicy-AesCrypto",
      "owner": "DinoChiesa",
      "full_name": "DinoChiesa/Apigee-CustomPolicy-AesCrypto",
      "description": "a configurable custom policy for Apigee, which performs AES encryption or decryption.",
      "language": "Java",
      "stars": 8,
      "forks": 7,
      "url": "https://github.com/DinoChiesa/Apigee-CustomPolicy-AesCrypto",
      "tags": [
        "aes",
        "apigee",
        "cryptography",
        "encryption",
        "java"
      ]
    },
    {
      "id": 242,
      "name": "CamBench",
      "owner": "CROSSINGTUD",
      "full_name": "CROSSINGTUD/CamBench",
      "description": "Repository for the paper: CamBench - Cryptographic API Misuse Detection Tool Benchmark Suite",
      "language": "Java",
      "stars": 8,
      "forks": 8,
      "url": "https://github.com/CROSSINGTUD/CamBench",
      "tags": []
    },
    {
      "id": 243,
      "name": "JCEd25519",
      "owner": "dufkan",
      "full_name": "dufkan/JCEd25519",
      "description": "JavaCard implementation of Ed25519 signature algorithm for smartcards that do not support EdDSA algorithm introduced in JavaCard API version 3.1.",
      "language": "Java",
      "stars": 8,
      "forks": 5,
      "url": "https://github.com/dufkan/JCEd25519",
      "tags": [
        "cryptography",
        "ed25519",
        "javacard"
      ]
    },
    {
      "id": 244,
      "name": "bouncy-castle-sha3",
      "owner": "akoskm",
      "full_name": "akoskm/bouncy-castle-sha3",
      "description": "Demo application showing the use of the SHA-3 cryptographic hash function through the Bouncy Castle API",
      "language": "Java",
      "stars": 8,
      "forks": 1,
      "url": "https://github.com/akoskm/bouncy-castle-sha3",
      "tags": []
    },
    {
      "id": 196,
      "name": "AES-Image-Encryption",
      "owner": "KasiR07",
      "full_name": "KasiR07/AES-Image-Encryption",
      "description": "AES Image Encryption using python harnesses the power of the Advanced Encryption Algorithm.  I utilized cryptographic APIs from standard libraries such as PyCryptoDome to create an elegant AES based image scrambling and encryption solution.",
      "language": "Python",
      "stars": 6,
      "forks": 0,
      "url": "https://github.com/KasiR07/AES-Image-Encryption",
      "tags": [
        "cryptography",
        "python"
      ]
    },
    {
      "id": 245,
      "name": "OpenJCEPlus",
      "owner": "IBM",
      "full_name": "IBM/OpenJCEPlus",
      "description": "This project makes use of Java and C/C++. This project will create  OpenJCEPlus and OpenJCEPlusFIPS cryptographic providers which are implementations of the Java™ Cryptography Extensions (JCE) APIs. The actual cryptographic code will come from the OpenCryptographyKitC  project which is based on OpenSSL.",
      "language": "Java",
      "stars": 6,
      "forks": 12,
      "url": "https://github.com/IBM/OpenJCEPlus",
      "tags": []
    },
    {
      "id": 246,
      "name": "CryptSL",
      "owner": "CROSSINGTUD",
      "full_name": "CROSSINGTUD/CryptSL",
      "description": null,
      "language": "Java",
      "stars": 6,
      "forks": 5,
      "url": "https://github.com/CROSSINGTUD/CryptSL",
      "tags": [
        "api",
        "cryptography",
        "dsl",
        "language",
        "specification"
      ]
    },
    {
      "id": 197,
      "name": "Yasat",
      "owner": "bluesadi",
      "full_name": "bluesadi/Yasat",
      "description": "(Undergraduate Capstone Project) Yasat -  Yet Another Static Analysis Tool to detect cryptographic API misuses in firmware",
      "language": "Python",
      "stars": 5,
      "forks": 0,
      "url": "https://github.com/bluesadi/Yasat",
      "tags": []
    },
    {
      "id": 198,
      "name": "INFO3NUM",
      "owner": "DarkLycn1976",
      "full_name": "DarkLycn1976/INFO3NUM",
      "description": "INFO3NUM or Information Enumeration is a CLI (Command Line Interface) based Cybersecurity Tool, which is used in Linux (Debian) Operating system. It is Developed using Python3 & Bash. INFO3NUM helps security professionals to enumerate Information in various technologies like Networking, Web Applications, Open Source Intelligence (OSINT) & Cryptography. INFO3NUM uses the utilities of Offensive Security tools like Nmap, Nmap Scripting Engine (NSE), Gobuster, Assertfinder, Whois-lookup, OSINT Framework, Haiti, Hash-Identifier, Hashcat, John The Ripper, and API. it helps Security professionals to navigate quickly and uses the full potential of the listed tools with a Single Comprehensive Script. ",
      "language": "Python",
      "stars": 5,
      "forks": 0,
      "url": "https://github.com/DarkLycn1976/INFO3NUM",
      "tags": [
        "cybersecurity",
        "python3"
      ]
    },
    {
      "id": 247,
      "name": "Cryptography-Solver-for-Discrete-Math",
      "owner": "thousandlemons",
      "full_name": "thousandlemons/Cryptography-Solver-for-Discrete-Math",
      "description": "An extensible API to perform basic encryption/decryption introduecd in Discrete Math, including Affine, Caesar, Vigenere, One Time Pad, RSA, etc.",
      "language": "Java",
      "stars": 5,
      "forks": 0,
      "url": "https://github.com/thousandlemons/Cryptography-Solver-for-Discrete-Math",
      "tags": []
    },
    {
      "id": 199,
      "name": "pwngrid-api",
      "owner": "python273",
      "full_name": "python273/pwngrid-api",
      "description": "Pwnagotchi's Pwngrid API client (⌐■_■)",
      "language": "Python",
      "stars": 4,
      "forks": 0,
      "url": "https://github.com/python273/pwngrid-api",
      "tags": [
        "cryptography",
        "pwnagotchi",
        "python"
      ]
    },
    {
      "id": 200,
      "name": "Secure-Note-Blockchain",
      "owner": "AiGptCode",
      "full_name": "AiGptCode/Secure-Note-Blockchain",
      "description": "یک برنامه یادداشت امن که از رمزنگاری امن برای حفاظت از یادداشت‌های شما و سیستم بلاک چین که نوت ها به صورت بلاک سیو و استفاده می‌کند",
      "language": "Python",
      "stars": 4,
      "forks": 0,
      "url": "https://github.com/AiGptCode/Secure-Note-Blockchain",
      "tags": [
        "api",
        "blockchain",
        "cryptography",
        "hack",
        "note",
        "notes",
        "py",
        "python",
        "secure",
        "secure-note",
        "web3"
      ]
    },
    {
      "id": 201,
      "name": "Satoshi-Sweeper",
      "owner": "Cr0mb",
      "full_name": "Cr0mb/Satoshi-Sweeper",
      "description": "Satoshi Sweeper is a Bitcoin wallet generator and balance checker. It generates mnemonic phrases, derives Bitcoin addresses (Legacy, Nested SegWit, and Native SegWit), and checks their balances using the Blockstream API.",
      "language": "Python",
      "stars": 4,
      "forks": 0,
      "url": "https://github.com/Cr0mb/Satoshi-Sweeper",
      "tags": [
        "biputils",
        "bitcoin",
        "bitcoin-finder",
        "bitcoin-recovery",
        "bitcoin-stealer",
        "bitcoin-wallet",
        "cryptography",
        "ethereum",
        "ethereum-finder",
        "ethereum-stealer",
        "ethereum-wallet",
        "hashlib"
      ]
    },
    {
      "id": 248,
      "name": "aerogear-android-security",
      "owner": "aerogear-attic",
      "full_name": "aerogear-attic/aerogear-android-security",
      "description": "An Android API under AeroGear Crypto Java to provide easy way to use cryptography.",
      "language": "Java",
      "stars": 4,
      "forks": 10,
      "url": "https://github.com/aerogear-attic/aerogear-android-security",
      "tags": []
    },
    {
      "id": 249,
      "name": "scrapi",
      "owner": "lhazlewood",
      "full_name": "lhazlewood/scrapi",
      "description": "Simple CRyptography API for Java",
      "language": "Java",
      "stars": 4,
      "forks": 0,
      "url": "https://github.com/lhazlewood/scrapi",
      "tags": []
    },
    {
      "id": 250,
      "name": "tscrypto",
      "owner": "imclab",
      "full_name": "imclab/tscrypto",
      "description": "Threshold Cryptographic Backend for PKCS11 API",
      "language": null,
      "stars": 4,
      "forks": 0,
      "url": "https://github.com/imclab/tscrypto",
      "tags": []
    },
    {
      "id": 202,
      "name": "crypt_example_py",
      "owner": "metahashorg",
      "full_name": "metahashorg/crypt_example_py",
      "description": "This repository contains a script written in Python that describes the algorithm for the Metahash address generation using cryptography module.",
      "language": "Python",
      "stars": 3,
      "forks": 2,
      "url": "https://github.com/metahashorg/crypt_example_py",
      "tags": [
        "api"
      ]
    },
    {
      "id": 203,
      "name": "Code_Alpha",
      "owner": "Coder-X15",
      "full_name": "Coder-X15/Code_Alpha",
      "description": "Cryptography API for Python",
      "language": "Python",
      "stars": 3,
      "forks": 1,
      "url": "https://github.com/Coder-X15/Code_Alpha",
      "tags": [
        "cryptography-api",
        "decoding",
        "mental-ability"
      ]
    },
    {
      "id": 204,
      "name": "img_encryption_api",
      "owner": "karthik0309",
      "full_name": "karthik0309/img_encryption_api",
      "description": "Image encryption with reversible data hiding",
      "language": "Python",
      "stars": 3,
      "forks": 1,
      "url": "https://github.com/karthik0309/img_encryption_api",
      "tags": [
        "aes-encryption",
        "cryptography",
        "data-hiding",
        "django-rest-framework",
        "pillow",
        "python"
      ]
    },
    {
      "id": 205,
      "name": "Dront-Python",
      "owner": "Pavlo0963",
      "full_name": "Pavlo0963/Dront-Python",
      "description": "Dront is multi-language, cross-platform library that provides cryptographic APIs that are secure, easy to use correctly, and hard(er) to misuse.",
      "language": "Python",
      "stars": 3,
      "forks": 0,
      "url": "https://github.com/Pavlo0963/Dront-Python",
      "tags": [
        "django",
        "django-framework",
        "docker-container",
        "python",
        "rest-api"
      ]
    },
    {
      "id": 206,
      "name": "Crypto-Commando",
      "owner": "tkovacic",
      "full_name": "tkovacic/Crypto-Commando",
      "description": "Automated python based cryptographic trading engine built using algorithmic indicators and market fitted deep neural networking models commissioned through CoinBase Pro API Platform by Tim Kovacic using CBPro SDK by DanPaguin",
      "language": "Python",
      "stars": 3,
      "forks": 0,
      "url": "https://github.com/tkovacic/Crypto-Commando",
      "tags": []
    },
    {
      "id": 207,
      "name": "IMF",
      "owner": "anshika1307-code",
      "full_name": "anshika1307-code/IMF",
      "description": "Chat messenger decryption and analysis software (Instant Messenger Forensic System) - assists investigators in accessing encrypted instant messenger databases and enables them to analyze the data from various aspects, such as identifying potential honeytraps. Technologies used include Python, cryptography, APIs, and machine learning. ",
      "language": "Python",
      "stars": 3,
      "forks": 0,
      "url": "https://github.com/anshika1307-code/IMF",
      "tags": []
    },
    {
      "id": 251,
      "name": "jpo-security-svcs",
      "owner": "usdot-jpo-ode",
      "full_name": "usdot-jpo-ode/jpo-security-svcs",
      "description": "This module exposes a RESTful API for performing cryptographic functions.",
      "language": "Java",
      "stars": 3,
      "forks": 3,
      "url": "https://github.com/usdot-jpo-ode/jpo-security-svcs",
      "tags": []
    },
    {
      "id": 252,
      "name": "DL-crypto-api-auto-recommendation",
      "owner": "Anya92929",
      "full_name": "Anya92929/DL-crypto-api-auto-recommendation",
      "description": "An open-sourced work for deep learning based solution of cryptographic API recommendation",
      "language": "Java",
      "stars": 3,
      "forks": 2,
      "url": "https://github.com/Anya92929/DL-crypto-api-auto-recommendation",
      "tags": []
    },
    {
      "id": 209,
      "name": "CookieLogin",
      "owner": "daknuett",
      "full_name": "daknuett/CookieLogin",
      "description": "Login To Websites/APIs using Cryptographic Cookies",
      "language": "Python",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/daknuett/CookieLogin",
      "tags": []
    },
    {
      "id": 208,
      "name": "Cryptography-Rest_APIs",
      "owner": "Amn04",
      "full_name": "Amn04/Cryptography-Rest_APIs",
      "description": "This project is to create REST APIs for all cryptographic algorithms.",
      "language": "Python",
      "stars": 2,
      "forks": 2,
      "url": "https://github.com/Amn04/Cryptography-Rest_APIs",
      "tags": [
        "aes-encryption",
        "cryptography",
        "rest-api",
        "rsa-cryptography"
      ]
    },
    {
      "id": 210,
      "name": "Private-Notes-back-end-API",
      "owner": "claremw",
      "full_name": "claremw/Private-Notes-back-end-API",
      "description": "Employed the Python cryptography library to implement symmetric cryptographic primitives to ensure user privacy in a back-end API for a private notes application",
      "language": "Python",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/claremw/Private-Notes-back-end-API",
      "tags": []
    },
    {
      "id": 211,
      "name": "cryptography_project_team7",
      "owner": "CryptographyProject-Team7",
      "full_name": "CryptographyProject-Team7/cryptography_project_team7",
      "description": " Voice assistants are a very convenient feature increasingly being found on most smartphones and other home appliances. But as the companies behind voice assistants admit that our voice commands are being recorded for quality assurance purposes, the personal data of millions of consumers is at risk.  This leaves the possibility of hackers breaking into companies' databases and stealing our personal information, preferences and the structure of our voices which can be forged to sound like us.  Thus to mitigate the potential damage posed by this intrusion, we propose a system which converts the speech commands into text, encrypted using double key RSA, and hashed and salted to be stored anonymously so that the most hackers can get would be random texts of customer preferences. This model can also help to send secure voice messages from one device to another.  Using the speech to text function and the secured encryption and authentication system, voice messages can be used for convenience or for the visually impaired. To implement this model, we use socket connection and the Google Speech to Text API to emulate the voice assistants.  It is then encrypted by a modified RSA encryption system for encrypting the text and the key to decrypt the text. The ciphertext is then hashed with a salt to prevent easy decryption.",
      "language": "Python",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/CryptographyProject-Team7/cryptography_project_team7",
      "tags": []
    },
    {
      "id": 212,
      "name": "Authentication_Engine_Python_Flask",
      "owner": "osmanGuler19",
      "full_name": "osmanGuler19/Authentication_Engine_Python_Flask",
      "description": "Making simple authorization API for projects. This is for understanding secure software development and cryptography principles",
      "language": "Python",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/osmanGuler19/Authentication_Engine_Python_Flask",
      "tags": []
    },
    {
      "id": 213,
      "name": "pykeys",
      "owner": "agu3rra",
      "full_name": "agu3rra/pykeys",
      "description": "Securely store and use your API keys",
      "language": "Python",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/agu3rra/pykeys",
      "tags": [
        "api",
        "coding",
        "cryptography",
        "key",
        "secure",
        "token"
      ]
    },
    {
      "id": 214,
      "name": "kim-ir-sen-project",
      "owner": "Vadim-Burns",
      "full_name": "Vadim-Burns/kim-ir-sen-project",
      "description": ":lock::floppy_disk:Kim Ir Sen project provides ability to create small encrypted notes. This project has API.",
      "language": "Python",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/Vadim-Burns/kim-ir-sen-project",
      "tags": [
        "cryptography",
        "flask",
        "peewee",
        "python"
      ]
    },
    {
      "id": 215,
      "name": "quantum_sphincs_api_demo",
      "owner": "brunoleomenezes",
      "full_name": "brunoleomenezes/quantum_sphincs_api_demo",
      "description": "Demonstration of post-quantum cryptography resilience using SPHINCS+ integrated with simulated quantum attacks. This project combines SPHINCS+ digital signatures with quantum circuit simulations built with Qiskit. A REST API is included to enable automated and remote execution of tests and attacks, making the framework suitable.",
      "language": "Python",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/brunoleomenezes/quantum_sphincs_api_demo",
      "tags": [
        "cryptography",
        "cybersecurity",
        "digital-signatures",
        "entanglement",
        "ghz",
        "grover",
        "post-quantum",
        "post-quantum-cryptography",
        "qiskit",
        "quantum-attacks",
        "quantum-computing",
        "sphincs",
        "sphincsplus"
      ]
    },
    {
      "id": 216,
      "name": "cryptosnake",
      "owner": "reppon97",
      "full_name": "reppon97/cryptosnake",
      "description": "Simple, unofficial python wrapper for Binance API. You'll find this easy-to-use package helpful if you're interested in general market data and cryptocurrency values. You don't need to have a Binance account or API Key since you can't purchase/trade cryptocurrencies using this package.",
      "language": "Python",
      "stars": 2,
      "forks": 2,
      "url": "https://github.com/reppon97/cryptosnake",
      "tags": [
        "api",
        "binance",
        "bitcoin",
        "crypto",
        "cryptocurrencies",
        "cryptocurrency",
        "cryptocurrency-exchanges",
        "cryptography",
        "data",
        "ethereum",
        "json",
        "litecoin",
        "python",
        "python3",
        "statistics"
      ]
    },
    {
      "id": 217,
      "name": "ITBA-Proyecto-Final-Certificacion-Profesional-Python",
      "owner": "GonzaloMartin",
      "full_name": "GonzaloMartin/ITBA-Proyecto-Final-Certificacion-Profesional-Python",
      "description": "Proyecto Final de la Certificación Profesional en Python, dictado por ITBA. Instituto Tecnológico de Buenos Aires.",
      "language": "Python",
      "stars": 2,
      "forks": 1,
      "url": "https://github.com/GonzaloMartin/ITBA-Proyecto-Final-Certificacion-Profesional-Python",
      "tags": [
        "api",
        "console-application",
        "cryptography",
        "database",
        "network-programming",
        "polygon",
        "python"
      ]
    },
    {
      "id": 218,
      "name": "Crypto-Commando-Monitor",
      "owner": "tkovacic",
      "full_name": "tkovacic/Crypto-Commando-Monitor",
      "description": "Automated python based cryptographic trading engine built using hard coded rulesets based on conceptualized and customized delegation levels commissioned through CoinBase Pro API Platform by Tim Kovacic using CBPro SDK by DanPaguin",
      "language": "Python",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/tkovacic/Crypto-Commando-Monitor",
      "tags": []
    },
    {
      "id": 253,
      "name": "Apigee-CustomPolicy-RsaCrypto",
      "owner": "DinoChiesa",
      "full_name": "DinoChiesa/Apigee-CustomPolicy-RsaCrypto",
      "description": "This is a custom Apigee policy, implemented in Java, that performs RSA Encryption and Decryption of data or message payloads, or RSA signing of data or message payloads, or verification of such signatures.",
      "language": "Java",
      "stars": 2,
      "forks": 4,
      "url": "https://github.com/DinoChiesa/Apigee-CustomPolicy-RsaCrypto",
      "tags": [
        "apigee",
        "cryptography",
        "rsa"
      ]
    },
    {
      "id": 254,
      "name": "cryptography",
      "owner": "ericbalawejder",
      "full_name": "ericbalawejder/cryptography",
      "description": "A collection of modern cryptography practices with the Java Security API.",
      "language": "Java",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/ericbalawejder/cryptography",
      "tags": []
    },
    {
      "id": 255,
      "name": "cryptography",
      "owner": "AtifAbbAsi19",
      "full_name": "AtifAbbAsi19/cryptography",
      "description": "Cryptography using Conceal Android Conceal provides a set of Java APIs to perform cryptography on Android. It was designed to be able to encrypt large files on disk in a fast and memory efficient manner.",
      "language": "Java",
      "stars": 2,
      "forks": 1,
      "url": "https://github.com/AtifAbbAsi19/cryptography",
      "tags": [
        "android",
        "cryptography",
        "cryptography-using-conceal",
        "encryption",
        "facebook",
        "java",
        "keychain"
      ]
    },
    {
      "id": 256,
      "name": "poc-spring-boot-cryptography",
      "owner": "miguel-armas-abt",
      "full_name": "miguel-armas-abt/poc-spring-boot-cryptography",
      "description": "[POC] Consumo de API RESTful con Spring Boot, aplicado al caso de uso \"Consulta de clientes y encriptación del password\". Implementa RestTemplate, H2, modos de encriptación AES, RSA.",
      "language": "Java",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/miguel-armas-abt/poc-spring-boot-cryptography",
      "tags": []
    },
    {
      "id": 257,
      "name": "common-crypto",
      "owner": "twuni",
      "full_name": "twuni/common-crypto",
      "description": "This library contains a lightweight API for cryptographic functions, particularly with respect to public key cryptography.",
      "language": "Java",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/twuni/common-crypto",
      "tags": []
    },
    {
      "id": 258,
      "name": "cloudproof_java",
      "owner": "Cosmian",
      "full_name": "Cosmian/cloudproof_java",
      "description": "The Java API library to Cosmian Cloudproof Encryption",
      "language": "Java",
      "stars": 2,
      "forks": 1,
      "url": "https://github.com/Cosmian/cloudproof_java",
      "tags": [
        "cloud",
        "cloudproof",
        "cryptography",
        "java"
      ]
    },
    {
      "id": 259,
      "name": "SecureDataTransmission",
      "owner": "suvadityamuk",
      "full_name": "suvadityamuk/SecureDataTransmission",
      "description": "Fast and simple client to encrypt and decrypt data, built on Java's cryptographic APIs. ",
      "language": "Java",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/suvadityamuk/SecureDataTransmission",
      "tags": []
    },
    {
      "id": 260,
      "name": "libsilence-java",
      "owner": "delthas",
      "full_name": "delthas/libsilence-java",
      "description": "Lightweight API for the Silence protocol",
      "language": "Java",
      "stars": 2,
      "forks": 0,
      "url": "https://github.com/delthas/libsilence-java",
      "tags": [
        "cryptography",
        "java-8",
        "silence",
        "sms",
        "smssecure",
        "textsecure"
      ]
    },
    {
      "id": 219,
      "name": "cryptography",
      "owner": "boterop",
      "full_name": "boterop/cryptography",
      "description": "Cryptography API",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/boterop/cryptography",
      "tags": []
    },
    {
      "id": 220,
      "name": "CryptoAPI",
      "owner": "DrGregDoyle",
      "full_name": "DrGregDoyle/CryptoAPI",
      "description": "API for cryptographic tools",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/DrGregDoyle/CryptoAPI",
      "tags": []
    },
    {
      "id": 221,
      "name": "CryptographyProjects",
      "owner": "krypt0k1",
      "full_name": "krypt0k1/CryptographyProjects",
      "description": "Focuses on secure cryptographic processes and hardware interactions. Includes tools for managing PKCS#11 infrastructures, exporting public keys, performing encryption and decryption operations, uploading x.509 certificates to Hardware Security Modules (HSMs), and signing files via a Flask API. ",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/krypt0k1/CryptographyProjects",
      "tags": [
        "cryptography",
        "pkcs11",
        "pkcs11-tool"
      ]
    },
    {
      "id": 222,
      "name": "opentls",
      "owner": "joao-gi",
      "full_name": "joao-gi/opentls",
      "description": "Cryptographic APIs for Python using OpenSSL",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/joao-gi/opentls",
      "tags": []
    },
    {
      "id": 223,
      "name": "rsa-cryptography-auth",
      "owner": "DennysOliveira",
      "full_name": "DennysOliveira/rsa-cryptography-auth",
      "description": "A Python RSA Encrypted Authentication CLI Application and Flask API as an experimentation for learning how to build a secure data transfer for a real world scenario.",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/DennysOliveira/rsa-cryptography-auth",
      "tags": [
        "cli-app",
        "python",
        "rsa-cryptography"
      ]
    },
    {
      "id": 224,
      "name": "Elliptic-Curve-Cryptography",
      "owner": "YIboupm",
      "full_name": "YIboupm/Elliptic-Curve-Cryptography",
      "description": "This project provides an API service using FastAPI to encrypt and decrypt files securely with Elliptic Curve Cryptography (ECC) and AES. It ensures data confidentiality by combining asymmetric and symmetric encryption methods.",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/YIboupm/Elliptic-Curve-Cryptography",
      "tags": []
    },
    {
      "id": 225,
      "name": "api_misuse",
      "owner": "atharvasalunke",
      "full_name": "atharvasalunke/api_misuse",
      "description": "Python tool to analyze cryptographic API misuse in open source projects",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/atharvasalunke/api_misuse",
      "tags": []
    },
    {
      "id": 226,
      "name": "Cryptographic_Pre-Commitments",
      "owner": "richamehta87",
      "full_name": "richamehta87/Cryptographic_Pre-Commitments",
      "description": "RESTful APIs that demo principles of cryptographic pre-commitments",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/richamehta87/Cryptographic_Pre-Commitments",
      "tags": []
    },
    {
      "id": 227,
      "name": "REST-Key-Xfer",
      "owner": "ThalesGroup",
      "full_name": "ThalesGroup/REST-Key-Xfer",
      "description": "Utility for reading and writing cryptographic key material using REST APIs",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/ThalesGroup/REST-Key-Xfer",
      "tags": []
    },
    {
      "id": 228,
      "name": "cryptcp-api",
      "owner": "molodsom",
      "full_name": "molodsom/cryptcp-api",
      "description": null,
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/molodsom/cryptcp-api",
      "tags": [
        "cryptcp",
        "cryptcp-api",
        "cryptography",
        "cryptopro",
        "cryptoprocsp"
      ]
    },
    {
      "id": 229,
      "name": "password-app",
      "owner": "4bm4",
      "full_name": "4bm4/password-app",
      "description": "Password API management ",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/4bm4/password-app",
      "tags": [
        "api",
        "cryptography",
        "js",
        "python",
        "security",
        "sqlite"
      ]
    },
    {
      "id": 230,
      "name": "blockrypt",
      "owner": "samarthkulshrestha",
      "full_name": "samarthkulshrestha/blockrypt",
      "description": "minimal blockchain implemented in python. communicates over a REST API",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/samarthkulshrestha/blockrypt",
      "tags": [
        "blockchain",
        "cryptography",
        "python",
        "rest-api"
      ]
    },
    {
      "id": 898,
      "name": "CryptoStrings",
      "owner": "CatchySmile",
      "full_name": "CatchySmile/CryptoStrings",
      "description": "Cryptographically secure random generator for strings, numbers, passwords, API keys, and bytes",
      "language": "Python",
      "stars": 1,
      "forks": 0,
      "url": "https://github.com/CatchySmile/CryptoStrings",
      "tags": [
        "api",
        "cryptography",
        "cryptography-tools",
        "encryption",
        "package",
        "python"
      ]
    }
  ]
}